// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.ebay.marketplace.search.v1.services;

import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * 
 * Container for the data of a single item that matches the search criteria. Finding API calls return an object of this type, filled with the item's data.
 * 
 */
public class SearchItem   {

	@Element
	private String itemId;
    
	@Element
	private String title;
    
	@Element
	private String globalId;
    
	@Element
	private String subtitle;
    
	@Element
	private Category primaryCategory;
    
	@Element
	private Category secondaryCategory;
    
	@Element
	private String galleryURL;
    
	@Element
	private GalleryInfoContainer galleryInfoContainer;
    
	@Element
	private String viewItemURL;
    
	@Element
	private String charityId;
    
	@Element
	private ProductId productId;
    
	@Element
	private List<String> paymentMethod;
    
	@Element
	private Boolean autoPay;
    
	@Element
	private String postalCode;
    
	@Element
	private String location;
    
	@Element
	private String country;
    
	@Element
	private Storefront storeInfo;
    
	@Element
	private SellerInfo sellerInfo;
    
	@Element
	private ShippingInfo shippingInfo;
    
	@Element
	private SellingStatus sellingStatus;
    
	@Element
	private ListingInfo listingInfo;
    
	@Element
	private Boolean returnsAccepted;
    
	@Element
	private List<String> galleryPlusPictureURL;
    
	@Element
	private String compatibility;
    
	@Element
	private Distance distance;
    
	@Element
	private Condition condition;
    
	@Element
	private Boolean isMultiVariationListing;
    
	@Element
	private DiscountPriceInfo discountPriceInfo;
    
	@Element
	private String pictureURLSuperSize;
    
	@Element
	private String pictureURLLarge;
    
	@Element
	private UnitPriceInfo unitPrice;
    
	@Element
	private List<ItemAttribute> attribute;
    
	@Element
	private Boolean topRatedListing;
    
	@Element
	private String delimiter;
    
	private List<Object> any;
    
    
	/**
     * public getter
     *
     * 
     * The ID that uniquely identifies the item listing. eBay generates this
     * ID when an item is listed. ID values are unique across all eBay sites.
     * 
     *
     * @returns java.lang.String
	 */
	public String getItemId() {
	    return this.itemId;
	}
	
	/**
	 * public setter
	 *
     * 
     * The ID that uniquely identifies the item listing. eBay generates this
     * ID when an item is listed. ID values are unique across all eBay sites.
     * 
     *
     * @param java.lang.String
	 */
	public void setItemId(String itemId) {
	    this.itemId = itemId;
	}
	/**
     * public getter
     *
     * 
     * Name of the item as it appears in the listing title, or in search and
     * browse results.
     * 
     *
     * @returns java.lang.String
	 */
	public String getTitle() {
	    return this.title;
	}
	
	/**
	 * public setter
	 *
     * 
     * Name of the item as it appears in the listing title, or in search and
     * browse results.
     * 
     *
     * @param java.lang.String
	 */
	public void setTitle(String title) {
	    this.title = title;
	}
	/**
     * public getter
     *
     * 
     * The identifier for the site on which the item is listed. Returns a Global
     * ID, which is a unique identifier that specifies the combination of the
     * site, language, and territory. In other eBay APIs (such as the Shopping
     * API), this value is know as the site ID.
     * 
     *
     * @returns java.lang.String
	 */
	public String getGlobalId() {
	    return this.globalId;
	}
	
	/**
	 * public setter
	 *
     * 
     * The identifier for the site on which the item is listed. Returns a Global
     * ID, which is a unique identifier that specifies the combination of the
     * site, language, and territory. In other eBay APIs (such as the Shopping
     * API), this value is know as the site ID.
     * 
     *
     * @param java.lang.String
	 */
	public void setGlobalId(String globalId) {
	    this.globalId = globalId;
	}
	/**
     * public getter
     *
     * 
     * Subtitle of the item. Only returned if the seller included a subtitle for
     * the listing.
     * 
     *
     * @returns java.lang.String
	 */
	public String getSubtitle() {
	    return this.subtitle;
	}
	
	/**
	 * public setter
	 *
     * 
     * Subtitle of the item. Only returned if the seller included a subtitle for
     * the listing.
     * 
     *
     * @param java.lang.String
	 */
	public void setSubtitle(String subtitle) {
	    this.subtitle = subtitle;
	}
	/**
     * public getter
     *
     * 
     * Details about the first (or only) category in which the item is listed.
     * Note that items can be listed in more than a single category.
     * 
     *
     * @returns com.ebay.marketplace.search.v1.services.Category
	 */
	public Category getPrimaryCategory() {
	    return this.primaryCategory;
	}
	
	/**
	 * public setter
	 *
     * 
     * Details about the first (or only) category in which the item is listed.
     * Note that items can be listed in more than a single category.
     * 
     *
     * @param com.ebay.marketplace.search.v1.services.Category
	 */
	public void setPrimaryCategory(Category primaryCategory) {
	    this.primaryCategory = primaryCategory;
	}
	/**
     * public getter
     *
     * 
     * Details about the second category in which the item is listed. This
     * element is not returned if the seller did not specify a secondary
     * category.
     * 
     *
     * @returns com.ebay.marketplace.search.v1.services.Category
	 */
	public Category getSecondaryCategory() {
	    return this.secondaryCategory;
	}
	
	/**
	 * public setter
	 *
     * 
     * Details about the second category in which the item is listed. This
     * element is not returned if the seller did not specify a secondary
     * category.
     * 
     *
     * @param com.ebay.marketplace.search.v1.services.Category
	 */
	public void setSecondaryCategory(Category secondaryCategory) {
	    this.secondaryCategory = secondaryCategory;
	}
	/**
     * public getter
     *
     * 
     * URL for the Gallery thumbnail image. Returned only if the seller
     * uploaded images for the item or the item was listed using a product
     * identifier.
     * 
     *
     * @returns java.lang.String
	 */
	public String getGalleryURL() {
	    return this.galleryURL;
	}
	
	/**
	 * public setter
	 *
     * 
     * URL for the Gallery thumbnail image. Returned only if the seller
     * uploaded images for the item or the item was listed using a product
     * identifier.
     * 
     *
     * @param java.lang.String
	 */
	public void setGalleryURL(String galleryURL) {
	    this.galleryURL = galleryURL;
	}
	/**
     * public getter
     *
     * 
     * Contains three URLs for item thumbnail images in standard sizes. Not
     * returned if the item has no images. That is, if the item was not listed
     * using a product identifier and the seller has not uploaded images, the
     * container will not be returned, even when the outputSelector is set to
     * GalleryInfo.
     * 
     *
     * @returns com.ebay.marketplace.search.v1.services.GalleryInfoContainer
	 */
	public GalleryInfoContainer getGalleryInfoContainer() {
	    return this.galleryInfoContainer;
	}
	
	/**
	 * public setter
	 *
     * 
     * Contains three URLs for item thumbnail images in standard sizes. Not
     * returned if the item has no images. That is, if the item was not listed
     * using a product identifier and the seller has not uploaded images, the
     * container will not be returned, even when the outputSelector is set to
     * GalleryInfo.
     * 
     *
     * @param com.ebay.marketplace.search.v1.services.GalleryInfoContainer
	 */
	public void setGalleryInfoContainer(GalleryInfoContainer galleryInfoContainer) {
	    this.galleryInfoContainer = galleryInfoContainer;
	}
	/**
     * public getter
     *
     * 
     * The URL to view this specific listing on eBay.
     * <br><br>
     * The returned URL is optimized to support natural search. That is, the URL
     * is designed to make items on eBay easier to find via popular internet
     * search engines. The URL includes the item title along with other
     * optimizations.
     * <br><br>
     * If you enabled affiliate tracking in the call, viewItemURL contains a
     * string that includes affiliate tracking information.
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * eBay URLs returned in fields, such as <b
     * class="con">viewItemURL</b>, are subject to syntax and other
     * changes without notice. To avoid problems in your application when eBay
     * alters the URL format, we advise you to avoid parsing eBay URLs
     * programmatically. We strive to ensure that other fields in the response
     * contain all the information that is encoded in the URL, and more.
     * </span>
     * 
     *
     * @returns java.lang.String
	 */
	public String getViewItemURL() {
	    return this.viewItemURL;
	}
	
	/**
	 * public setter
	 *
     * 
     * The URL to view this specific listing on eBay.
     * <br><br>
     * The returned URL is optimized to support natural search. That is, the URL
     * is designed to make items on eBay easier to find via popular internet
     * search engines. The URL includes the item title along with other
     * optimizations.
     * <br><br>
     * If you enabled affiliate tracking in the call, viewItemURL contains a
     * string that includes affiliate tracking information.
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * eBay URLs returned in fields, such as <b
     * class="con">viewItemURL</b>, are subject to syntax and other
     * changes without notice. To avoid problems in your application when eBay
     * alters the URL format, we advise you to avoid parsing eBay URLs
     * programmatically. We strive to ensure that other fields in the response
     * contain all the information that is encoded in the URL, and more.
     * </span>
     * 
     *
     * @param java.lang.String
	 */
	public void setViewItemURL(String viewItemURL) {
	    this.viewItemURL = viewItemURL;
	}
	/**
     * public getter
     *
     * 
     * A unique identification number assigned by eBay to a registered
     * non-profit charity organization.
     * 
     *
     * @returns java.lang.String
	 */
	public String getCharityId() {
	    return this.charityId;
	}
	
	/**
	 * public setter
	 *
     * 
     * A unique identification number assigned by eBay to a registered
     * non-profit charity organization.
     * 
     *
     * @param java.lang.String
	 */
	public void setCharityId(String charityId) {
	    this.charityId = charityId;
	}
	/**
     * public getter
     *
     * 
     * Unique identifier for the eBay catalog product with which the item was
     * listed. An eBay catalog product consists of pre-filled Item Specifics,
     * additional descriptive information, plus a stock photo (if available).
     * These product details are used to pre-fill item information, which is
     * used to describe the item and can also help surface the item in searches.
     * <br><br>
     * eBay supports the following types of product ID types: ISBN, UPC, EAN,
     * and ReferenceID (ePID, also known as an eBay Product Reference ID).
     * ReferenceID values are returned when available. A UPC, ISBN, or EAN
     * product identifier will be returned only when a ReferenceID is not
     * available.
     * <br><br>
     * This productId value can be used as input with findItemsByProduct to
     * retrieve items that were listed with the specified eBay catalog product.
     * <br><br>
     * This field is only returned when a product was used to list the item.
     * 
     *
     * @returns com.ebay.marketplace.search.v1.services.ProductId
	 */
	public ProductId getProductId() {
	    return this.productId;
	}
	
	/**
	 * public setter
	 *
     * 
     * Unique identifier for the eBay catalog product with which the item was
     * listed. An eBay catalog product consists of pre-filled Item Specifics,
     * additional descriptive information, plus a stock photo (if available).
     * These product details are used to pre-fill item information, which is
     * used to describe the item and can also help surface the item in searches.
     * <br><br>
     * eBay supports the following types of product ID types: ISBN, UPC, EAN,
     * and ReferenceID (ePID, also known as an eBay Product Reference ID).
     * ReferenceID values are returned when available. A UPC, ISBN, or EAN
     * product identifier will be returned only when a ReferenceID is not
     * available.
     * <br><br>
     * This productId value can be used as input with findItemsByProduct to
     * retrieve items that were listed with the specified eBay catalog product.
     * <br><br>
     * This field is only returned when a product was used to list the item.
     * 
     *
     * @param com.ebay.marketplace.search.v1.services.ProductId
	 */
	public void setProductId(ProductId productId) {
	    this.productId = productId;
	}
	/**
     * public getter
     *
     * 
     * Identifies the payment method (or methods) the seller will accept for the
     * item (such as PayPal).
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * If the seller accepts only PayPal, the buyer can still pay with a
     * credit card. PayPal supports major credit cards.
     * </span>
     * Payment methods are not applicable to eBay Real Estate advertisement
     * listings or other Classified Ad listing formats.
     * 
     *
     * @returns java.util.List<java.lang.String>
	 */
	public List<String> getPaymentMethod() {
	    return this.paymentMethod;
	}
	
	/**
	 * public setter
	 *
     * 
     * Identifies the payment method (or methods) the seller will accept for the
     * item (such as PayPal).
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * If the seller accepts only PayPal, the buyer can still pay with a
     * credit card. PayPal supports major credit cards.
     * </span>
     * Payment methods are not applicable to eBay Real Estate advertisement
     * listings or other Classified Ad listing formats.
     * 
     *
     * @param java.util.List<java.lang.String>
	 */
	public void setPaymentMethod(List<String> paymentMethod) {
	    this.paymentMethod = paymentMethod;
	}
	/**
     * public getter
     *
     * 
     * If true, the seller requires immediate payment for the item. If false (or
     * not specified), immediate payment is not requested. Buyers must have a
     * PayPal account to purchase items that require immediate payment.
     * <br><br>
     * A seller can choose to require immediate payment for Fixed Price and Buy
     * It Now listings, including eBay Stores Inventory listings. If a Buy It
     * Now item ends as an auction (that is, if the Buy It Now option is removed
     * due to bids being placed on the listing), the immediate payment
     * requirement does not apply.
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * The value of the AutoPay flag indicates the seller's stated preference
     * only. It does not indicate whether the listing is still a candidate for
     * purchase via immediate payment. For example, if a listing receives bids
     * and no longer qualifies for immediate payment, the value of the AutoPay
     * flag does not change.
     * </span>
     * <br>
     * Only applicable to items listed on PayPal-enabled sites and in categories
     * that support immediate payment.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getAutoPay() {
	    return this.autoPay;
	}
	
	/**
	 * public setter
	 *
     * 
     * If true, the seller requires immediate payment for the item. If false (or
     * not specified), immediate payment is not requested. Buyers must have a
     * PayPal account to purchase items that require immediate payment.
     * <br><br>
     * A seller can choose to require immediate payment for Fixed Price and Buy
     * It Now listings, including eBay Stores Inventory listings. If a Buy It
     * Now item ends as an auction (that is, if the Buy It Now option is removed
     * due to bids being placed on the listing), the immediate payment
     * requirement does not apply.
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * The value of the AutoPay flag indicates the seller's stated preference
     * only. It does not indicate whether the listing is still a candidate for
     * purchase via immediate payment. For example, if a listing receives bids
     * and no longer qualifies for immediate payment, the value of the AutoPay
     * flag does not change.
     * </span>
     * <br>
     * Only applicable to items listed on PayPal-enabled sites and in categories
     * that support immediate payment.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setAutoPay(Boolean autoPay) {
	    this.autoPay = autoPay;
	}
	/**
     * public getter
     *
     * 
     * The postal code where the listed item is located. This field is returned
     * only if a postal code has been specified by the seller. eBay proximity
     * and local search behavior can use the combination of buyerPostalCode and
     * postalCode values.
     * 
     *
     * @returns java.lang.String
	 */
	public String getPostalCode() {
	    return this.postalCode;
	}
	
	/**
	 * public setter
	 *
     * 
     * The postal code where the listed item is located. This field is returned
     * only if a postal code has been specified by the seller. eBay proximity
     * and local search behavior can use the combination of buyerPostalCode and
     * postalCode values.
     * 
     *
     * @param java.lang.String
	 */
	public void setPostalCode(String postalCode) {
	    this.postalCode = postalCode;
	}
	/**
     * public getter
     *
     * 
     * Physical location of the item, as specified by the seller. This gives a
     * general indication from where the item will be shipped (or delivered).
     * 
     *
     * @returns java.lang.String
	 */
	public String getLocation() {
	    return this.location;
	}
	
	/**
	 * public setter
	 *
     * 
     * Physical location of the item, as specified by the seller. This gives a
     * general indication from where the item will be shipped (or delivered).
     * 
     *
     * @param java.lang.String
	 */
	public void setLocation(String location) {
	    this.location = location;
	}
	/**
     * public getter
     *
     * 
     * Two-letter ISO 3166 country code to indicate the country where the item
     * is located (e.g., "US" for the United States or "GB" for the United
     * Kingdom).
     * 
     *
     * @returns java.lang.String
	 */
	public String getCountry() {
	    return this.country;
	}
	
	/**
	 * public setter
	 *
     * 
     * Two-letter ISO 3166 country code to indicate the country where the item
     * is located (e.g., "US" for the United States or "GB" for the United
     * Kingdom).
     * 
     *
     * @param java.lang.String
	 */
	public void setCountry(String country) {
	    this.country = country;
	}
	/**
     * public getter
     *
     * 
     * Information about the eBay store in which the item is listed. Only
     * returned if the item is listed in a store and StoreInfo is specified in
     * the outputSelector field in the request.
     * 
     *
     * @returns com.ebay.marketplace.search.v1.services.Storefront
	 */
	public Storefront getStoreInfo() {
	    return this.storeInfo;
	}
	
	/**
	 * public setter
	 *
     * 
     * Information about the eBay store in which the item is listed. Only
     * returned if the item is listed in a store and StoreInfo is specified in
     * the outputSelector field in the request.
     * 
     *
     * @param com.ebay.marketplace.search.v1.services.Storefront
	 */
	public void setStoreInfo(Storefront storeInfo) {
	    this.storeInfo = storeInfo;
	}
	/**
     * public getter
     *
     * 
     * Information about the item's seller. Only returned if SellerInfo is
     * specified in the outputSelector field in the request.
     * 
     *
     * @returns com.ebay.marketplace.search.v1.services.SellerInfo
	 */
	public SellerInfo getSellerInfo() {
	    return this.sellerInfo;
	}
	
	/**
	 * public setter
	 *
     * 
     * Information about the item's seller. Only returned if SellerInfo is
     * specified in the outputSelector field in the request.
     * 
     *
     * @param com.ebay.marketplace.search.v1.services.SellerInfo
	 */
	public void setSellerInfo(SellerInfo sellerInfo) {
	    this.sellerInfo = sellerInfo;
	}
	/**
     * public getter
     *
     * 
     * Container for data about a listing's shipping details.
     * 
     *
     * @returns com.ebay.marketplace.search.v1.services.ShippingInfo
	 */
	public ShippingInfo getShippingInfo() {
	    return this.shippingInfo;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container for data about a listing's shipping details.
     * 
     *
     * @param com.ebay.marketplace.search.v1.services.ShippingInfo
	 */
	public void setShippingInfo(ShippingInfo shippingInfo) {
	    this.shippingInfo = shippingInfo;
	}
	/**
     * public getter
     *
     * 
     * Specifies the item's selling status with regards to eBay's processing
     * workflow.
     * 
     *
     * @returns com.ebay.marketplace.search.v1.services.SellingStatus
	 */
	public SellingStatus getSellingStatus() {
	    return this.sellingStatus;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the item's selling status with regards to eBay's processing
     * workflow.
     * 
     *
     * @param com.ebay.marketplace.search.v1.services.SellingStatus
	 */
	public void setSellingStatus(SellingStatus sellingStatus) {
	    this.sellingStatus = sellingStatus;
	}
	/**
     * public getter
     *
     * 
     * The format type of the listing, such as online auction, fixed price, or
     * advertisement.
     * 
     *
     * @returns com.ebay.marketplace.search.v1.services.ListingInfo
	 */
	public ListingInfo getListingInfo() {
	    return this.listingInfo;
	}
	
	/**
	 * public setter
	 *
     * 
     * The format type of the listing, such as online auction, fixed price, or
     * advertisement.
     * 
     *
     * @param com.ebay.marketplace.search.v1.services.ListingInfo
	 */
	public void setListingInfo(ListingInfo listingInfo) {
	    this.listingInfo = listingInfo;
	}
	/**
     * public getter
     *
     * 
     * This is set to true if the seller accepts return of the item.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getReturnsAccepted() {
	    return this.returnsAccepted;
	}
	
	/**
	 * public setter
	 *
     * 
     * This is set to true if the seller accepts return of the item.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setReturnsAccepted(Boolean returnsAccepted) {
	    this.returnsAccepted = returnsAccepted;
	}
	/**
     * public getter
     *
     * 
     * URL for the Gallery Plus image. The size of Gallery Plus images (up to
     * 500 pixels on the longest side) is bigger than the size of standard
     * gallery images. In site search results, you can view the Gallery Plus
     * image by hovering over or clicking the Enlarge link or magifying glass
     * icon. This field is only returned when the seller has opted for
     * the Gallery Plus option for the given item.
     * 
     *
     * @returns java.util.List<java.lang.String>
	 */
	public List<String> getGalleryPlusPictureURL() {
	    return this.galleryPlusPictureURL;
	}
	
	/**
	 * public setter
	 *
     * 
     * URL for the Gallery Plus image. The size of Gallery Plus images (up to
     * 500 pixels on the longest side) is bigger than the size of standard
     * gallery images. In site search results, you can view the Gallery Plus
     * image by hovering over or clicking the Enlarge link or magifying glass
     * icon. This field is only returned when the seller has opted for
     * the Gallery Plus option for the given item.
     * 
     *
     * @param java.util.List<java.lang.String>
	 */
	public void setGalleryPlusPictureURL(List<String> galleryPlusPictureURL) {
	    this.galleryPlusPictureURL = galleryPlusPictureURL;
	}
	/**
     * public getter
     *
     * 
     * Starting in March 2010, parts compatibility will be supported in limited
     * Parts & Accessories categories for eBay Motors in the Production
     * environment. For these categories, a compatible application will always
     * be a vehicle, which is specified by a combination of make, model, and
     * year. Optionally, trim and engine data may also be specifed for a
     * vehicle.
     * <br><br>
     * This field returns terms from the keywords in the request that match
     * values in one of the item's compatible applications (vehicles). If the
     * keywords match more than one compatible application for an item, the
     * field returns "Two or more of your vehicles" to indicate multiple
     * matches.
     * <br><br>
     * For example, keyword queries that contain vehicle details, such as make
     * and model (e.g., Honda Accord), in addition to keywords for the part or
     * accessory, will search through structured parts compatibility information
     * for matching listings. If an item has a 2007 Honda Accord (any trim or
     * engine) specified as a compatible application, and the item matches the
     * part or accessory terms in the query, this field will return the matching
     * terms from the query (i.e., Honda Accord).
     * <br><br>
     * Parts compatibility is an eBay feature that uses structured data to
     * associate compatible assemblies with parts and accessories listed on
     * eBay. For example, parts compatibility enables sellers to specify
     * accurately and comprehensively the vehicles on which a side mirror or a
     * rim fit. Parts compatibility improves search relevancy and frees up item
     * titles and descriptions for more useful descriptions of the part.
     * 
     *
     * @returns java.lang.String
	 */
	public String getCompatibility() {
	    return this.compatibility;
	}
	
	/**
	 * public setter
	 *
     * 
     * Starting in March 2010, parts compatibility will be supported in limited
     * Parts & Accessories categories for eBay Motors in the Production
     * environment. For these categories, a compatible application will always
     * be a vehicle, which is specified by a combination of make, model, and
     * year. Optionally, trim and engine data may also be specifed for a
     * vehicle.
     * <br><br>
     * This field returns terms from the keywords in the request that match
     * values in one of the item's compatible applications (vehicles). If the
     * keywords match more than one compatible application for an item, the
     * field returns "Two or more of your vehicles" to indicate multiple
     * matches.
     * <br><br>
     * For example, keyword queries that contain vehicle details, such as make
     * and model (e.g., Honda Accord), in addition to keywords for the part or
     * accessory, will search through structured parts compatibility information
     * for matching listings. If an item has a 2007 Honda Accord (any trim or
     * engine) specified as a compatible application, and the item matches the
     * part or accessory terms in the query, this field will return the matching
     * terms from the query (i.e., Honda Accord).
     * <br><br>
     * Parts compatibility is an eBay feature that uses structured data to
     * associate compatible assemblies with parts and accessories listed on
     * eBay. For example, parts compatibility enables sellers to specify
     * accurately and comprehensively the vehicles on which a side mirror or a
     * rim fit. Parts compatibility improves search relevancy and frees up item
     * titles and descriptions for more useful descriptions of the part.
     * 
     *
     * @param java.lang.String
	 */
	public void setCompatibility(String compatibility) {
	    this.compatibility = compatibility;
	}
	/**
     * public getter
     *
     * 
     * The distance that the item is from the buyer, calculated using
     * buyerPostalCode. The unit for distance varies by site, and is either
     * miles or kilometers. If the country whose site you are searching uses
     * kilometers to measure distance (for example, India/EBAY-IN), the unit is
     * kilometers. If the site is either the US or UK, the distance unit is
     * miles.
     * <br><br>
     * This value is only returned for distance-based searches. You must specify
     * a buyerPostalCode and either sort by Distance, or use a combination of
     * the MaxDistance LocalSearch itemFilters.
     * 
     *
     * @returns com.ebay.marketplace.search.v1.services.Distance
	 */
	public Distance getDistance() {
	    return this.distance;
	}
	
	/**
	 * public setter
	 *
     * 
     * The distance that the item is from the buyer, calculated using
     * buyerPostalCode. The unit for distance varies by site, and is either
     * miles or kilometers. If the country whose site you are searching uses
     * kilometers to measure distance (for example, India/EBAY-IN), the unit is
     * kilometers. If the site is either the US or UK, the distance unit is
     * miles.
     * <br><br>
     * This value is only returned for distance-based searches. You must specify
     * a buyerPostalCode and either sort by Distance, or use a combination of
     * the MaxDistance LocalSearch itemFilters.
     * 
     *
     * @param com.ebay.marketplace.search.v1.services.Distance
	 */
	public void setDistance(Distance distance) {
	    this.distance = distance;
	}
	/**
     * public getter
     *
     * 
     * Contains information about the item's condition.
     * Only returned when the seller listed the item with an
     * item condition.<br>
     * <br>
     * Different categories can support different
     * condition choices. If a listing is in two categories,
     * the seller uses condition details that are supported in
     * the primary category. Thus, even if two nearly identical
     * items are found in the same category search, they could support
     * different condition details if they have different
     * primary categories.
     * For example, suppose Seller A lists a concert T-shirt
     * in clothing, and also in music accessories as the
     * secondary category. Seller B lists an identical shirt in
     * music accessories only.
     * If you search against the music accessories category,
     * you will find both items, but seller A's shirt may have
     * condition details that are slightly different from seller B's
     * shirt, because the listings have different primary categories.
     * 
     *
     * @returns com.ebay.marketplace.search.v1.services.Condition
	 */
	public Condition getCondition() {
	    return this.condition;
	}
	
	/**
	 * public setter
	 *
     * 
     * Contains information about the item's condition.
     * Only returned when the seller listed the item with an
     * item condition.<br>
     * <br>
     * Different categories can support different
     * condition choices. If a listing is in two categories,
     * the seller uses condition details that are supported in
     * the primary category. Thus, even if two nearly identical
     * items are found in the same category search, they could support
     * different condition details if they have different
     * primary categories.
     * For example, suppose Seller A lists a concert T-shirt
     * in clothing, and also in music accessories as the
     * secondary category. Seller B lists an identical shirt in
     * music accessories only.
     * If you search against the music accessories category,
     * you will find both items, but seller A's shirt may have
     * condition details that are slightly different from seller B's
     * shirt, because the listings have different primary categories.
     * 
     *
     * @param com.ebay.marketplace.search.v1.services.Condition
	 */
	public void setCondition(Condition condition) {
	    this.condition = condition;
	}
	/**
     * public getter
     *
     * 
     * Returns true if the item is a multi-variation listing.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getIsMultiVariationListing() {
	    return this.isMultiVariationListing;
	}
	
	/**
	 * public setter
	 *
     * 
     * Returns true if the item is a multi-variation listing.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setIsMultiVariationListing(Boolean isMultiVariationListing) {
	    this.isMultiVariationListing = isMultiVariationListing;
	}
	/**
     * public getter
     *
     * 
     * Returns information on the item if it is listed as a Strikethrough Price (STP) or
     * Minimum Advertised Price (MAP) item by the seller.
     * 
     *
     * @returns com.ebay.marketplace.search.v1.services.DiscountPriceInfo
	 */
	public DiscountPriceInfo getDiscountPriceInfo() {
	    return this.discountPriceInfo;
	}
	
	/**
	 * public setter
	 *
     * 
     * Returns information on the item if it is listed as a Strikethrough Price (STP) or
     * Minimum Advertised Price (MAP) item by the seller.
     * 
     *
     * @param com.ebay.marketplace.search.v1.services.DiscountPriceInfo
	 */
	public void setDiscountPriceInfo(DiscountPriceInfo discountPriceInfo) {
	    this.discountPriceInfo = discountPriceInfo;
	}
	/**
     * public getter
     *
     * 
     * URL to a picture of the item that is 800x800 pixels in size.
     * 
     *
     * @returns java.lang.String
	 */
	public String getPictureURLSuperSize() {
	    return this.pictureURLSuperSize;
	}
	
	/**
	 * public setter
	 *
     * 
     * URL to a picture of the item that is 800x800 pixels in size.
     * 
     *
     * @param java.lang.String
	 */
	public void setPictureURLSuperSize(String pictureURLSuperSize) {
	    this.pictureURLSuperSize = pictureURLSuperSize;
	}
	/**
     * public getter
     *
     * 
     * URL to a picture of the item that is 400x400 pixels in size.
     * 
     *
     * @returns java.lang.String
	 */
	public String getPictureURLLarge() {
	    return this.pictureURLLarge;
	}
	
	/**
	 * public setter
	 *
     * 
     * URL to a picture of the item that is 400x400 pixels in size.
     * 
     *
     * @param java.lang.String
	 */
	public void setPictureURLLarge(String pictureURLLarge) {
	    this.pictureURLLarge = pictureURLLarge;
	}
	/**
     * public getter
     *
     * 
     * Contains information about the weight, volume or other quantity measurement of a listed
     * item. The European Union requires listings for certain types of products to include the
     * price per unit so buyers can accurately compare prices. eBay uses the <strong>
     * UnitInfo</strong> data and the item's listed price to calculate and display the
     * per-unit price on eBay EU sites.
     * <br/><br/>
     * <span class="tablenote">
     * <strong>Note:</strong> This information is currently required only for
     * EU business sellers, and only for listings with a Buy It Now option.
     * </span>
     * 
     *
     * @returns com.ebay.marketplace.search.v1.services.UnitPriceInfo
	 */
	public UnitPriceInfo getUnitPrice() {
	    return this.unitPrice;
	}
	
	/**
	 * public setter
	 *
     * 
     * Contains information about the weight, volume or other quantity measurement of a listed
     * item. The European Union requires listings for certain types of products to include the
     * price per unit so buyers can accurately compare prices. eBay uses the <strong>
     * UnitInfo</strong> data and the item's listed price to calculate and display the
     * per-unit price on eBay EU sites.
     * <br/><br/>
     * <span class="tablenote">
     * <strong>Note:</strong> This information is currently required only for
     * EU business sellers, and only for listings with a Buy It Now option.
     * </span>
     * 
     *
     * @param com.ebay.marketplace.search.v1.services.UnitPriceInfo
	 */
	public void setUnitPrice(UnitPriceInfo unitPrice) {
	    this.unitPrice = unitPrice;
	}
	/**
     * public getter
     *
     * 
     * Contains a name/value pair defining an item attribute. Multiple 
     * <strong>attribute</strong> containers can be returned for an item.
     * 
     *
     * @returns java.util.List<com.ebay.marketplace.search.v1.services.ItemAttribute>
	 */
	public List<ItemAttribute> getAttribute() {
	    return this.attribute;
	}
	
	/**
	 * public setter
	 *
     * 
     * Contains a name/value pair defining an item attribute. Multiple 
     * <strong>attribute</strong> containers can be returned for an item.
     * 
     *
     * @param java.util.List<com.ebay.marketplace.search.v1.services.ItemAttribute>
	 */
	public void setAttribute(List<ItemAttribute> attribute) {
	    this.attribute = attribute;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether the item listing is a <b>Top-Rated Plus</b> listing. A 
     * <b>Top-Rated Plus</b> listing must meet the following requirements:
     * <ul>
     * <li>14-day (or longer) return policy with Money Back option</li>
     * <li>1-day Handling Time or better</li>
     * <li>Listed by a <b>Top-Rated Seller</b></li>
     * </ul>
     * This field is returned only for the US (EBAY-US) site.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getTopRatedListing() {
	    return this.topRatedListing;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether the item listing is a <b>Top-Rated Plus</b> listing. A 
     * <b>Top-Rated Plus</b> listing must meet the following requirements:
     * <ul>
     * <li>14-day (or longer) return policy with Money Back option</li>
     * <li>1-day Handling Time or better</li>
     * <li>Listed by a <b>Top-Rated Seller</b></li>
     * </ul>
     * This field is returned only for the US (EBAY-US) site.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setTopRatedListing(Boolean topRatedListing) {
	    this.topRatedListing = topRatedListing;
	}
	/**
	 * public getter
	 *
     * @returns java.lang.String
	 */
	public String getDelimiter() {
	    return this.delimiter;
	}
	
	/**
	 * public setter
	 *
     * @param java.lang.String
	 */
	public void setDelimiter(String delimiter) {
	    this.delimiter = delimiter;
	}
	/**
	 * public getter
	 *
     * @returns java.util.List<java.lang.Object>
	 */
	public List<Object> getAny() {
	    return this.any;
	}
	
	/**
	 * public setter
	 *
     * @param java.util.List<java.lang.Object>
	 */
	public void setAny(List<Object> any) {
	    this.any = any;
	}

}