// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.ebay.marketplace.search.v1.services;

import com.leansoft.nano.annotation.*;
import com.leansoft.nano.custom.types.Duration;
import java.util.List;

/**
 * 
 * Selling details pertaining to the respective item.
 * 
 */
public class SellingStatus   {

	@Element
	private Amount currentPrice;
    
	@Element
	private Amount convertedCurrentPrice;
    
	@Element
	private Integer bidCount;
    
	@Element
	private String sellingState;
    
	@Element
	private Duration timeLeft;
    
	@Element
	private String delimiter;
    
	private List<Object> any;
    
    
	/**
     * public getter
     *
     * 
     * The current price of the item given in the currency of the site on which
     * the item is listed. That is, currentPrice is returned in the original
     * listing currency.
     * <br><br>
     * For competitive-bid item listings, currentPrice is the current minimum
     * bid price if the listing has no bids, or the current high bid if the
     * listing has bids. A Buy It Now price has no effect on currentPrice.
     * <br><br>
     * For Basic Fixed-Price (FixedPrice), Store Inventory (StoreInventory), Ad
     * Format (AdFormat), and Classified Ad (Classified) listings, currentPrice
     * is the current fixed price.
     * 
     *
     * @returns com.ebay.marketplace.search.v1.services.Amount
	 */
	public Amount getCurrentPrice() {
	    return this.currentPrice;
	}
	
	/**
	 * public setter
	 *
     * 
     * The current price of the item given in the currency of the site on which
     * the item is listed. That is, currentPrice is returned in the original
     * listing currency.
     * <br><br>
     * For competitive-bid item listings, currentPrice is the current minimum
     * bid price if the listing has no bids, or the current high bid if the
     * listing has bids. A Buy It Now price has no effect on currentPrice.
     * <br><br>
     * For Basic Fixed-Price (FixedPrice), Store Inventory (StoreInventory), Ad
     * Format (AdFormat), and Classified Ad (Classified) listings, currentPrice
     * is the current fixed price.
     * 
     *
     * @param com.ebay.marketplace.search.v1.services.Amount
	 */
	public void setCurrentPrice(Amount currentPrice) {
	    this.currentPrice = currentPrice;
	}
	/**
     * public getter
     *
     * 
     * The listing's current price converted to the currency of the site
     * specified in the find request (globalId).
     * 
     *
     * @returns com.ebay.marketplace.search.v1.services.Amount
	 */
	public Amount getConvertedCurrentPrice() {
	    return this.convertedCurrentPrice;
	}
	
	/**
	 * public setter
	 *
     * 
     * The listing's current price converted to the currency of the site
     * specified in the find request (globalId).
     * 
     *
     * @param com.ebay.marketplace.search.v1.services.Amount
	 */
	public void setConvertedCurrentPrice(Amount convertedCurrentPrice) {
	    this.convertedCurrentPrice = convertedCurrentPrice;
	}
	/**
     * public getter
     *
     * 
     * The number of bids that have been placed on the item.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getBidCount() {
	    return this.bidCount;
	}
	
	/**
	 * public setter
	 *
     * 
     * The number of bids that have been placed on the item.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setBidCount(Integer bidCount) {
	    this.bidCount = bidCount;
	}
	/**
     * public getter
     *
     * 
     * Specifies the listing's status in eBay's processing workflow. If an
     * item's EndTime is in the past, but there are no details about the buyer
     * or high bidder (and the user is not anonymous), you can use sellingState
     * information to determine whether eBay has finished processing the
     * listing.
     * <dl>
     * <dt>
     * <strong>sellingState values:</strong>
     * </dt>
     * <dt>
     * Active
     * </dt>
     * <dd>
     * The listing is still live. It is also possible that the auction has
     * recently ended, but eBay has not completed the final processing
     * (e.g., the high bidder is still being determined).
     * </dd>
     * <dt>
     * Canceled
     * </dt>
     * <dd>
     * The listing has been canceled by either the seller or eBay.
     * </dd>
     * <dt>
     * Ended
     * </dt>
     * <dd>
     * The listing has ended and eBay has completed the processing of the
     * sale (if any).
     * </dd>
     * <dt>
     * EndedWithSales
     * </dt>
     * <dd>
     * The listing has been ended with sales.
     * </dd>
     * <dt>
     * EndedWithoutSales
     * </dt>
     * <dd>
     * The listing has been ended without sales.
     * </dd>
     * </dl>
     * 
     *
     * @returns java.lang.String
	 */
	public String getSellingState() {
	    return this.sellingState;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the listing's status in eBay's processing workflow. If an
     * item's EndTime is in the past, but there are no details about the buyer
     * or high bidder (and the user is not anonymous), you can use sellingState
     * information to determine whether eBay has finished processing the
     * listing.
     * <dl>
     * <dt>
     * <strong>sellingState values:</strong>
     * </dt>
     * <dt>
     * Active
     * </dt>
     * <dd>
     * The listing is still live. It is also possible that the auction has
     * recently ended, but eBay has not completed the final processing
     * (e.g., the high bidder is still being determined).
     * </dd>
     * <dt>
     * Canceled
     * </dt>
     * <dd>
     * The listing has been canceled by either the seller or eBay.
     * </dd>
     * <dt>
     * Ended
     * </dt>
     * <dd>
     * The listing has ended and eBay has completed the processing of the
     * sale (if any).
     * </dd>
     * <dt>
     * EndedWithSales
     * </dt>
     * <dd>
     * The listing has been ended with sales.
     * </dd>
     * <dt>
     * EndedWithoutSales
     * </dt>
     * <dd>
     * The listing has been ended without sales.
     * </dd>
     * </dl>
     * 
     *
     * @param java.lang.String
	 */
	public void setSellingState(String sellingState) {
	    this.sellingState = sellingState;
	}
	/**
     * public getter
     *
     * 
     * Time left before the listing ends. The duration is represented in the ISO
     * 8601 duration format (PnYnMnDTnHnMnS). For listings that have ended, the
     * time left is PT0S (zero seconds). See the "duration" type for information
     * about this time format.
     * 
     *
     * @returns com.leansoft.nano.custom.types.Duration
	 */
	public Duration getTimeLeft() {
	    return this.timeLeft;
	}
	
	/**
	 * public setter
	 *
     * 
     * Time left before the listing ends. The duration is represented in the ISO
     * 8601 duration format (PnYnMnDTnHnMnS). For listings that have ended, the
     * time left is PT0S (zero seconds). See the "duration" type for information
     * about this time format.
     * 
     *
     * @param com.leansoft.nano.custom.types.Duration
	 */
	public void setTimeLeft(Duration timeLeft) {
	    this.timeLeft = timeLeft;
	}
	/**
	 * public getter
	 *
     * @returns java.lang.String
	 */
	public String getDelimiter() {
	    return this.delimiter;
	}
	
	/**
	 * public setter
	 *
     * @param java.lang.String
	 */
	public void setDelimiter(String delimiter) {
	    this.delimiter = delimiter;
	}
	/**
	 * public getter
	 *
     * @returns java.util.List<java.lang.Object>
	 */
	public List<Object> getAny() {
	    return this.any;
	}
	
	/**
	 * public setter
	 *
     * @param java.util.List<java.lang.Object>
	 */
	public void setAny(List<Object> any) {
	    this.any = any;
	}

}