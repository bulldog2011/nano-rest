// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.ebay.marketplace.search.v1.services;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * 
 * Use aspect filters to refine the number of results returned in a response.
 * Populate the aspectFilter container with aspect values obtained from the
 * response of a query that returns an aspectHistogram.
 * 
 */
public class AspectFilter implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private String aspectName;
	
	@Element
	private List<String> aspectValueName;
	
	@Element
	private String delimiter;
	
    
	/**
     * public getter
     *
     * 
     * Name of a standard item characteristic associated with a given domain.
     * For example, "Optical Zoom" or "Megapixels" are aspects for the Digital
     * Cameras domain. The current aspect names associated with a specific
     * domain can be found in the aspect histogram. Aspect histograms can be
     * retrieved for a given keyword query or category. The aspect histogram
     * contains information about aspects from the domain that is most relevant
     * to your search (or category).
     * 
     *
     * @returns java.lang.String
	 */
	public String getAspectName() {
	    return this.aspectName;
	}
	
	/**
	 * public setter
	 *
     * 
     * Name of a standard item characteristic associated with a given domain.
     * For example, "Optical Zoom" or "Megapixels" are aspects for the Digital
     * Cameras domain. The current aspect names associated with a specific
     * domain can be found in the aspect histogram. Aspect histograms can be
     * retrieved for a given keyword query or category. The aspect histogram
     * contains information about aspects from the domain that is most relevant
     * to your search (or category).
     * 
     *
     * @param java.lang.String
	 */
	public void setAspectName(String aspectName) {
	    this.aspectName = aspectName;
	}
	/**
     * public getter
     *
     * 
     * A value name for a given aspect. For example, "Point & Shoot" is a
     * value name for the "Product Type" aspect in the "Digital Cameras" domain.
     * 
     *
     * @returns java.util.List<java.lang.String>
	 */
	public List<String> getAspectValueName() {
	    return this.aspectValueName;
	}
	
	/**
	 * public setter
	 *
     * 
     * A value name for a given aspect. For example, "Point & Shoot" is a
     * value name for the "Product Type" aspect in the "Digital Cameras" domain.
     * 
     *
     * @param java.util.List<java.lang.String>
	 */
	public void setAspectValueName(List<String> aspectValueName) {
	    this.aspectValueName = aspectValueName;
	}
	/**
	 * public getter
	 *
     * @returns java.lang.String
	 */
	public String getDelimiter() {
	    return this.delimiter;
	}
	
	/**
	 * public setter
	 *
     * @param java.lang.String
	 */
	public void setDelimiter(String delimiter) {
	    this.delimiter = delimiter;
	}

}