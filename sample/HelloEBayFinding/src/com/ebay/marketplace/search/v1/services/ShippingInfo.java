// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.ebay.marketplace.search.v1.services;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * 
 * Container holding the item's shipping details.
 * 
 */
public class ShippingInfo implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private Amount shippingServiceCost;
	
	@Element
	private String shippingType;
	
	@Element
	private List<String> shipToLocations;
	
	@Element
	private Boolean expeditedShipping;
	
	@Element
	private Boolean oneDayShippingAvailable;
	
	@Element
	private Integer handlingTime;
	
	@Element
	private Boolean intermediatedShipping;
	
	@Element
	private String delimiter;
	
    
	/**
     * public getter
     *
     * 
     * The basic shipping cost of the item. This reflects the domestic shipping
     * cost or the international shipping costs, depending on which applies
     * (that is, whether the bidder/buyer is in the same country as the listing
     * site of the item).
     * 
     *
     * @returns com.ebay.marketplace.search.v1.services.Amount
	 */
	public Amount getShippingServiceCost() {
	    return this.shippingServiceCost;
	}
	
	/**
	 * public setter
	 *
     * 
     * The basic shipping cost of the item. This reflects the domestic shipping
     * cost or the international shipping costs, depending on which applies
     * (that is, whether the bidder/buyer is in the same country as the listing
     * site of the item).
     * 
     *
     * @param com.ebay.marketplace.search.v1.services.Amount
	 */
	public void setShippingServiceCost(Amount shippingServiceCost) {
	    this.shippingServiceCost = shippingServiceCost;
	}
	/**
     * public getter
     *
     * 
     * The shipping method that was used for determining the cost of shipping.
     * For example: flat rate, calculated, or free. The seller specifies the
     * available shipping services when they list the item.
     * <dl>
     * <dt>
     * <strong>shippingType values:</strong>
     * </dt>
     * <dt>
     * Calculated
     * </dt>
     * <dd>
     * The calculated shipping model: The posted cost of shipping is based
     * on the buyer-selected shipping service, chosen by the buyer from the
     * different shipping services offered by the seller. The shipping costs
     * are calculated by eBay and the shipping carrier, based on the buyer's
     * address. Any packaging and handling costs established by the seller
     * are automatically rolled into the total.
     * </dd>
     * <dt>
     * CalculatedDomesticFlatInternational
     * </dt>
     * <dd>
     * The seller specified one or more calculated domestic shipping
     * services and one or more flat international shipping services.
     * </dd>
     * <dt>
     * Flat
     * </dt>
     * <dd>
     * The flat-rate shipping model: The seller establishes the cost
     * of shipping and any shipping insurance, regardless of what any
     * buyer-selected shipping service might charge the seller.
     * </dd>
     * <dt>
     * FlatDomesticCalculatedInternational
     * </dt>
     * <dd>
     * The seller specified one or more flat domestic shipping
     * services and one or more calculated international shipping services.
     * </dd>
     * <dt>
     * Free
     * </dt>
     * <dd>
     * Free is used when the seller has declared that shipping is free
     * for the buyer.
     * </dd>
     * <dt>
     * FreePickup
     * </dt>
     * <dd>
     * No shipping available, the buyer must pick up the item from the
     * seller.
     * </dd>
     * <dt>
     * Freight
     * </dt>
     * <dd>
     * The freight shipping model: the cost of shipping is determined by a
     * third party, FreightQuote.com, based on the buyer's address (postal
     * code).
     * </dd>
     * <dt>
     * FreightFlat
     * </dt>
     * <dd>
     * The flat rate shipping model: the seller establishes the cost
     * of freight shipping and freight insurance, regardless of what any
     * buyer-selected shipping service might charge the seller.
     * </dd>
     * <dt>
     * NotSpecified
     * </dt>
     * <dd>
     * The seller did not specify the shipping type.
     * </dd>
     * </dl>
     * 
     *
     * @returns java.lang.String
	 */
	public String getShippingType() {
	    return this.shippingType;
	}
	
	/**
	 * public setter
	 *
     * 
     * The shipping method that was used for determining the cost of shipping.
     * For example: flat rate, calculated, or free. The seller specifies the
     * available shipping services when they list the item.
     * <dl>
     * <dt>
     * <strong>shippingType values:</strong>
     * </dt>
     * <dt>
     * Calculated
     * </dt>
     * <dd>
     * The calculated shipping model: The posted cost of shipping is based
     * on the buyer-selected shipping service, chosen by the buyer from the
     * different shipping services offered by the seller. The shipping costs
     * are calculated by eBay and the shipping carrier, based on the buyer's
     * address. Any packaging and handling costs established by the seller
     * are automatically rolled into the total.
     * </dd>
     * <dt>
     * CalculatedDomesticFlatInternational
     * </dt>
     * <dd>
     * The seller specified one or more calculated domestic shipping
     * services and one or more flat international shipping services.
     * </dd>
     * <dt>
     * Flat
     * </dt>
     * <dd>
     * The flat-rate shipping model: The seller establishes the cost
     * of shipping and any shipping insurance, regardless of what any
     * buyer-selected shipping service might charge the seller.
     * </dd>
     * <dt>
     * FlatDomesticCalculatedInternational
     * </dt>
     * <dd>
     * The seller specified one or more flat domestic shipping
     * services and one or more calculated international shipping services.
     * </dd>
     * <dt>
     * Free
     * </dt>
     * <dd>
     * Free is used when the seller has declared that shipping is free
     * for the buyer.
     * </dd>
     * <dt>
     * FreePickup
     * </dt>
     * <dd>
     * No shipping available, the buyer must pick up the item from the
     * seller.
     * </dd>
     * <dt>
     * Freight
     * </dt>
     * <dd>
     * The freight shipping model: the cost of shipping is determined by a
     * third party, FreightQuote.com, based on the buyer's address (postal
     * code).
     * </dd>
     * <dt>
     * FreightFlat
     * </dt>
     * <dd>
     * The flat rate shipping model: the seller establishes the cost
     * of freight shipping and freight insurance, regardless of what any
     * buyer-selected shipping service might charge the seller.
     * </dd>
     * <dt>
     * NotSpecified
     * </dt>
     * <dd>
     * The seller did not specify the shipping type.
     * </dd>
     * </dl>
     * 
     *
     * @param java.lang.String
	 */
	public void setShippingType(String shippingType) {
	    this.shippingType = shippingType;
	}
	/**
     * public getter
     *
     * 
     * An international location or region to which the seller is willing to
     * ship the item. Only returned when the seller has specifically identified
     * locations where she is willing to ship the given item.
     * specified.
     * 
     *
     * @returns java.util.List<java.lang.String>
	 */
	public List<String> getShipToLocations() {
	    return this.shipToLocations;
	}
	
	/**
	 * public setter
	 *
     * 
     * An international location or region to which the seller is willing to
     * ship the item. Only returned when the seller has specifically identified
     * locations where she is willing to ship the given item.
     * specified.
     * 
     *
     * @param java.util.List<java.lang.String>
	 */
	public void setShipToLocations(List<String> shipToLocations) {
	    this.shipToLocations = shipToLocations;
	}
	/**
     * public getter
     *
     * 
     *                         This is returned set to true if expedited shipping is available for the item.
     * <br/><br/>
     *                         This field is returned only for items listed on the eBay US site.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getExpeditedShipping() {
	    return this.expeditedShipping;
	}
	
	/**
	 * public setter
	 *
     * 
     *                         This is returned set to true if expedited shipping is available for the item.
     * <br/><br/>
     *                         This field is returned only for items listed on the eBay US site.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setExpeditedShipping(Boolean expeditedShipping) {
	    this.expeditedShipping = expeditedShipping;
	}
	/**
     * public getter
     *
     * 
     * This is returned set to true if one-day shipping is available for the item.
     * <br/><br/>
     *                         This field is returned only for items listed on the eBay US site.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getOneDayShippingAvailable() {
	    return this.oneDayShippingAvailable;
	}
	
	/**
	 * public setter
	 *
     * 
     * This is returned set to true if one-day shipping is available for the item.
     * <br/><br/>
     *                         This field is returned only for items listed on the eBay US site.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setOneDayShippingAvailable(Boolean oneDayShippingAvailable) {
	    this.oneDayShippingAvailable = oneDayShippingAvailable;
	}
	/**
     * public getter
     *
     * 
     * The number of days it will take the seller to ship this item.
     * <br/><br/>
     *                         This field is returned only for items listed on the eBay US site.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getHandlingTime() {
	    return this.handlingTime;
	}
	
	/**
	 * public setter
	 *
     * 
     * The number of days it will take the seller to ship this item.
     * <br/><br/>
     *                         This field is returned only for items listed on the eBay US site.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setHandlingTime(Integer handlingTime) {
	    this.handlingTime = handlingTime;
	}
	/**
	 * public getter
	 *
     * @returns java.lang.Boolean
	 */
	public Boolean getIntermediatedShipping() {
	    return this.intermediatedShipping;
	}
	
	/**
	 * public setter
	 *
     * @param java.lang.Boolean
	 */
	public void setIntermediatedShipping(Boolean intermediatedShipping) {
	    this.intermediatedShipping = intermediatedShipping;
	}
	/**
	 * public getter
	 *
     * @returns java.lang.String
	 */
	public String getDelimiter() {
	    return this.delimiter;
	}
	
	/**
	 * public setter
	 *
     * @param java.lang.String
	 */
	public void setDelimiter(String delimiter) {
	    this.delimiter = delimiter;
	}

}