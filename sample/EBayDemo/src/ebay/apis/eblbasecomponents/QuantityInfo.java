// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * Type defining the <b>QuantityInfo</b> container, which consists of the 
 * <b>MinimumRemnantSet</b> field, which sets the minimum amount of event tickets that can
 * remain in the fixed-price listing's inventory after a buyer purchases one or more tickets (but
 * not all) from the listing.
 * 
 */
public class QuantityInfo implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "MinimumRemnantSet")
	private Integer minimumRemnantSet;
	
    
	/**
     * public getter
     *
     * 
     * This field enables the seller to avoid being left with 1 item in a multi-quanity, fixed-
     * priced event ticket listing. A typical use case is event tickets in reserved,
     * adjacent seats, or items that typically only sell if more than 
     * 1 can be purchased at once. 
     * <br> <br>
     * At listing time, sellers specify the minimum number of items that 
     * should remain if a buyer doesn't purchase all the items. 
     * Based on the value of <b>MinimumRemnantSet</b> and the listing's 
     * available quantity (Quantity-QuantitySold), eBay calculates the quantity of tickets
     * a buyer can purchase. 
     * For example, suppose a seller lists 5 tickets, and wants at least 
     * 2 tickets remaining for the final buyer to purchase. 
     * In this case, the seller would set <b>MinimumRemnantSet</b> to '2'. 
     * This means a buyer can purchase 1, 2, 3, or 5 tickets, but not 4 
     * (because 4 would leave the seller with 1 ticket).<br>
     * <br>
     * To remove this restriction when revising or relisting item, the seller would
     * set the <b>MinimumRemnantSet</b> value to '1'.<br>
     * <br>
     * This field is currently only applicable for event ticket listings in US and CA, but 
     * may apply to other categories in the future. It is only returned if set by the seller 
     * in the listing.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getMinimumRemnantSet() {
	    return this.minimumRemnantSet;
	}
	
	/**
	 * public setter
	 *
     * 
     * This field enables the seller to avoid being left with 1 item in a multi-quanity, fixed-
     * priced event ticket listing. A typical use case is event tickets in reserved,
     * adjacent seats, or items that typically only sell if more than 
     * 1 can be purchased at once. 
     * <br> <br>
     * At listing time, sellers specify the minimum number of items that 
     * should remain if a buyer doesn't purchase all the items. 
     * Based on the value of <b>MinimumRemnantSet</b> and the listing's 
     * available quantity (Quantity-QuantitySold), eBay calculates the quantity of tickets
     * a buyer can purchase. 
     * For example, suppose a seller lists 5 tickets, and wants at least 
     * 2 tickets remaining for the final buyer to purchase. 
     * In this case, the seller would set <b>MinimumRemnantSet</b> to '2'. 
     * This means a buyer can purchase 1, 2, 3, or 5 tickets, but not 4 
     * (because 4 would leave the seller with 1 ticket).<br>
     * <br>
     * To remove this restriction when revising or relisting item, the seller would
     * set the <b>MinimumRemnantSet</b> value to '1'.<br>
     * <br>
     * This field is currently only applicable for event ticket listings in US and CA, but 
     * may apply to other categories in the future. It is only returned if set by the seller 
     * in the listing.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setMinimumRemnantSet(Integer minimumRemnantSet) {
	    this.minimumRemnantSet = minimumRemnantSet;
	}

}