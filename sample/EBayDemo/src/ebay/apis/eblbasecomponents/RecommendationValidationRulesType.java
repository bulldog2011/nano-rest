// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * 
 * Defines rules for recommended Item Specifics. The rules apply when 
 * the Item Specific is subsequently used in AddItem and related calls.
 * 
 */
public class RecommendationValidationRulesType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "ValueType")
	private ValueTypeCodeType valueType;
	
	@Element(name = "MinValues")
	private Integer minValues;
	
	@Element(name = "MaxValues")
	private Integer maxValues;
	
	@Element(name = "SelectionMode")
	private SelectionModeCodeType selectionMode;
	
	@Element(name = "Confidence")
	private Integer confidence;
	
	@Element(name = "Relationship")
	private List<NameValueRelationshipType> relationship;
	
	@Element(name = "VariationPicture")
	private VariationPictureRuleCodeType variationPicture;
	
	@Element(name = "VariationSpecifics")
	private VariationSpecificsRuleCodeType variationSpecifics;
	
	@Element(name = "ValueFormat")
	private ValueFormatCodeType valueFormat;
	
    
	/**
     * public getter
     *
     * 
     * The data type (e.g., decimal) that eBay expects the value to 
     * adhere to in listing requests.
     * Only returned if the data type is not Text. 
     * In some cases, more details about the data type are returned 
     * in the ValueFormat field.<br>
     * <br>
     * As buyers may search on the value you specify in AddItem,
     * the ISBN, UPC, or EAN should match the value that was specified by 
     * the publisher or manufacturer.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ValueTypeCodeType
	 */
	public ValueTypeCodeType getValueType() {
	    return this.valueType;
	}
	
	/**
	 * public setter
	 *
     * 
     * The data type (e.g., decimal) that eBay expects the value to 
     * adhere to in listing requests.
     * Only returned if the data type is not Text. 
     * In some cases, more details about the data type are returned 
     * in the ValueFormat field.<br>
     * <br>
     * As buyers may search on the value you specify in AddItem,
     * the ISBN, UPC, or EAN should match the value that was specified by 
     * the publisher or manufacturer.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ValueTypeCodeType
	 */
	public void setValueType(ValueTypeCodeType valueType) {
	    this.valueType = valueType;
	}
	/**
     * public getter
     *
     * 
     * Minimum number of values that you can specify for this Item Specific
     * in listing requests. Not returned if zero (0).<br>
     * <br>
     * If 1 or more, it means this Item Specfic is required
     * in listing requests (in the specified category). (Your listing 
     * request will return errors if the Item Specific is not present.) 
     * If Relationship  is also present, it means this Item Specific is 
     * required when you specify its parent value in listing requests.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getMinValues() {
	    return this.minValues;
	}
	
	/**
	 * public setter
	 *
     * 
     * Minimum number of values that you can specify for this Item Specific
     * in listing requests. Not returned if zero (0).<br>
     * <br>
     * If 1 or more, it means this Item Specfic is required
     * in listing requests (in the specified category). (Your listing 
     * request will return errors if the Item Specific is not present.) 
     * If Relationship  is also present, it means this Item Specific is 
     * required when you specify its parent value in listing requests.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setMinValues(Integer minValues) {
	    this.minValues = minValues;
	}
	/**
     * public getter
     *
     * 
     * Maximum number of values that you can specify for this Item Specific
     * in listing requests (like AddItem) in the specified 
     * category.<br>
     * <br>
     * Most Item Specifics can only have one value. When this is 
     * greater than 1, your application can present the value 
     * recommendations (if any) as a multi-select list to the seller. 
     * (See SelectionMode to determine whether the seller needs to 
     * choose from eBay's recommendations or not.)
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getMaxValues() {
	    return this.maxValues;
	}
	
	/**
	 * public setter
	 *
     * 
     * Maximum number of values that you can specify for this Item Specific
     * in listing requests (like AddItem) in the specified 
     * category.<br>
     * <br>
     * Most Item Specifics can only have one value. When this is 
     * greater than 1, your application can present the value 
     * recommendations (if any) as a multi-select list to the seller. 
     * (See SelectionMode to determine whether the seller needs to 
     * choose from eBay's recommendations or not.)
     * 
     *
     * @param java.lang.Integer
	 */
	public void setMaxValues(Integer maxValues) {
	    this.maxValues = maxValues;
	}
	/**
     * public getter
     *
     * 
     * Controls whether you can specify your own name and value 
     * in listing requests, or if you need to use a name and/or value 
     * that eBay has defined.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SelectionModeCodeType
	 */
	public SelectionModeCodeType getSelectionMode() {
	    return this.selectionMode;
	}
	
	/**
	 * public setter
	 *
     * 
     * Controls whether you can specify your own name and value 
     * in listing requests, or if you need to use a name and/or value 
     * that eBay has defined.
     * 
     *
     * @param ebay.apis.eblbasecomponents.SelectionModeCodeType
	 */
	public void setSelectionMode(SelectionModeCodeType selectionMode) {
	    this.selectionMode = selectionMode;
	}
	/**
     * public getter
     *
     * 
     * Indicates eBay's confidence that this is the right name or value, 
     * given the data you specified your request. The confidence is based
     * on historical items in the same category, with similar titles 
     * (if specified).<br>
     * <br>
     * For example, in GetItemRecommendations, if your request includes a 
     * title with words like "Blue T-Shirt", then Color=Blue is likely to 
     * have a higher confidence score than Color=Red in the response. 
     * If the title does not include a recognized color value, 
     * then Color may still have a high confidence score 
     * (based on historical item data in the category), but the scores for 
     * Blue and Red may have a more even distribution.<br>
     * <br>
     * Only returned when IncludeConfidence is true in the request. 
     * Not returned when SelectionMode is Prefilled.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getConfidence() {
	    return this.confidence;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates eBay's confidence that this is the right name or value, 
     * given the data you specified your request. The confidence is based
     * on historical items in the same category, with similar titles 
     * (if specified).<br>
     * <br>
     * For example, in GetItemRecommendations, if your request includes a 
     * title with words like "Blue T-Shirt", then Color=Blue is likely to 
     * have a higher confidence score than Color=Red in the response. 
     * If the title does not include a recognized color value, 
     * then Color may still have a high confidence score 
     * (based on historical item data in the category), but the scores for 
     * Blue and Red may have a more even distribution.<br>
     * <br>
     * Only returned when IncludeConfidence is true in the request. 
     * Not returned when SelectionMode is Prefilled.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setConfidence(Integer confidence) {
	    this.confidence = confidence;
	}
	/**
     * public getter
     *
     * 
     * Indicates the Item Specific's logical dependency on another 
     * Item Specific, if any. 
     * <br>
     * <br>
     * For example, in a clothing category, Size Type could be 
     * recommended as a parent of Size, because Size=XL would 
     * mean something different to buyers when 
     * Size Type=Juniors or Size Type=Regular. <br>
     * <br>
     * Or in the US (in the future), a list of cities can vary depending
     * on the state, so State could be recommended as a parent of City.<br>
     * <br>
     * Currently, categories only recommend a maximum of one parent 
     * for an Item Specific.
     * For example, Size=XL could have a Size Type=Juniors
     * parent in a Juniors clothing category. 
     * In the future, some categories may recommend multiple parents.
     * For example, City=Mountain View could have parents like 
     * State=California, State=New York, and State=North Carolina.<br>
     * <br>
     * If an Item Specific has value dependencies (i.e., if it has value recommendations that contain Relationship), then
     * all of its value recommendations are returned (regardless of the 
     * number you specified in MaxValuesPerName).
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.NameValueRelationshipType>
	 */
	public List<NameValueRelationshipType> getRelationship() {
	    return this.relationship;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates the Item Specific's logical dependency on another 
     * Item Specific, if any. 
     * <br>
     * <br>
     * For example, in a clothing category, Size Type could be 
     * recommended as a parent of Size, because Size=XL would 
     * mean something different to buyers when 
     * Size Type=Juniors or Size Type=Regular. <br>
     * <br>
     * Or in the US (in the future), a list of cities can vary depending
     * on the state, so State could be recommended as a parent of City.<br>
     * <br>
     * Currently, categories only recommend a maximum of one parent 
     * for an Item Specific.
     * For example, Size=XL could have a Size Type=Juniors
     * parent in a Juniors clothing category. 
     * In the future, some categories may recommend multiple parents.
     * For example, City=Mountain View could have parents like 
     * State=California, State=New York, and State=North Carolina.<br>
     * <br>
     * If an Item Specific has value dependencies (i.e., if it has value recommendations that contain Relationship), then
     * all of its value recommendations are returned (regardless of the 
     * number you specified in MaxValuesPerName).
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.NameValueRelationshipType>
	 */
	public void setRelationship(List<NameValueRelationshipType> relationship) {
	    this.relationship = relationship;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether the name (e.g., Color) can (or must) be used to 
     * classify the variation pictures.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.VariationPictureRuleCodeType
	 */
	public VariationPictureRuleCodeType getVariationPicture() {
	    return this.variationPicture;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether the name (e.g., Color) can (or must) be used to 
     * classify the variation pictures.
     * 
     *
     * @param ebay.apis.eblbasecomponents.VariationPictureRuleCodeType
	 */
	public void setVariationPicture(VariationPictureRuleCodeType variationPicture) {
	    this.variationPicture = variationPicture;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether the recommended name/value pair can be used in 
     * Item.Variations in AddFixedPriceItem and related calls. 
     * For example, a given category could disable a name like Brand 
     * in variation specifics (if Brand is only allowed in the item specifics at the Item level). The same category could
     * enable a name like Size for variation specifics 
     * (in addition to recommending it for item specifics). 
     * If not returned, then the name/value can be used for
     * both variation specifics and item specifics.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.VariationSpecificsRuleCodeType
	 */
	public VariationSpecificsRuleCodeType getVariationSpecifics() {
	    return this.variationSpecifics;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether the recommended name/value pair can be used in 
     * Item.Variations in AddFixedPriceItem and related calls. 
     * For example, a given category could disable a name like Brand 
     * in variation specifics (if Brand is only allowed in the item specifics at the Item level). The same category could
     * enable a name like Size for variation specifics 
     * (in addition to recommending it for item specifics). 
     * If not returned, then the name/value can be used for
     * both variation specifics and item specifics.
     * 
     *
     * @param ebay.apis.eblbasecomponents.VariationSpecificsRuleCodeType
	 */
	public void setVariationSpecifics(VariationSpecificsRuleCodeType variationSpecifics) {
	    this.variationSpecifics = variationSpecifics;
	}
	/**
     * public getter
     *
     * 
     * The format of the data type (e.g., date format) that eBay 
     * expects the item specific's value to adhere to in listing requests. 
     * A data type identified by the ValueType field may have different 
     * representations, and ValueFormat specifies the precise format 
     * that is required.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ValueFormatCodeType
	 */
	public ValueFormatCodeType getValueFormat() {
	    return this.valueFormat;
	}
	
	/**
	 * public setter
	 *
     * 
     * The format of the data type (e.g., date format) that eBay 
     * expects the item specific's value to adhere to in listing requests. 
     * A data type identified by the ValueType field may have different 
     * representations, and ValueFormat specifies the precise format 
     * that is required.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ValueFormatCodeType
	 */
	public void setValueFormat(ValueFormatCodeType valueFormat) {
	    this.valueFormat = valueFormat;
	}

}