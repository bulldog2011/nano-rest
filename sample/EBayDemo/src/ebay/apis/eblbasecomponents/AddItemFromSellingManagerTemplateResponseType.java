// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.Date;

/**
 * 
 * Returns values indicating information for a new listing.
 * 
 */
@RootElement(name = "AddItemFromSellingManagerTemplateResponse", namespace = "urn:ebay:apis:eBLBaseComponents")
public class AddItemFromSellingManagerTemplateResponseType extends AbstractResponseType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "ItemID")
	private String itemID;
	
	@Element(name = "StartTime")
	private Date startTime;
	
	@Element(name = "EndTime")
	private Date endTime;
	
	@Element(name = "Fees")
	private FeesType fees;
	
	@Element(name = "CategoryID")
	private String categoryID;
	
	@Element(name = "Category2ID")
	private String category2ID;
	
    
	/**
     * public getter
     *
     * 
     * The unique identifier for the listing that was created by the 
     * AddItemFromSellingManagerTemplate request.
     * 
     *
     * @returns java.lang.String
	 */
	public String getItemID() {
	    return this.itemID;
	}
	
	/**
	 * public setter
	 *
     * 
     * The unique identifier for the listing that was created by the 
     * AddItemFromSellingManagerTemplate request.
     * 
     *
     * @param java.lang.String
	 */
	public void setItemID(String itemID) {
	    this.itemID = itemID;
	}
	/**
     * public getter
     *
     * 
     * Start time for the listing that was created by the 
     * AddItemFromSellingManagerTemplate request.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getStartTime() {
	    return this.startTime;
	}
	
	/**
	 * public setter
	 *
     * 
     * Start time for the listing that was created by the 
     * AddItemFromSellingManagerTemplate request.
     * 
     *
     * @param java.util.Date
	 */
	public void setStartTime(Date startTime) {
	    this.startTime = startTime;
	}
	/**
     * public getter
     *
     * 
     * End time for the listing that was created by the 
     * AddItemFromSellingManagerTemplate request. 
     * This value is equal to the start time plus the listing duration.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getEndTime() {
	    return this.endTime;
	}
	
	/**
	 * public setter
	 *
     * 
     * End time for the listing that was created by the 
     * AddItemFromSellingManagerTemplate request. 
     * This value is equal to the start time plus the listing duration.
     * 
     *
     * @param java.util.Date
	 */
	public void setEndTime(Date endTime) {
	    this.endTime = endTime;
	}
	/**
     * public getter
     *
     * 
     * Child elements contain the estimated listing fees for the new item listing.
     * The fees do not include the Final Value Fee (FVF), which cannot be determined
     * until an item is sold.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.FeesType
	 */
	public FeesType getFees() {
	    return this.fees;
	}
	
	/**
	 * public setter
	 *
     * 
     * Child elements contain the estimated listing fees for the new item listing.
     * The fees do not include the Final Value Fee (FVF), which cannot be determined
     * until an item is sold.
     * 
     *
     * @param ebay.apis.eblbasecomponents.FeesType
	 */
	public void setFees(FeesType fees) {
	    this.fees = fees;
	}
	/**
     * public getter
     *
     * 
     * ID of the primary category in which the item was listed.
     * Only returned if you set Item.CategoryMappingAllowed to true in the request
     * and the ID you passed in PrimaryCategory was mapped to a new ID by eBay.
     * If the primary category has not changed or it has expired with no replacement,
     * CategoryID does not return a value.
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.String
	 */
	public String getCategoryID() {
	    return this.categoryID;
	}
	
	/**
	 * public setter
	 *
     * 
     * ID of the primary category in which the item was listed.
     * Only returned if you set Item.CategoryMappingAllowed to true in the request
     * and the ID you passed in PrimaryCategory was mapped to a new ID by eBay.
     * If the primary category has not changed or it has expired with no replacement,
     * CategoryID does not return a value.
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.String
	 */
	public void setCategoryID(String categoryID) {
	    this.categoryID = categoryID;
	}
	/**
     * public getter
     *
     * 
     * ID of the secondary category in which the item was listed.
     * Only returned if you set Item.CategoryMappingAllowed to true in the request
     * and the ID you passed in SecondaryCategory was mapped to a new ID by eBay.
     * If the secondary category has not changed or it has expired with no replacement,
     * Category2ID does not return a value.
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.String
	 */
	public String getCategory2ID() {
	    return this.category2ID;
	}
	
	/**
	 * public setter
	 *
     * 
     * ID of the secondary category in which the item was listed.
     * Only returned if you set Item.CategoryMappingAllowed to true in the request
     * and the ID you passed in SecondaryCategory was mapped to a new ID by eBay.
     * If the secondary category has not changed or it has expired with no replacement,
     * Category2ID does not return a value.
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.String
	 */
	public void setCategory2ID(String category2ID) {
	    this.category2ID = category2ID;
	}

}