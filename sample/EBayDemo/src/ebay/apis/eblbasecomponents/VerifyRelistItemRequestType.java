// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * 
 * Checks the arguments that you plan to use for a RelistItem call, looking for errors
 * and listing fees, without actually relisting the item.
 * 
 */
@RootElement(name = "VerifyRelistItemRequest", namespace = "urn:ebay:apis:eBLBaseComponents")
public class VerifyRelistItemRequestType extends AbstractRequestType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "Item")
	private ItemType item;
	
	@Element(name = "DeletedField")
	private List<String> deletedField;
	
    
	/**
     * public getter
     *
     * 
     * Child elements hold the values for item properties that change for the
     * item re-list. Item is a required input. At a minimum, the Item.ItemID
     * property must be set to the ID of the listing being re-listed (a
     * listing that ended in the past 90 days). By default, the new listing's
     * Item object properties are the same as those of the original (ended)
     * listing. By setting a new value in the Item object, the new listing
     * uses the new value rather than the corresponding value from the old
     * listing.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ItemType
	 */
	public ItemType getItem() {
	    return this.item;
	}
	
	/**
	 * public setter
	 *
     * 
     * Child elements hold the values for item properties that change for the
     * item re-list. Item is a required input. At a minimum, the Item.ItemID
     * property must be set to the ID of the listing being re-listed (a
     * listing that ended in the past 90 days). By default, the new listing's
     * Item object properties are the same as those of the original (ended)
     * listing. By setting a new value in the Item object, the new listing
     * uses the new value rather than the corresponding value from the old
     * listing.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ItemType
	 */
	public void setItem(ItemType item) {
	    this.item = item;
	}
	/**
     * public getter
     *
     * 
     * Specifies the name of the field to remove from a listing.
     * See the Developer's Guide for rules on removing values when relisting
     * items. DeletedField accepts the same values as
     * DeletedField in RelistItem.
     * DeletedField is case sensitive. The request can contain zero, one, or many
     * instances of DeletedField.
     * 
     *
     * @returns java.util.List<java.lang.String>
	 */
	public List<String> getDeletedField() {
	    return this.deletedField;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the name of the field to remove from a listing.
     * See the Developer's Guide for rules on removing values when relisting
     * items. DeletedField accepts the same values as
     * DeletedField in RelistItem.
     * DeletedField is case sensitive. The request can contain zero, one, or many
     * instances of DeletedField.
     * 
     *
     * @param java.util.List<java.lang.String>
	 */
	public void setDeletedField(List<String> deletedField) {
	    this.deletedField = deletedField;
	}

}