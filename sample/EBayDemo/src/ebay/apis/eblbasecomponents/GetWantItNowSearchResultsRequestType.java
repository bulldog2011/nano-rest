// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * Retrieves a list of active Want It Now posts that match specified keywords
 * and/or a specific category ID. The response contains the following data:
 * CategoryID, PostID, StartTime, ResponseCount, Site, and Title. To get the post
 * description (Description), you must use GetWantItNowPost to retrieve individual
 * posts.
 * 
 */
@RootElement(name = "GetWantItNowSearchResultsRequest", namespace = "urn:ebay:apis:eBLBaseComponents")
public class GetWantItNowSearchResultsRequestType extends AbstractRequestType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "CategoryID")
	private String categoryID;
	
	@Element(name = "Query")
	private String query;
	
	@Element(name = "SearchInDescription")
	private Boolean searchInDescription;
	
	@Element(name = "SearchWorldwide")
	private Boolean searchWorldwide;
	
	@Element(name = "Pagination")
	private PaginationType pagination;
	
    
	/**
     * public getter
     *
     * 
     * Limits the result set to just those Want It Now posts listed in the
     * specified category. Defaults to all categories if no category ID is
     * specified. If the specified category ID does not match an existing
     * category for the site, an invalid-category error message is returned.
     * Controls the set of listings to return (not the details to return for each
     * listing).
     * You must specify a Query and/or a CategoryID in the request.
     * 
     *
     * @returns java.lang.String
	 */
	public String getCategoryID() {
	    return this.categoryID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Limits the result set to just those Want It Now posts listed in the
     * specified category. Defaults to all categories if no category ID is
     * specified. If the specified category ID does not match an existing
     * category for the site, an invalid-category error message is returned.
     * Controls the set of listings to return (not the details to return for each
     * listing).
     * You must specify a Query and/or a CategoryID in the request.
     * 
     *
     * @param java.lang.String
	 */
	public void setCategoryID(String categoryID) {
	    this.categoryID = categoryID;
	}
	/**
     * public getter
     *
     * 
     * Specifies a search string. The search string consists of one or more
     * keywords to search for in the listing title. Note that the post
     * description will also be searched if SearchInDescription is enabled.
     * By default, requests return a list of Want It Now posts that include all
     * of the keywords specified in the Query. All words used in the query,
     * including "and," "or," and "the,"  will be treated as keywords. You can,
     * however, use modifiers and wildcards (e.g., +, -, and *) in the Query
     * field to create more complex searches. Be careful when using spaces before
     * or after modifiers and wildcards (+, -, or *), as the spaces can affect
     * the query logic.
     * See the eBay Web Services Guide for a list of valid search keyword query
     * operators and examples.
     * 
     *
     * @returns java.lang.String
	 */
	public String getQuery() {
	    return this.query;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies a search string. The search string consists of one or more
     * keywords to search for in the listing title. Note that the post
     * description will also be searched if SearchInDescription is enabled.
     * By default, requests return a list of Want It Now posts that include all
     * of the keywords specified in the Query. All words used in the query,
     * including "and," "or," and "the,"  will be treated as keywords. You can,
     * however, use modifiers and wildcards (e.g., +, -, and *) in the Query
     * field to create more complex searches. Be careful when using spaces before
     * or after modifiers and wildcards (+, -, or *), as the spaces can affect
     * the query logic.
     * See the eBay Web Services Guide for a list of valid search keyword query
     * operators and examples.
     * 
     *
     * @param java.lang.String
	 */
	public void setQuery(String query) {
	    this.query = query;
	}
	/**
     * public getter
     *
     * 
     * If true, include the description field of Want It Now posts in the keyword search. Want
     * It Now posts returned are those where specified search keywords appear in
     * either the description or the title. This is the default behavior if SearchInDescription
     * is not specified. If false, only the title will be searched. SearchInDescription is an
     * optional input.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getSearchInDescription() {
	    return this.searchInDescription;
	}
	
	/**
	 * public setter
	 *
     * 
     * If true, include the description field of Want It Now posts in the keyword search. Want
     * It Now posts returned are those where specified search keywords appear in
     * either the description or the title. This is the default behavior if SearchInDescription
     * is not specified. If false, only the title will be searched. SearchInDescription is an
     * optional input.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setSearchInDescription(Boolean searchInDescription) {
	    this.searchInDescription = searchInDescription;
	}
	/**
     * public getter
     *
     * 
     * If true, the search applies to all eBay sites. If false, the search is
     * limited to the site specified in the URL query string when the call is
     * made.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getSearchWorldwide() {
	    return this.searchWorldwide;
	}
	
	/**
	 * public setter
	 *
     * 
     * If true, the search applies to all eBay sites. If false, the search is
     * limited to the site specified in the URL query string when the call is
     * made.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setSearchWorldwide(Boolean searchWorldwide) {
	    this.searchWorldwide = searchWorldwide;
	}
	/**
     * public getter
     *
     * 
     * Controls the pagination of the result set. Child elements specify the
     * maximum number of item listings to return per call and which page of data
     * to return.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.PaginationType
	 */
	public PaginationType getPagination() {
	    return this.pagination;
	}
	
	/**
	 * public setter
	 *
     * 
     * Controls the pagination of the result set. Child elements specify the
     * maximum number of item listings to return per call and which page of data
     * to return.
     * 
     *
     * @param ebay.apis.eblbasecomponents.PaginationType
	 */
	public void setPagination(PaginationType pagination) {
	    this.pagination = pagination;
	}

}