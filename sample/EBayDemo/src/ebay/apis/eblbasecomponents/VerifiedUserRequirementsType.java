// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * Type defining the <b>VerifiedUserRequirements</b> container, which is used by the 
 * seller to block prospective buyers who do not pass a verified user check. Verified users are 
 * applicable to the Australia, France, India, Ireland, Spain, and UK sites.
 * 
 */
public class VerifiedUserRequirementsType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "VerifiedUser")
	private Boolean verifiedUser;
	
	@Element(name = "MinimumFeedbackScore")
	private Integer minimumFeedbackScore;
	
    
	/**
     * public getter
     *
     * 
     * To block non-verified users from buying/bidding on their items, the seller should include
     * this field and set its value to 'true'. The default value of this field is 'false', so, if 
     * it is not included, non-verified users on the Australia, France, India, Ireland, Spain, and 
     * UK will be able to buy/bid on the seller's items. 
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getVerifiedUser() {
	    return this.verifiedUser;
	}
	
	/**
	 * public setter
	 *
     * 
     * To block non-verified users from buying/bidding on their items, the seller should include
     * this field and set its value to 'true'. The default value of this field is 'false', so, if 
     * it is not included, non-verified users on the Australia, France, India, Ireland, Spain, and 
     * UK will be able to buy/bid on the seller's items. 
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setVerifiedUser(Boolean verifiedUser) {
	    this.verifiedUser = verifiedUser;
	}
	/**
     * public getter
     *
     * 
     * This field is ignored unless the <b>VerifiedUser</b> field is included and 
     * set to 'true'. 
     * <br/><br/>
     * The seller includes this field as a mechanism to block verified users who have a feedback
     * score less than the specified value. 
     * <br/><br/>
     * To see the valid values for your site, call <b>GeteBayDetails</b> with 
     * <b>DetailName</b> set to <b>BuyerRequirementDetails</b>, and 
     * then look for the BuyerRequirementDetails.VerifiedUserRequirements.FeedbackScore fields.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getMinimumFeedbackScore() {
	    return this.minimumFeedbackScore;
	}
	
	/**
	 * public setter
	 *
     * 
     * This field is ignored unless the <b>VerifiedUser</b> field is included and 
     * set to 'true'. 
     * <br/><br/>
     * The seller includes this field as a mechanism to block verified users who have a feedback
     * score less than the specified value. 
     * <br/><br/>
     * To see the valid values for your site, call <b>GeteBayDetails</b> with 
     * <b>DetailName</b> set to <b>BuyerRequirementDetails</b>, and 
     * then look for the BuyerRequirementDetails.VerifiedUserRequirements.FeedbackScore fields.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setMinimumFeedbackScore(Integer minimumFeedbackScore) {
	    this.minimumFeedbackScore = minimumFeedbackScore;
	}

}