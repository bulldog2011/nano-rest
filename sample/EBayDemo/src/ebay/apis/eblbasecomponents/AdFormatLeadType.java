// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.Date;

/**
 * 
 * Contains prospective buyer contact information and other details associated with
 * a lead for an ad format listing.
 * 
 */
public class AdFormatLeadType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "AdditionalInformation")
	private String additionalInformation;
	
	@Element(name = "Address")
	private AddressType address;
	
	@Element(name = "BestTimeToCall")
	private String bestTimeToCall;
	
	@Element(name = "Email")
	private String email;
	
	@Element(name = "SubmittedTime")
	private Date submittedTime;
	
	@Element(name = "ItemID")
	private String itemID;
	
	@Element(name = "ItemTitle")
	private String itemTitle;
	
	@Element(name = "UserID")
	private String userID;
	
	@Element(name = "MemberMessage")
	private MemberMessageExchangeArrayType memberMessage;
	
	@Element(name = "Status")
	private AdFormatLeadStatusCodeType status;
	
	@Element(name = "LeadFee")
	private AmountType leadFee;
	
	@Element(name = "ExternalEmail")
	private String externalEmail;
	
	@Element(name = "PurchaseTimeFrame")
	private String purchaseTimeFrame;
	
	@Element(name = "TradeInYear")
	private String tradeInYear;
	
	@Element(name = "TradeInMake")
	private String tradeInMake;
	
	@Element(name = "TradeInModel")
	private String tradeInModel;
	
	@Element(name = "FinancingAnswer")
	private Boolean financingAnswer;
	
	@Element(name = "Answer1")
	private Boolean answer1;
	
	@Element(name = "Answer2")
	private Boolean answer2;
	
    
	/**
     * public getter
     *
     * 
     * Message sent from the prospective buyer to the seller. Same
     * content as in the AdFormatLead.MemberMessage.MemberMessageExchange.Question.Body node (that is only displayed if IncludeMemberMessages =
     * true is included in the request). The advantage of
     * retrieving the MemberMessageExchange node, however, is that
     * you retrieve the entire exchange between the seller and the
     * lead.
     * 
     *
     * @returns java.lang.String
	 */
	public String getAdditionalInformation() {
	    return this.additionalInformation;
	}
	
	/**
	 * public setter
	 *
     * 
     * Message sent from the prospective buyer to the seller. Same
     * content as in the AdFormatLead.MemberMessage.MemberMessageExchange.Question.Body node (that is only displayed if IncludeMemberMessages =
     * true is included in the request). The advantage of
     * retrieving the MemberMessageExchange node, however, is that
     * you retrieve the entire exchange between the seller and the
     * lead.
     * 
     *
     * @param java.lang.String
	 */
	public void setAdditionalInformation(String additionalInformation) {
	    this.additionalInformation = additionalInformation;
	}
	/**
     * public getter
     *
     * 
     * Address information for the prospective buyer.
     * Not returned or returned self-closed if information is unavailable.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AddressType
	 */
	public AddressType getAddress() {
	    return this.address;
	}
	
	/**
	 * public setter
	 *
     * 
     * Address information for the prospective buyer.
     * Not returned or returned self-closed if information is unavailable.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AddressType
	 */
	public void setAddress(AddressType address) {
	    this.address = address;
	}
	/**
     * public getter
     *
     * 
     * The time of day when the prospective buyer prefers to be contacted by the
     * seller.
     * Not returned if information is unavailable.
     * 
     *
     * @returns java.lang.String
	 */
	public String getBestTimeToCall() {
	    return this.bestTimeToCall;
	}
	
	/**
	 * public setter
	 *
     * 
     * The time of day when the prospective buyer prefers to be contacted by the
     * seller.
     * Not returned if information is unavailable.
     * 
     *
     * @param java.lang.String
	 */
	public void setBestTimeToCall(String bestTimeToCall) {
	    this.bestTimeToCall = bestTimeToCall;
	}
	/**
     * public getter
     *
     * 
     * Email address for the prospective buyer. If the prospective buyer chooses to
     * hide his email address when contacting the seller, this element contains two
     * dashes (--) instead of an email address.
     * 
     *
     * @returns java.lang.String
	 */
	public String getEmail() {
	    return this.email;
	}
	
	/**
	 * public setter
	 *
     * 
     * Email address for the prospective buyer. If the prospective buyer chooses to
     * hide his email address when contacting the seller, this element contains two
     * dashes (--) instead of an email address.
     * 
     *
     * @param java.lang.String
	 */
	public void setEmail(String email) {
	    this.email = email;
	}
	/**
     * public getter
     *
     * 
     * Date and time (in GMT) that the lead was submitted.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getSubmittedTime() {
	    return this.submittedTime;
	}
	
	/**
	 * public setter
	 *
     * 
     * Date and time (in GMT) that the lead was submitted.
     * 
     *
     * @param java.util.Date
	 */
	public void setSubmittedTime(Date submittedTime) {
	    this.submittedTime = submittedTime;
	}
	/**
     * public getter
     *
     * 
     * The ID of the item that the lead is for.
     * 
     *
     * @returns java.lang.String
	 */
	public String getItemID() {
	    return this.itemID;
	}
	
	/**
	 * public setter
	 *
     * 
     * The ID of the item that the lead is for.
     * 
     *
     * @param java.lang.String
	 */
	public void setItemID(String itemID) {
	    this.itemID = itemID;
	}
	/**
     * public getter
     *
     * 
     * The title of the item listing.
     * <br><br>
     * <span class="tablenote"><b>Note:</b>
     * The maximum length of an eBay Item Title is increasing to 80 characters in
     * Version 735.
     * </span>
     * 
     *
     * @returns java.lang.String
	 */
	public String getItemTitle() {
	    return this.itemTitle;
	}
	
	/**
	 * public setter
	 *
     * 
     * The title of the item listing.
     * <br><br>
     * <span class="tablenote"><b>Note:</b>
     * The maximum length of an eBay Item Title is increasing to 80 characters in
     * Version 735.
     * </span>
     * 
     *
     * @param java.lang.String
	 */
	public void setItemTitle(String itemTitle) {
	    this.itemTitle = itemTitle;
	}
	/**
     * public getter
     *
     * 
     * The eBay ID of the user who is interested in the seller's item.
     * 
     *
     * @returns java.lang.String
	 */
	public String getUserID() {
	    return this.userID;
	}
	
	/**
	 * public setter
	 *
     * 
     * The eBay ID of the user who is interested in the seller's item.
     * 
     *
     * @param java.lang.String
	 */
	public void setUserID(String userID) {
	    this.userID = userID;
	}
	/**
     * public getter
     *
     * 
     * Contains any mail message content shared between the seller and lead.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.MemberMessageExchangeArrayType
	 */
	public MemberMessageExchangeArrayType getMemberMessage() {
	    return this.memberMessage;
	}
	
	/**
	 * public setter
	 *
     * 
     * Contains any mail message content shared between the seller and lead.
     * 
     *
     * @param ebay.apis.eblbasecomponents.MemberMessageExchangeArrayType
	 */
	public void setMemberMessage(MemberMessageExchangeArrayType memberMessage) {
	    this.memberMessage = memberMessage;
	}
	/**
     * public getter
     *
     * 
     * Status of the lead.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AdFormatLeadStatusCodeType
	 */
	public AdFormatLeadStatusCodeType getStatus() {
	    return this.status;
	}
	
	/**
	 * public setter
	 *
     * 
     * Status of the lead.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AdFormatLeadStatusCodeType
	 */
	public void setStatus(AdFormatLeadStatusCodeType status) {
	    this.status = status;
	}
	/**
     * public getter
     *
     * 
     * The pay-per-lead feature is no longer available, and this field is scheduled to 
     * be removed from the WSDL.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getLeadFee() {
	    return this.leadFee;
	}
	
	/**
	 * public setter
	 *
     * 
     * The pay-per-lead feature is no longer available, and this field is scheduled to 
     * be removed from the WSDL.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setLeadFee(AmountType leadFee) {
	    this.leadFee = leadFee;
	}
	/**
     * public getter
     *
     * 
     * Email address for the prospective buyer as entered in the lead form on the View
     * Item page. Provides a way for sellers to contact prospective buyers who choose not to
     * log in to eBay. This applies to only eBay Motors and eBay Motors categories.
     * 
     *
     * @returns java.lang.String
	 */
	public String getExternalEmail() {
	    return this.externalEmail;
	}
	
	/**
	 * public setter
	 *
     * 
     * Email address for the prospective buyer as entered in the lead form on the View
     * Item page. Provides a way for sellers to contact prospective buyers who choose not to
     * log in to eBay. This applies to only eBay Motors and eBay Motors categories.
     * 
     *
     * @param java.lang.String
	 */
	public void setExternalEmail(String externalEmail) {
	    this.externalEmail = externalEmail;
	}
	/**
     * public getter
     *
     * 
     * Prospective buyer's time frame for purchasing a vehicle as entered in the
     * Lead form on View Item page for eBay Motors and eBay Motors categories.
     * Purchasing Time Frames include:
     * <ul>
     * <li>
     * within next 3 days
     * </li>
     * <li>
     * within a week
     * </li>
     * <li>
     * within a month
     * </li>
     * <li>
     * within three months
     * </li>
     * <li>
     * in more than three months
     * </li>
     * <li>
     * within an undecided time frame
     * </li>
     * </ul>
     * 
     *
     * @returns java.lang.String
	 */
	public String getPurchaseTimeFrame() {
	    return this.purchaseTimeFrame;
	}
	
	/**
	 * public setter
	 *
     * 
     * Prospective buyer's time frame for purchasing a vehicle as entered in the
     * Lead form on View Item page for eBay Motors and eBay Motors categories.
     * Purchasing Time Frames include:
     * <ul>
     * <li>
     * within next 3 days
     * </li>
     * <li>
     * within a week
     * </li>
     * <li>
     * within a month
     * </li>
     * <li>
     * within three months
     * </li>
     * <li>
     * in more than three months
     * </li>
     * <li>
     * within an undecided time frame
     * </li>
     * </ul>
     * 
     *
     * @param java.lang.String
	 */
	public void setPurchaseTimeFrame(String purchaseTimeFrame) {
	    this.purchaseTimeFrame = purchaseTimeFrame;
	}
	/**
     * public getter
     *
     * 
     * The year of the vehicle the prospective buyer would like to trade in. Entered on
     * the lead form on the View Item page. Applies to eBay Motors and Motors categories
     * only.
     * 
     *
     * @returns java.lang.String
	 */
	public String getTradeInYear() {
	    return this.tradeInYear;
	}
	
	/**
	 * public setter
	 *
     * 
     * The year of the vehicle the prospective buyer would like to trade in. Entered on
     * the lead form on the View Item page. Applies to eBay Motors and Motors categories
     * only.
     * 
     *
     * @param java.lang.String
	 */
	public void setTradeInYear(String tradeInYear) {
	    this.tradeInYear = tradeInYear;
	}
	/**
     * public getter
     *
     * 
     *  The make of the vehicle the prospective buyer would like to trade in. Entered on
     *  the lead form on the View Item page. Applies to eBay Motors and Motors categories
     *  only.
     * 
     *
     * @returns java.lang.String
	 */
	public String getTradeInMake() {
	    return this.tradeInMake;
	}
	
	/**
	 * public setter
	 *
     * 
     *  The make of the vehicle the prospective buyer would like to trade in. Entered on
     *  the lead form on the View Item page. Applies to eBay Motors and Motors categories
     *  only.
     * 
     *
     * @param java.lang.String
	 */
	public void setTradeInMake(String tradeInMake) {
	    this.tradeInMake = tradeInMake;
	}
	/**
     * public getter
     *
     * 
     * The model of the vehicle the prospective buyer would like to trade in. Entered on the lead form on the View Item page.Applies to eBay Motors and Motors categories only.
     * 
     *
     * @returns java.lang.String
	 */
	public String getTradeInModel() {
	    return this.tradeInModel;
	}
	
	/**
	 * public setter
	 *
     * 
     * The model of the vehicle the prospective buyer would like to trade in. Entered on the lead form on the View Item page.Applies to eBay Motors and Motors categories only.
     * 
     *
     * @param java.lang.String
	 */
	public void setTradeInModel(String tradeInModel) {
	    this.tradeInModel = tradeInModel;
	}
	/**
     * public getter
     *
     * 
     * Prospective buyer answer whether or not the prospective buyer would like
     * financing. Entered on the lead form on the View Item page. Applies to eBay Motors
     * and Motors categories only. Financing response meanings: 0= no response,1= yes, 2=
     * no.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getFinancingAnswer() {
	    return this.financingAnswer;
	}
	
	/**
	 * public setter
	 *
     * 
     * Prospective buyer answer whether or not the prospective buyer would like
     * financing. Entered on the lead form on the View Item page. Applies to eBay Motors
     * and Motors categories only. Financing response meanings: 0= no response,1= yes, 2=
     * no.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setFinancingAnswer(Boolean financingAnswer) {
	    this.financingAnswer = financingAnswer;
	}
	/**
     * public getter
     *
     * 
     * This field corresponds to a configurable question on the lead form in the View
     * Item web page. The corresponding question is site-specific. To determine the
     * question for a specific site, you must view the form in the web flow for the given
     * site. This field applies to Classified Ad format listings in Motors categories
     * only.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getAnswer1() {
	    return this.answer1;
	}
	
	/**
	 * public setter
	 *
     * 
     * This field corresponds to a configurable question on the lead form in the View
     * Item web page. The corresponding question is site-specific. To determine the
     * question for a specific site, you must view the form in the web flow for the given
     * site. This field applies to Classified Ad format listings in Motors categories
     * only.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setAnswer1(Boolean answer1) {
	    this.answer1 = answer1;
	}
	/**
     * public getter
     *
     * 
     * This field corresponds to a configurable question on the lead form in the View
     * Item web page. The corresponding question is site-specific. To determine the
     * question for a specific site, you must view the form in the web flow for the given
     * site. This field applies to Classified Ad format listings in Motors categories
     * only.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getAnswer2() {
	    return this.answer2;
	}
	
	/**
	 * public setter
	 *
     * 
     * This field corresponds to a configurable question on the lead form in the View
     * Item web page. The corresponding question is site-specific. To determine the
     * question for a specific site, you must view the form in the web flow for the given
     * site. This field applies to Classified Ad format listings in Motors categories
     * only.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setAnswer2(Boolean answer2) {
	    this.answer2 = answer2;
	}

}