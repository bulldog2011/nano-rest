// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * Type defining the <b>BuyerRequirementDetails</b> container, which allows the 
 * seller to set buyer requirements at the listing level. For the corresponding listing, 
 * all buyer requirement values/settings will overwrite values/settings in Buyer Requirements 
 * preferences in My eBay.
 * 
 */
public class BuyerRequirementDetailsType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "ShipToRegistrationCountry")
	private Boolean shipToRegistrationCountry;
	
	@Element(name = "ZeroFeedbackScore")
	private Boolean zeroFeedbackScore;
	
	@Element(name = "MinimumFeedbackScore")
	private Integer minimumFeedbackScore;
	
	@Element(name = "MaximumItemRequirements")
	private MaximumItemRequirementsType maximumItemRequirements;
	
	@Element(name = "LinkedPayPalAccount")
	private Boolean linkedPayPalAccount;
	
	@Element(name = "VerifiedUserRequirements")
	private VerifiedUserRequirementsType verifiedUserRequirements;
	
	@Element(name = "MaximumUnpaidItemStrikesInfo")
	private MaximumUnpaidItemStrikesInfoType maximumUnpaidItemStrikesInfo;
	
	@Element(name = "MaximumBuyerPolicyViolations")
	private MaximumBuyerPolicyViolationsType maximumBuyerPolicyViolations;
	
    
	/**
     * public getter
     *
     * 
     * The seller includes and sets this field to 'true' as a mechanism to block bidders who
     * reside (according to their eBay primary shipping address) in countries that are on the ship-to
     * exclusion list. Sellers add countries or regions to their ship-to exclusion list by adding
     * those countries or regions using one or more <b>ExcludeShipToLocation</b> fields 
     * in an Add/Revise/Relist call.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getShipToRegistrationCountry() {
	    return this.shipToRegistrationCountry;
	}
	
	/**
	 * public setter
	 *
     * 
     * The seller includes and sets this field to 'true' as a mechanism to block bidders who
     * reside (according to their eBay primary shipping address) in countries that are on the ship-to
     * exclusion list. Sellers add countries or regions to their ship-to exclusion list by adding
     * those countries or regions using one or more <b>ExcludeShipToLocation</b> fields 
     * in an Add/Revise/Relist call.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setShipToRegistrationCountry(Boolean shipToRegistrationCountry) {
	    this.shipToRegistrationCountry = shipToRegistrationCountry;
	}
	/**
     * public getter
     *
     * 
     * This Buyer Requirements feature is only available to sellers on the China site, and is 
     * only applicable to fixed-price or auction Buy It Now items.
     * <br/><br/>
     * The seller includes and sets this field to 'true' as a mechanism to block prospective
     * buyers with a feedback score of 0 from buying items with a price of 100 RMB or higher.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getZeroFeedbackScore() {
	    return this.zeroFeedbackScore;
	}
	
	/**
	 * public setter
	 *
     * 
     * This Buyer Requirements feature is only available to sellers on the China site, and is 
     * only applicable to fixed-price or auction Buy It Now items.
     * <br/><br/>
     * The seller includes and sets this field to 'true' as a mechanism to block prospective
     * buyers with a feedback score of 0 from buying items with a price of 100 RMB or higher.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setZeroFeedbackScore(Boolean zeroFeedbackScore) {
	    this.zeroFeedbackScore = zeroFeedbackScore;
	}
	/**
     * public getter
     *
     * 
     * The seller includes this field as a mechanism to block bidders who have a Feedback
     * Score less than the specified value. To obtain the list of supported values, call
     * <b>GeteBayDetails</b>, include
     * <b>BuyerRequirementDetails</b> as a <b>DetailName</b> 
     * value in the request, and then look for the list of Minimum Feedback Score values
     * returned under the <b>MinimumFeedbackScore</b> container in the 
     * response. Currently, the valid values for the US site are -3, -2, and -1.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getMinimumFeedbackScore() {
	    return this.minimumFeedbackScore;
	}
	
	/**
	 * public setter
	 *
     * 
     * The seller includes this field as a mechanism to block bidders who have a Feedback
     * Score less than the specified value. To obtain the list of supported values, call
     * <b>GeteBayDetails</b>, include
     * <b>BuyerRequirementDetails</b> as a <b>DetailName</b> 
     * value in the request, and then look for the list of Minimum Feedback Score values
     * returned under the <b>MinimumFeedbackScore</b> container in the 
     * response. Currently, the valid values for the US site are -3, -2, and -1.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setMinimumFeedbackScore(Integer minimumFeedbackScore) {
	    this.minimumFeedbackScore = minimumFeedbackScore;
	}
	/**
     * public getter
     *
     * 
     * The seller uses this container as a mechanism to restrict the number of items (specifying a
     * <b>MaximumItemCount</b> value) a prospective buyer can purchase from the seller
     * during a 10-day period. The seller also has the option of setting a 
     * <b>MinimumFeedbackScore</b> requirement. If both fields of the 
     * <b>MaximumItemRequirements</b> container are set, the <b>MaximumItemCount</b> 
     * limit will only apply to those prospective buyers that don't equal or exceed the 
     * specified minimum Feedback Score.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.MaximumItemRequirementsType
	 */
	public MaximumItemRequirementsType getMaximumItemRequirements() {
	    return this.maximumItemRequirements;
	}
	
	/**
	 * public setter
	 *
     * 
     * The seller uses this container as a mechanism to restrict the number of items (specifying a
     * <b>MaximumItemCount</b> value) a prospective buyer can purchase from the seller
     * during a 10-day period. The seller also has the option of setting a 
     * <b>MinimumFeedbackScore</b> requirement. If both fields of the 
     * <b>MaximumItemRequirements</b> container are set, the <b>MaximumItemCount</b> 
     * limit will only apply to those prospective buyers that don't equal or exceed the 
     * specified minimum Feedback Score.
     * 
     *
     * @param ebay.apis.eblbasecomponents.MaximumItemRequirementsType
	 */
	public void setMaximumItemRequirements(MaximumItemRequirementsType maximumItemRequirements) {
	    this.maximumItemRequirements = maximumItemRequirements;
	}
	/**
     * public getter
     *
     * 
     * The seller includes and sets this field to 'true' as a mechanism to block bidders who do 
     * not have a PayPal account linked to their eBay account.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getLinkedPayPalAccount() {
	    return this.linkedPayPalAccount;
	}
	
	/**
	 * public setter
	 *
     * 
     * The seller includes and sets this field to 'true' as a mechanism to block bidders who do 
     * not have a PayPal account linked to their eBay account.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setLinkedPayPalAccount(Boolean linkedPayPalAccount) {
	    this.linkedPayPalAccount = linkedPayPalAccount;
	}
	/**
     * public getter
     *
     * 
     * The seller uses this container as a mechanism to block prospective buyers who do not pass 
     * a verified user check.
     * <br/><br/>
     * This container is only applicable to the following eBay sites:
     * <ul>
     * <li>Australia</li>
     * <li>France</li>
     * <li>India</li>
     * <li>Ireland</li>
     * <li>Spain</li>
     * <li>UK</li>
     * </ul>
     * 
     *
     * @returns ebay.apis.eblbasecomponents.VerifiedUserRequirementsType
	 */
	public VerifiedUserRequirementsType getVerifiedUserRequirements() {
	    return this.verifiedUserRequirements;
	}
	
	/**
	 * public setter
	 *
     * 
     * The seller uses this container as a mechanism to block prospective buyers who do not pass 
     * a verified user check.
     * <br/><br/>
     * This container is only applicable to the following eBay sites:
     * <ul>
     * <li>Australia</li>
     * <li>France</li>
     * <li>India</li>
     * <li>Ireland</li>
     * <li>Spain</li>
     * <li>UK</li>
     * </ul>
     * 
     *
     * @param ebay.apis.eblbasecomponents.VerifiedUserRequirementsType
	 */
	public void setVerifiedUserRequirements(VerifiedUserRequirementsType verifiedUserRequirements) {
	    this.verifiedUserRequirements = verifiedUserRequirements;
	}
	/**
     * public getter
     *
     * 
     * The seller uses this container as a mechanism to block prospective buyers who have one or 
     * more unpaid item strikes on their account during a specified time period.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.MaximumUnpaidItemStrikesInfoType
	 */
	public MaximumUnpaidItemStrikesInfoType getMaximumUnpaidItemStrikesInfo() {
	    return this.maximumUnpaidItemStrikesInfo;
	}
	
	/**
	 * public setter
	 *
     * 
     * The seller uses this container as a mechanism to block prospective buyers who have one or 
     * more unpaid item strikes on their account during a specified time period.
     * 
     *
     * @param ebay.apis.eblbasecomponents.MaximumUnpaidItemStrikesInfoType
	 */
	public void setMaximumUnpaidItemStrikesInfo(MaximumUnpaidItemStrikesInfoType maximumUnpaidItemStrikesInfo) {
	    this.maximumUnpaidItemStrikesInfo = maximumUnpaidItemStrikesInfo;
	}
	/**
     * public getter
     *
     * 
     * The seller uses this container as a mechanism to block prospective buyers who have one or 
     * more buyer policy violations on their account during a specified time period.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.MaximumBuyerPolicyViolationsType
	 */
	public MaximumBuyerPolicyViolationsType getMaximumBuyerPolicyViolations() {
	    return this.maximumBuyerPolicyViolations;
	}
	
	/**
	 * public setter
	 *
     * 
     * The seller uses this container as a mechanism to block prospective buyers who have one or 
     * more buyer policy violations on their account during a specified time period.
     * 
     *
     * @param ebay.apis.eblbasecomponents.MaximumBuyerPolicyViolationsType
	 */
	public void setMaximumBuyerPolicyViolations(MaximumBuyerPolicyViolationsType maximumBuyerPolicyViolations) {
	    this.maximumBuyerPolicyViolations = maximumBuyerPolicyViolations;
	}

}