// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * 
 * These are request errors (as opposed to system errors) that occur due to problems
 * with business-level data (e.g., an invalid combination of arguments) that
 * the application passed in.
 * 
 */
public class ErrorType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "ShortMessage")
	private String shortMessage;
	
	@Element(name = "LongMessage")
	private String longMessage;
	
	@Element(name = "ErrorCode")
	private String errorCode;
	
	@Element(name = "UserDisplayHint")
	private Boolean userDisplayHint;
	
	@Element(name = "SeverityCode")
	private SeverityCodeType severityCode;
	
	@Element(name = "ErrorParameters")
	private List<ErrorParameterType> errorParameters;
	
	@Element(name = "ErrorClassification")
	private ErrorClassificationCodeType errorClassification;
	
    
	/**
     * public getter
     *
     * 
     * A brief description of the condition that raised the error.
     * 
     *
     * @returns java.lang.String
	 */
	public String getShortMessage() {
	    return this.shortMessage;
	}
	
	/**
	 * public setter
	 *
     * 
     * A brief description of the condition that raised the error.
     * 
     *
     * @param java.lang.String
	 */
	public void setShortMessage(String shortMessage) {
	    this.shortMessage = shortMessage;
	}
	/**
     * public getter
     *
     * 
     * A more detailed description of the condition that raised the error.
     * 
     *
     * @returns java.lang.String
	 */
	public String getLongMessage() {
	    return this.longMessage;
	}
	
	/**
	 * public setter
	 *
     * 
     * A more detailed description of the condition that raised the error.
     * 
     *
     * @param java.lang.String
	 */
	public void setLongMessage(String longMessage) {
	    this.longMessage = longMessage;
	}
	/**
     * public getter
     *
     * 
     * A unique code that identifies the particular error condition that occurred.
     * Your application can use error codes as identifiers
     * in your customized error-handling algorithms. See the "Errors by Number" document.
     * 
     *
     * @returns java.lang.String
	 */
	public String getErrorCode() {
	    return this.errorCode;
	}
	
	/**
	 * public setter
	 *
     * 
     * A unique code that identifies the particular error condition that occurred.
     * Your application can use error codes as identifiers
     * in your customized error-handling algorithms. See the "Errors by Number" document.
     * 
     *
     * @param java.lang.String
	 */
	public void setErrorCode(String errorCode) {
	    this.errorCode = errorCode;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether the error message text is intended to be displayed to an end user
     * or intended only to be parsed by the application. If true or not present (the default),
     * the message text is intended for the end user. If false, the message text is intended for
     * the application, and the application should translate the error into a more appropriate message.
     * Only applicable to Item Specifics errors and warnings returned from listing requests.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getUserDisplayHint() {
	    return this.userDisplayHint;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether the error message text is intended to be displayed to an end user
     * or intended only to be parsed by the application. If true or not present (the default),
     * the message text is intended for the end user. If false, the message text is intended for
     * the application, and the application should translate the error into a more appropriate message.
     * Only applicable to Item Specifics errors and warnings returned from listing requests.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setUserDisplayHint(Boolean userDisplayHint) {
	    this.userDisplayHint = userDisplayHint;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether the error is a severe error (causing the request to fail)
     * or an informational error (a warning) that should be communicated to the user.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SeverityCodeType
	 */
	public SeverityCodeType getSeverityCode() {
	    return this.severityCode;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether the error is a severe error (causing the request to fail)
     * or an informational error (a warning) that should be communicated to the user.
     * 
     *
     * @param ebay.apis.eblbasecomponents.SeverityCodeType
	 */
	public void setSeverityCode(SeverityCodeType severityCode) {
	    this.severityCode = severityCode;
	}
	/**
     * public getter
     *
     * 
     * This optional element carries a list of context-specific
     * error variables that indicate details about the error condition.
     * These are useful when multiple instances of ErrorType are returned.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.ErrorParameterType>
	 */
	public List<ErrorParameterType> getErrorParameters() {
	    return this.errorParameters;
	}
	
	/**
	 * public setter
	 *
     * 
     * This optional element carries a list of context-specific
     * error variables that indicate details about the error condition.
     * These are useful when multiple instances of ErrorType are returned.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.ErrorParameterType>
	 */
	public void setErrorParameters(List<ErrorParameterType> errorParameters) {
	    this.errorParameters = errorParameters;
	}
	/**
     * public getter
     *
     * 
     * API errors are divided between two classes: system errors and request errors.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ErrorClassificationCodeType
	 */
	public ErrorClassificationCodeType getErrorClassification() {
	    return this.errorClassification;
	}
	
	/**
	 * public setter
	 *
     * 
     * API errors are divided between two classes: system errors and request errors.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ErrorClassificationCodeType
	 */
	public void setErrorClassification(ErrorClassificationCodeType errorClassification) {
	    this.errorClassification = errorClassification;
	}

}