// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * Ends the specified fixed-price listing before the date and time at which
 * it would normally end (per the listing duration).
 * 
 */
@RootElement(name = "EndFixedPriceItemRequest", namespace = "urn:ebay:apis:eBLBaseComponents")
public class EndFixedPriceItemRequestType extends AbstractRequestType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "ItemID")
	private String itemID;
	
	@Element(name = "EndingReason")
	private EndReasonCodeType endingReason;
	
	@Element(name = "SKU")
	private String sku;
	
    
	/**
     * public getter
     *
     * 
     * Unique item ID that identifies the item listing that you want to end.
     * <br><br>
     * In the EndFixedPriceItem request, either ItemID or SKU is required.
     * If both are passed in and they don't refer to the same listing, eBay
     * ignores SKU and considers only the ItemID.
     * 
     *
     * @returns java.lang.String
	 */
	public String getItemID() {
	    return this.itemID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Unique item ID that identifies the item listing that you want to end.
     * <br><br>
     * In the EndFixedPriceItem request, either ItemID or SKU is required.
     * If both are passed in and they don't refer to the same listing, eBay
     * ignores SKU and considers only the ItemID.
     * 
     *
     * @param java.lang.String
	 */
	public void setItemID(String itemID) {
	    this.itemID = itemID;
	}
	/**
     * public getter
     *
     * 
     * Indicates the seller's reason for ending the listing early. This field
     * is required if the seller is ending the item early and the item did
     * not successfully sell.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.EndReasonCodeType
	 */
	public EndReasonCodeType getEndingReason() {
	    return this.endingReason;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates the seller's reason for ending the listing early. This field
     * is required if the seller is ending the item early and the item did
     * not successfully sell.
     * 
     *
     * @param ebay.apis.eblbasecomponents.EndReasonCodeType
	 */
	public void setEndingReason(EndReasonCodeType endingReason) {
	    this.endingReason = endingReason;
	}
	/**
     * public getter
     *
     * 
     * The unique SKU of the item being ended. A SKU (stock keeping unit) is
     * an identifier defined by a seller. SKU can only be used to end an
     * item if you listed the item by using AddFixedPriceItem or
     * RelistFixedPriceItem, and you set Item.InventoryTrackingMethod to SKU
     * at the time the item was listed. (These criteria are necessary to
     * uniquely identify the listing by a SKU.)
     * <br><br>
     * In the EndFixedPriceItem request, either ItemID or SKU is required. If
     * both are passed in and they don't refer to the same listing, eBay
     * ignores SKU and considers only the ItemID.
     * <br><br>
     * To remove a SKU when you revise or relist an item, use DeletedField in
     * the revision or relist call.
     * 
     *
     * @returns java.lang.String
	 */
	public String getSku() {
	    return this.sku;
	}
	
	/**
	 * public setter
	 *
     * 
     * The unique SKU of the item being ended. A SKU (stock keeping unit) is
     * an identifier defined by a seller. SKU can only be used to end an
     * item if you listed the item by using AddFixedPriceItem or
     * RelistFixedPriceItem, and you set Item.InventoryTrackingMethod to SKU
     * at the time the item was listed. (These criteria are necessary to
     * uniquely identify the listing by a SKU.)
     * <br><br>
     * In the EndFixedPriceItem request, either ItemID or SKU is required. If
     * both are passed in and they don't refer to the same listing, eBay
     * ignores SKU and considers only the ItemID.
     * <br><br>
     * To remove a SKU when you revise or relist an item, use DeletedField in
     * the revision or relist call.
     * 
     *
     * @param java.lang.String
	 */
	public void setSku(String sku) {
	    this.sku = sku;
	}

}