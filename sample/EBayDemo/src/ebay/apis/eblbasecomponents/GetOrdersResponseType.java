// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * Returns the set of orders that match the order IDs or filter criteria specified.
 * 
 */
@RootElement(name = "GetOrdersResponse", namespace = "urn:ebay:apis:eBLBaseComponents")
public class GetOrdersResponseType extends AbstractResponseType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "PaginationResult")
	private PaginationResultType paginationResult;
	
	@Element(name = "HasMoreOrders")
	private Boolean hasMoreOrders;
	
	@Element(name = "OrderArray")
	private OrderArrayType orderArray;
	
	@Element(name = "OrdersPerPage")
	private Integer ordersPerPage;
	
	@Element(name = "PageNumber")
	private Integer pageNumber;
	
	@Element(name = "ReturnedOrderCountActual")
	private Integer returnedOrderCountActual;
	
    
	/**
     * public getter
     *
     * 
     * Contains information regarding the pagination of
     * data, including the total number of pages and the total
     * number of orders.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.PaginationResultType
	 */
	public PaginationResultType getPaginationResult() {
	    return this.paginationResult;
	}
	
	/**
	 * public setter
	 *
     * 
     * Contains information regarding the pagination of
     * data, including the total number of pages and the total
     * number of orders.
     * 
     *
     * @param ebay.apis.eblbasecomponents.PaginationResultType
	 */
	public void setPaginationResult(PaginationResultType paginationResult) {
	    this.paginationResult = paginationResult;
	}
	/**
     * public getter
     *
     * 
     * A true value indicates that there are more orders to be
     * retrieved. Additional GetOrders calls with higher page numbers or more
     * entries per page must be made to retrieve these orders. If false, no more
     * orders are available or no orders match the request (based on the input
     * filters).
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getHasMoreOrders() {
	    return this.hasMoreOrders;
	}
	
	/**
	 * public setter
	 *
     * 
     * A true value indicates that there are more orders to be
     * retrieved. Additional GetOrders calls with higher page numbers or more
     * entries per page must be made to retrieve these orders. If false, no more
     * orders are available or no orders match the request (based on the input
     * filters).
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setHasMoreOrders(Boolean hasMoreOrders) {
	    this.hasMoreOrders = hasMoreOrders;
	}
	/**
     * public getter
     *
     * 
     * The set of orders that match the order IDs or filter criteria specified.
     * Also applicable to Half.com (only returns orders that have not been marked as shipped).
     * 
     *
     * @returns ebay.apis.eblbasecomponents.OrderArrayType
	 */
	public OrderArrayType getOrderArray() {
	    return this.orderArray;
	}
	
	/**
	 * public setter
	 *
     * 
     * The set of orders that match the order IDs or filter criteria specified.
     * Also applicable to Half.com (only returns orders that have not been marked as shipped).
     * 
     *
     * @param ebay.apis.eblbasecomponents.OrderArrayType
	 */
	public void setOrderArray(OrderArrayType orderArray) {
	    this.orderArray = orderArray;
	}
	/**
     * public getter
     *
     * 
     * Indicates the number of orders that can be
     * returned per page of data (i.e., per call). This is the same value
     * specified in the Pagination.EntriesPerPage input (or the default value, if
     * EntriesPerPage was not specified). This is not necessarily the actual
     * number of orders returned per page (see ReturnedOrderCountActual).
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getOrdersPerPage() {
	    return this.ordersPerPage;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates the number of orders that can be
     * returned per page of data (i.e., per call). This is the same value
     * specified in the Pagination.EntriesPerPage input (or the default value, if
     * EntriesPerPage was not specified). This is not necessarily the actual
     * number of orders returned per page (see ReturnedOrderCountActual).
     * 
     *
     * @param java.lang.Integer
	 */
	public void setOrdersPerPage(Integer ordersPerPage) {
	    this.ordersPerPage = ordersPerPage;
	}
	/**
     * public getter
     *
     * 
     * Indicates the page number of data returned in the response. 
     * This is the same value specified in the
     * Pagination.PageNumber input. If orders are returned, the first page is 1.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getPageNumber() {
	    return this.pageNumber;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates the page number of data returned in the response. 
     * This is the same value specified in the
     * Pagination.PageNumber input. If orders are returned, the first page is 1.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setPageNumber(Integer pageNumber) {
	    this.pageNumber = pageNumber;
	}
	/**
     * public getter
     *
     * 
     * Indicates the total number of orders returned.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getReturnedOrderCountActual() {
	    return this.returnedOrderCountActual;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates the total number of orders returned.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setReturnedOrderCountActual(Integer returnedOrderCountActual) {
	    this.returnedOrderCountActual = returnedOrderCountActual;
	}

}