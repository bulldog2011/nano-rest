// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;
import java.util.Date;

/**
 * 
 *         Type defining the <b>SiteHostedPictureDetails</b> container that is returned
 * in an <b>UploadSiteHostedPictures</b> call. 
 *       
 */
public class SiteHostedPictureDetailsType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "PictureName")
	private String pictureName;
	
	@Element(name = "PictureSet")
	private PictureSetCodeType pictureSet;
	
	@Element(name = "PictureFormat")
	private PictureFormatCodeType pictureFormat;
	
	@Element(name = "FullURL")
	private String fullURL;
	
	@Element(name = "BaseURL")
	private String baseURL;
	
	@Element(name = "PictureSetMember")
	private List<PictureSetMemberType> pictureSetMember;
	
	@Element(name = "ExternalPictureURL")
	private String externalPictureURL;
	
	@Element(name = "UseByDate")
	private Date useByDate;
	
    
	/**
     * public getter
     *
     * 
     *             Corresponds to the PictureName input value that you specified in the request.
     *             You can use the PictureName output field to confirm that the
     *             UploadSiteHostedPictures response corresponds to a specific
     *             UploadSiteHostedPictures request.
     *           
     *
     * @returns java.lang.String
	 */
	public String getPictureName() {
	    return this.pictureName;
	}
	
	/**
	 * public setter
	 *
     * 
     *             Corresponds to the PictureName input value that you specified in the request.
     *             You can use the PictureName output field to confirm that the
     *             UploadSiteHostedPictures response corresponds to a specific
     *             UploadSiteHostedPictures request.
     *           
     *
     * @param java.lang.String
	 */
	public void setPictureName(String pictureName) {
	    this.pictureName = pictureName;
	}
	/**
     * public getter
     *
     * 
     *             The size of images generated. This value may differ from the one requested,
     *             e.g. if a Supersize image cannot be generated.
     *           
     *
     * @returns ebay.apis.eblbasecomponents.PictureSetCodeType
	 */
	public PictureSetCodeType getPictureSet() {
	    return this.pictureSet;
	}
	
	/**
	 * public setter
	 *
     * 
     *             The size of images generated. This value may differ from the one requested,
     *             e.g. if a Supersize image cannot be generated.
     *           
     *
     * @param ebay.apis.eblbasecomponents.PictureSetCodeType
	 */
	public void setPictureSet(PictureSetCodeType pictureSet) {
	    this.pictureSet = pictureSet;
	}
	/**
     * public getter
     *
     * 
     *             The format into which an uploaded picture has been converted.
     *             This value is usually JPG, but may be GIF.
     *           
     *
     * @returns ebay.apis.eblbasecomponents.PictureFormatCodeType
	 */
	public PictureFormatCodeType getPictureFormat() {
	    return this.pictureFormat;
	}
	
	/**
	 * public setter
	 *
     * 
     *             The format into which an uploaded picture has been converted.
     *             This value is usually JPG, but may be GIF.
     *           
     *
     * @param ebay.apis.eblbasecomponents.PictureFormatCodeType
	 */
	public void setPictureFormat(PictureFormatCodeType pictureFormat) {
	    this.pictureFormat = pictureFormat;
	}
	/**
     * public getter
     *
     * 
     *             The URL for the uploaded picture.
     *             Store this value for association with an item listing.
     *             That is, after you use UploadSiteHostedPictures to upload an image,
     *             use the value in FullURL to associate the image with an item
     *             (specify the value in Item.PictureDetails.PictureURL in
     *             AddItem, ReviseItem, or RelistItem) prior to the UseByDate returned in the 
     *             response.
     *           
     *
     * @returns java.lang.String
	 */
	public String getFullURL() {
	    return this.fullURL;
	}
	
	/**
	 * public setter
	 *
     * 
     *             The URL for the uploaded picture.
     *             Store this value for association with an item listing.
     *             That is, after you use UploadSiteHostedPictures to upload an image,
     *             use the value in FullURL to associate the image with an item
     *             (specify the value in Item.PictureDetails.PictureURL in
     *             AddItem, ReviseItem, or RelistItem) prior to the UseByDate returned in the 
     *             response.
     *           
     *
     * @param java.lang.String
	 */
	public void setFullURL(String fullURL) {
	    this.fullURL = fullURL;
	}
	/**
     * public getter
     *
     * 
     *             Truncated version of FullURL.
     *           
     *
     * @returns java.lang.String
	 */
	public String getBaseURL() {
	    return this.baseURL;
	}
	
	/**
	 * public setter
	 *
     * 
     *             Truncated version of FullURL.
     *           
     *
     * @param java.lang.String
	 */
	public void setBaseURL(String baseURL) {
	    this.baseURL = baseURL;
	}
	/**
     * public getter
     *
     * 
     *             URL and size information for each generated and stored size.
     *             This data is not necessarily needed by your application,
     *             but is provided for use in picture previews.
     *             This data is used for display control for specific pictures in the generated imageset.
     *             This data is supplied for all generated pictures.
     *           
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.PictureSetMemberType>
	 */
	public List<PictureSetMemberType> getPictureSetMember() {
	    return this.pictureSetMember;
	}
	
	/**
	 * public setter
	 *
     * 
     *             URL and size information for each generated and stored size.
     *             This data is not necessarily needed by your application,
     *             but is provided for use in picture previews.
     *             This data is used for display control for specific pictures in the generated imageset.
     *             This data is supplied for all generated pictures.
     *           
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.PictureSetMemberType>
	 */
	public void setPictureSetMember(List<PictureSetMemberType> pictureSetMember) {
	    this.pictureSetMember = pictureSetMember;
	}
	/**
     * public getter
     *
     * 
     *       The URL for an external picture hosting website will be included in the
     * response, if it is provided in the UploadSiteHostedPictures request.
     * <br>
     * <br>
     * Providing an external picture-hosting URL will allow you to include a
     *       picture in your listing that is not hosted on the eBay servers.
     *       
     *
     * @returns java.lang.String
	 */
	public String getExternalPictureURL() {
	    return this.externalPictureURL;
	}
	
	/**
	 * public setter
	 *
     * 
     *       The URL for an external picture hosting website will be included in the
     * response, if it is provided in the UploadSiteHostedPictures request.
     * <br>
     * <br>
     * Providing an external picture-hosting URL will allow you to include a
     *       picture in your listing that is not hosted on the eBay servers.
     *       
     *
     * @param java.lang.String
	 */
	public void setExternalPictureURL(String externalPictureURL) {
	    this.externalPictureURL = externalPictureURL;
	}
	/**
     * public getter
     *
     * 
     *         The UseByDate is the last date that the picture can be associated
     *         with an item.
     *         <br>
     * <br>
     *       If the image is used in a listing, the image is kept for 90 days
     * plus the duration length of the listing (e.g. 90 + 7). If the image
     * is used in another listing while it is still being kept on the
     * server, the image will be kept until 90 days after the end of the
     *       newest listing.
     *       
     *
     * @returns java.util.Date
	 */
	public Date getUseByDate() {
	    return this.useByDate;
	}
	
	/**
	 * public setter
	 *
     * 
     *         The UseByDate is the last date that the picture can be associated
     *         with an item.
     *         <br>
     * <br>
     *       If the image is used in a listing, the image is kept for 90 days
     * plus the duration length of the listing (e.g. 90 + 7). If the image
     * is used in another listing while it is still being kept on the
     * server, the image will be kept until 90 days after the end of the
     *       newest listing.
     *       
     *
     * @param java.util.Date
	 */
	public void setUseByDate(Date useByDate) {
	    this.useByDate = useByDate;
	}

}