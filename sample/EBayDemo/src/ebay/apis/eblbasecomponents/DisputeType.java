// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;
import java.util.Date;

/**
 * 
 * Contains all information describing a dispute.
 * 
 */
public class DisputeType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "DisputeID")
	private String disputeID;
	
	@Element(name = "DisputeRecordType")
	private DisputeRecordTypeCodeType disputeRecordType;
	
	@Element(name = "DisputeState")
	private DisputeStateCodeType disputeState;
	
	@Element(name = "DisputeStatus")
	private DisputeStatusCodeType disputeStatus;
	
	@Element(name = "OtherPartyRole")
	private TradingRoleCodeType otherPartyRole;
	
	@Element(name = "OtherPartyName")
	private String otherPartyName;
	
	@Element(name = "UserRole")
	private TradingRoleCodeType userRole;
	
	@Element(name = "BuyerUserID")
	private String buyerUserID;
	
	@Element(name = "SellerUserID")
	private String sellerUserID;
	
	@Element(name = "TransactionID")
	private String transactionID;
	
	@Element(name = "Item")
	private ItemType item;
	
	@Element(name = "DisputeReason")
	private DisputeReasonCodeType disputeReason;
	
	@Element(name = "DisputeExplanation")
	private DisputeExplanationCodeType disputeExplanation;
	
	@Element(name = "DisputeCreditEligibility")
	private DisputeCreditEligibilityCodeType disputeCreditEligibility;
	
	@Element(name = "DisputeCreatedTime")
	private Date disputeCreatedTime;
	
	@Element(name = "DisputeModifiedTime")
	private Date disputeModifiedTime;
	
	@Element(name = "DisputeResolution")
	private List<DisputeResolutionType> disputeResolution;
	
	@Element(name = "DisputeMessage")
	private List<DisputeMessageType> disputeMessage;
	
	@Element(name = "Escalation")
	private Boolean escalation;
	
	@Element(name = "PurchaseProtection")
	private Boolean purchaseProtection;
	
	@Element(name = "OrderLineItemID")
	private String orderLineItemID;
	
    
	/**
     * public getter
     *
     * 
     * The unique identifier of an eBay dispute.
     * 
     *
     * @returns java.lang.String
	 */
	public String getDisputeID() {
	    return this.disputeID;
	}
	
	/**
	 * public setter
	 *
     * 
     * The unique identifier of an eBay dispute.
     * 
     *
     * @param java.lang.String
	 */
	public void setDisputeID(String disputeID) {
	    this.disputeID = disputeID;
	}
	/**
     * public getter
     *
     * 
     * A value to indicate the type of dispute.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.DisputeRecordTypeCodeType
	 */
	public DisputeRecordTypeCodeType getDisputeRecordType() {
	    return this.disputeRecordType;
	}
	
	/**
	 * public setter
	 *
     * 
     * A value to indicate the type of dispute.
     * 
     *
     * @param ebay.apis.eblbasecomponents.DisputeRecordTypeCodeType
	 */
	public void setDisputeRecordType(DisputeRecordTypeCodeType disputeRecordType) {
	    this.disputeRecordType = disputeRecordType;
	}
	/**
     * public getter
     *
     * 
     * The internal state of the dispute. The value determines
     * which values of <b>DisputeActivity</b> are valid when responding
     * to a dispute.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.DisputeStateCodeType
	 */
	public DisputeStateCodeType getDisputeState() {
	    return this.disputeState;
	}
	
	/**
	 * public setter
	 *
     * 
     * The internal state of the dispute. The value determines
     * which values of <b>DisputeActivity</b> are valid when responding
     * to a dispute.
     * 
     *
     * @param ebay.apis.eblbasecomponents.DisputeStateCodeType
	 */
	public void setDisputeState(DisputeStateCodeType disputeState) {
	    this.disputeState = disputeState;
	}
	/**
     * public getter
     *
     * 
     * The status of the dispute, which provides additional
     * information about the dispute state.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.DisputeStatusCodeType
	 */
	public DisputeStatusCodeType getDisputeStatus() {
	    return this.disputeStatus;
	}
	
	/**
	 * public setter
	 *
     * 
     * The status of the dispute, which provides additional
     * information about the dispute state.
     * 
     *
     * @param ebay.apis.eblbasecomponents.DisputeStatusCodeType
	 */
	public void setDisputeStatus(DisputeStatusCodeType disputeStatus) {
	    this.disputeStatus = disputeStatus;
	}
	/**
     * public getter
     *
     * 
     * The role of the person involved in the dispute who is
     * not taking action or requesting information. The role is
     * either <b>Buyer</b> or <b>Seller</b>.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.TradingRoleCodeType
	 */
	public TradingRoleCodeType getOtherPartyRole() {
	    return this.otherPartyRole;
	}
	
	/**
	 * public setter
	 *
     * 
     * The role of the person involved in the dispute who is
     * not taking action or requesting information. The role is
     * either <b>Buyer</b> or <b>Seller</b>.
     * 
     *
     * @param ebay.apis.eblbasecomponents.TradingRoleCodeType
	 */
	public void setOtherPartyRole(TradingRoleCodeType otherPartyRole) {
	    this.otherPartyRole = otherPartyRole;
	}
	/**
     * public getter
     *
     * 
     * The user name of the person involved in the dispute who
     * is not taking action or requesting information. 
     * 
     *
     * @returns java.lang.String
	 */
	public String getOtherPartyName() {
	    return this.otherPartyName;
	}
	
	/**
	 * public setter
	 *
     * 
     * The user name of the person involved in the dispute who
     * is not taking action or requesting information. 
     * 
     *
     * @param java.lang.String
	 */
	public void setOtherPartyName(String otherPartyName) {
	    this.otherPartyName = otherPartyName;
	}
	/**
     * public getter
     *
     * 
     *   The role of the person involved in the dispute who is taking action or
     *   requesting information. The role is either <b>Buyer</b> or <b>Seller</b>.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.TradingRoleCodeType
	 */
	public TradingRoleCodeType getUserRole() {
	    return this.userRole;
	}
	
	/**
	 * public setter
	 *
     * 
     *   The role of the person involved in the dispute who is taking action or
     *   requesting information. The role is either <b>Buyer</b> or <b>Seller</b>.
     * 
     *
     * @param ebay.apis.eblbasecomponents.TradingRoleCodeType
	 */
	public void setUserRole(TradingRoleCodeType userRole) {
	    this.userRole = userRole;
	}
	/**
     * public getter
     *
     * 
     * The eBay user ID of the buyer involved in the dispute.
     * 
     *
     * @returns java.lang.String
	 */
	public String getBuyerUserID() {
	    return this.buyerUserID;
	}
	
	/**
	 * public setter
	 *
     * 
     * The eBay user ID of the buyer involved in the dispute.
     * 
     *
     * @param java.lang.String
	 */
	public void setBuyerUserID(String buyerUserID) {
	    this.buyerUserID = buyerUserID;
	}
	/**
     * public getter
     *
     * 
     * The eBay user ID of the seller involved in the dispute.
     * 
     *
     * @returns java.lang.String
	 */
	public String getSellerUserID() {
	    return this.sellerUserID;
	}
	
	/**
	 * public setter
	 *
     * 
     * The eBay user ID of the seller involved in the dispute.
     * 
     *
     * @param java.lang.String
	 */
	public void setSellerUserID(String sellerUserID) {
	    this.sellerUserID = sellerUserID;
	}
	/**
     * public getter
     *
     * 
     * The unique identifier of the order line item (transaction) under dispute. An
     * order line item is created once there is a commitment from a
     * buyer to purchase an item. In the case of <b>GetDispute</b> and <b>GetUserDisputes</b>
     * responses, this value identifies the order line item involved in the
     * dispute.
     * 
     *
     * @returns java.lang.String
	 */
	public String getTransactionID() {
	    return this.transactionID;
	}
	
	/**
	 * public setter
	 *
     * 
     * The unique identifier of the order line item (transaction) under dispute. An
     * order line item is created once there is a commitment from a
     * buyer to purchase an item. In the case of <b>GetDispute</b> and <b>GetUserDisputes</b>
     * responses, this value identifies the order line item involved in the
     * dispute.
     * 
     *
     * @param java.lang.String
	 */
	public void setTransactionID(String transactionID) {
	    this.transactionID = transactionID;
	}
	/**
     * public getter
     *
     * 
     * Container consisting of high-level details about the item involved in the
     * dispute. 
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ItemType
	 */
	public ItemType getItem() {
	    return this.item;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of high-level details about the item involved in the
     * dispute. 
     * 
     *
     * @param ebay.apis.eblbasecomponents.ItemType
	 */
	public void setItem(ItemType item) {
	    this.item = item;
	}
	/**
     * public getter
     *
     * 
     * The top-level reason for the dispute. The value of <b>DisputeReason</b>
     * determines which values of <b>DisputeExplanation</b> are valid.
     * See <b>DisputeExplanationCodeList</b> for details.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.DisputeReasonCodeType
	 */
	public DisputeReasonCodeType getDisputeReason() {
	    return this.disputeReason;
	}
	
	/**
	 * public setter
	 *
     * 
     * The top-level reason for the dispute. The value of <b>DisputeReason</b>
     * determines which values of <b>DisputeExplanation</b> are valid.
     * See <b>DisputeExplanationCodeList</b> for details.
     * 
     *
     * @param ebay.apis.eblbasecomponents.DisputeReasonCodeType
	 */
	public void setDisputeReason(DisputeReasonCodeType disputeReason) {
	    this.disputeReason = disputeReason;
	}
	/**
     * public getter
     *
     * 
     * The detailed explanation for the dispute. Valid values
     * depend on the value of <b>DisputeReason</b>. See <b>DisputeExplanationCodeList</b>
     * for details.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.DisputeExplanationCodeType
	 */
	public DisputeExplanationCodeType getDisputeExplanation() {
	    return this.disputeExplanation;
	}
	
	/**
	 * public setter
	 *
     * 
     * The detailed explanation for the dispute. Valid values
     * depend on the value of <b>DisputeReason</b>. See <b>DisputeExplanationCodeList</b>
     * for details.
     * 
     *
     * @param ebay.apis.eblbasecomponents.DisputeExplanationCodeType
	 */
	public void setDisputeExplanation(DisputeExplanationCodeType disputeExplanation) {
	    this.disputeExplanation = disputeExplanation;
	}
	/**
     * public getter
     *
     * 
     * A value to indicate whether or not the seller is currently eligible for a Final Value Fee credit. This tag
     * only indicates credit eligibility and does not mean that the case can be
     * closed. (Credit eligibility determines whether the seller gets the Final Value
     * Fee back when the dispute is closed.) The value is usually eligible until 4
     * days (for new flow) or 7 days (for old flow) after the dispute was created
     * unless the dispute is closed with buyer payment or Final Value Fee credit has
     * already been granted.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.DisputeCreditEligibilityCodeType
	 */
	public DisputeCreditEligibilityCodeType getDisputeCreditEligibility() {
	    return this.disputeCreditEligibility;
	}
	
	/**
	 * public setter
	 *
     * 
     * A value to indicate whether or not the seller is currently eligible for a Final Value Fee credit. This tag
     * only indicates credit eligibility and does not mean that the case can be
     * closed. (Credit eligibility determines whether the seller gets the Final Value
     * Fee back when the dispute is closed.) The value is usually eligible until 4
     * days (for new flow) or 7 days (for old flow) after the dispute was created
     * unless the dispute is closed with buyer payment or Final Value Fee credit has
     * already been granted.
     * 
     *
     * @param ebay.apis.eblbasecomponents.DisputeCreditEligibilityCodeType
	 */
	public void setDisputeCreditEligibility(DisputeCreditEligibilityCodeType disputeCreditEligibility) {
	    this.disputeCreditEligibility = disputeCreditEligibility;
	}
	/**
     * public getter
     *
     * 
     * The date and time the dispute was created, in GMT.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getDisputeCreatedTime() {
	    return this.disputeCreatedTime;
	}
	
	/**
	 * public setter
	 *
     * 
     * The date and time the dispute was created, in GMT.
     * 
     *
     * @param java.util.Date
	 */
	public void setDisputeCreatedTime(Date disputeCreatedTime) {
	    this.disputeCreatedTime = disputeCreatedTime;
	}
	/**
     * public getter
     *
     * 
     * The date and time the dispute was modified, in GMT.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getDisputeModifiedTime() {
	    return this.disputeModifiedTime;
	}
	
	/**
	 * public setter
	 *
     * 
     * The date and time the dispute was modified, in GMT.
     * 
     *
     * @param java.util.Date
	 */
	public void setDisputeModifiedTime(Date disputeModifiedTime) {
	    this.disputeModifiedTime = disputeModifiedTime;
	}
	/**
     * public getter
     *
     * 
     * The action resulting from the dispute resolution. The
     * action might include a Final Value Fee credit to the seller, a strike
     * to the buyer, a reversal, or an appeal.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.DisputeResolutionType>
	 */
	public List<DisputeResolutionType> getDisputeResolution() {
	    return this.disputeResolution;
	}
	
	/**
	 * public setter
	 *
     * 
     * The action resulting from the dispute resolution. The
     * action might include a Final Value Fee credit to the seller, a strike
     * to the buyer, a reversal, or an appeal.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.DisputeResolutionType>
	 */
	public void setDisputeResolution(List<DisputeResolutionType> disputeResolution) {
	    this.disputeResolution = disputeResolution;
	}
	/**
     * public getter
     *
     * 
     * A response or message posted to a dispute, either by
     * an application or by a user on the eBay site.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.DisputeMessageType>
	 */
	public List<DisputeMessageType> getDisputeMessage() {
	    return this.disputeMessage;
	}
	
	/**
	 * public setter
	 *
     * 
     * A response or message posted to a dispute, either by
     * an application or by a user on the eBay site.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.DisputeMessageType>
	 */
	public void setDisputeMessage(List<DisputeMessageType> disputeMessage) {
	    this.disputeMessage = disputeMessage;
	}
	/**
     * public getter
     *
     * 
     * Whether the buyer can close a dispute unhappy and escalate it
     * to the eBay Standard Purchase Protection Program. To escalate, the buyer
     * must be eligible for the PPP. Used in Item Not Received disputes.
     *     
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getEscalation() {
	    return this.escalation;
	}
	
	/**
	 * public setter
	 *
     * 
     * Whether the buyer can close a dispute unhappy and escalate it
     * to the eBay Standard Purchase Protection Program. To escalate, the buyer
     * must be eligible for the PPP. Used in Item Not Received disputes.
     *     
     *
     * @param java.lang.Boolean
	 */
	public void setEscalation(Boolean escalation) {
	    this.escalation = escalation;
	}
	/**
     * public getter
     *
     * 
     * Whether the buyer is eligible for the eBay Standard Purchase Protection
     * Program. The eligibility rules are described in the eBay site online help.
     * Used in Item Not Received disputes.
     *     
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getPurchaseProtection() {
	    return this.purchaseProtection;
	}
	
	/**
	 * public setter
	 *
     * 
     * Whether the buyer is eligible for the eBay Standard Purchase Protection
     * Program. The eligibility rules are described in the eBay site online help.
     * Used in Item Not Received disputes.
     *     
     *
     * @param java.lang.Boolean
	 */
	public void setPurchaseProtection(Boolean purchaseProtection) {
	    this.purchaseProtection = purchaseProtection;
	}
	/**
     * public getter
     *
     * 
     *    <b>OrderLineItemID</b> is a unique identifier for an eBay order line item and is
     * based upon the concatenation of <b>ItemID</b> and <b>TransactionID</b>, with a hyphen in
     * between these two IDs. In the case of <b>GetDispute</b> and <b>GetUserDisputes</b>
     * responses, this value identifies the order line item involved in the
     * dispute.
     * <br>
     *    
     *
     * @returns java.lang.String
	 */
	public String getOrderLineItemID() {
	    return this.orderLineItemID;
	}
	
	/**
	 * public setter
	 *
     * 
     *    <b>OrderLineItemID</b> is a unique identifier for an eBay order line item and is
     * based upon the concatenation of <b>ItemID</b> and <b>TransactionID</b>, with a hyphen in
     * between these two IDs. In the case of <b>GetDispute</b> and <b>GetUserDisputes</b>
     * responses, this value identifies the order line item involved in the
     * dispute.
     * <br>
     *    
     *
     * @param java.lang.String
	 */
	public void setOrderLineItemID(String orderLineItemID) {
	    this.orderLineItemID = orderLineItemID;
	}

}