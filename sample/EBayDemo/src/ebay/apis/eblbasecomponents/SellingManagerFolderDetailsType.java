// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;
import java.util.Date;

/**
 * 
 * Contains information about a Selling Manager folder.
 * 
 */
public class SellingManagerFolderDetailsType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "FolderID")
	private Long folderID;
	
	@Element(name = "ParentFolderID")
	private Long parentFolderID;
	
	@Element(name = "FolderLevel")
	private Long folderLevel;
	
	@Element(name = "FolderName")
	private String folderName;
	
	@Element(name = "FolderComment")
	private String folderComment;
	
	@Element(name = "ChildFolder")
	private List<SellingManagerFolderDetailsType> childFolder;
	
	@Element(name = "CreationTime")
	private Date creationTime;
	
    
	/**
     * public getter
     *
     * 
     * Unique ID of the folder. Originally returned in the AddSellingManagerInventoryFolder response.
     * 
     *
     * @returns java.lang.Long
	 */
	public Long getFolderID() {
	    return this.folderID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Unique ID of the folder. Originally returned in the AddSellingManagerInventoryFolder response.
     * 
     *
     * @param java.lang.Long
	 */
	public void setFolderID(Long folderID) {
	    this.folderID = folderID;
	}
	/**
     * public getter
     *
     * 
     * Unique ID of the parent folder. If it exists, it is returned.
     * 
     *
     * @returns java.lang.Long
	 */
	public Long getParentFolderID() {
	    return this.parentFolderID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Unique ID of the parent folder. If it exists, it is returned.
     * 
     *
     * @param java.lang.Long
	 */
	public void setParentFolderID(Long parentFolderID) {
	    this.parentFolderID = parentFolderID;
	}
	/**
     * public getter
     *
     * 
     * Level of this folder in the folder tree hierarchy. Root folder is at level 1.
     * 
     *
     * @returns java.lang.Long
	 */
	public Long getFolderLevel() {
	    return this.folderLevel;
	}
	
	/**
	 * public setter
	 *
     * 
     * Level of this folder in the folder tree hierarchy. Root folder is at level 1.
     * 
     *
     * @param java.lang.Long
	 */
	public void setFolderLevel(Long folderLevel) {
	    this.folderLevel = folderLevel;
	}
	/**
     * public getter
     *
     * 
     * Name assigned to the folder by the user in the AddSellingManagerInventoryFolder or
     * the ReviseSellingManagerInventoryFolder call.
     * 
     *
     * @returns java.lang.String
	 */
	public String getFolderName() {
	    return this.folderName;
	}
	
	/**
	 * public setter
	 *
     * 
     * Name assigned to the folder by the user in the AddSellingManagerInventoryFolder or
     * the ReviseSellingManagerInventoryFolder call.
     * 
     *
     * @param java.lang.String
	 */
	public void setFolderName(String folderName) {
	    this.folderName = folderName;
	}
	/**
     * public getter
     *
     * 
     * Comments associated with the folder. Returned if it exists.
     * 
     *
     * @returns java.lang.String
	 */
	public String getFolderComment() {
	    return this.folderComment;
	}
	
	/**
	 * public setter
	 *
     * 
     * Comments associated with the folder. Returned if it exists.
     * 
     *
     * @param java.lang.String
	 */
	public void setFolderComment(String folderComment) {
	    this.folderComment = folderComment;
	}
	/**
     * public getter
     *
     * 
     * Container for sub-folder information. Returned if requested.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.SellingManagerFolderDetailsType>
	 */
	public List<SellingManagerFolderDetailsType> getChildFolder() {
	    return this.childFolder;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container for sub-folder information. Returned if requested.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.SellingManagerFolderDetailsType>
	 */
	public void setChildFolder(List<SellingManagerFolderDetailsType> childFolder) {
	    this.childFolder = childFolder;
	}
	/**
     * public getter
     *
     * 
     * Date when this folder was created.
     *  
     *
     * @returns java.util.Date
	 */
	public Date getCreationTime() {
	    return this.creationTime;
	}
	
	/**
	 * public setter
	 *
     * 
     * Date when this folder was created.
     *  
     *
     * @param java.util.Date
	 */
	public void setCreationTime(Date creationTime) {
	    this.creationTime = creationTime;
	}

}