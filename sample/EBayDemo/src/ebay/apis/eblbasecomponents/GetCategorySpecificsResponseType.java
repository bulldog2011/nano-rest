// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * 
 * Calls made form seller or buyer find out what the most relevant tags and values are for a given category
 * 
 */
@RootElement(name = "GetCategorySpecificsResponse", namespace = "urn:ebay:apis:eBLBaseComponents")
public class GetCategorySpecificsResponseType extends AbstractResponseType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "Recommendations")
	private List<RecommendationsType> recommendations;
	
	@Element(name = "TaskReferenceID")
	private String taskReferenceID;
	
	@Element(name = "FileReferenceID")
	private String fileReferenceID;
	
    
	/**
     * public getter
     *
     * 
     * Returned with request version 609 and higher. <br>
     * <br>
     * Contains the most popular Item Specifics, if any, for a category
     * specified in the request, or contains information about whether
     * the recommendations have changed for that category since
     * the LastUpdateTime you requested. <br>
     * <br>
     * The most relevant Item Specifics (as determined by eBay) 
     * are returned first. In many cases, the values are returned in 
     * alphabetical order.<br>
     * <br>
     * This node returns empty (or it's not returned) for a category if
     * there is no applicable data (such as when you request a parent category, a category that has no popular Item Specifics yet,
     * or a duplicate category that was already returned).
     * If you pass in the CategoryID and Name fields together, but no
     * matching values are found for the name, eBay returns the name
     * with no values (even if the name is not recommended).<br>
     * <br>
     * If GetCategoryFeatures indicates that custom Item Specifics are
     * enabled for a leaf category, but GetCategorySpecifics doesn't
     * return any recommendations for that category, the seller can still
     * specify their own custom Item Specifics in that category.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.RecommendationsType>
	 */
	public List<RecommendationsType> getRecommendations() {
	    return this.recommendations;
	}
	
	/**
	 * public setter
	 *
     * 
     * Returned with request version 609 and higher. <br>
     * <br>
     * Contains the most popular Item Specifics, if any, for a category
     * specified in the request, or contains information about whether
     * the recommendations have changed for that category since
     * the LastUpdateTime you requested. <br>
     * <br>
     * The most relevant Item Specifics (as determined by eBay) 
     * are returned first. In many cases, the values are returned in 
     * alphabetical order.<br>
     * <br>
     * This node returns empty (or it's not returned) for a category if
     * there is no applicable data (such as when you request a parent category, a category that has no popular Item Specifics yet,
     * or a duplicate category that was already returned).
     * If you pass in the CategoryID and Name fields together, but no
     * matching values are found for the name, eBay returns the name
     * with no values (even if the name is not recommended).<br>
     * <br>
     * If GetCategoryFeatures indicates that custom Item Specifics are
     * enabled for a leaf category, but GetCategorySpecifics doesn't
     * return any recommendations for that category, the seller can still
     * specify their own custom Item Specifics in that category.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.RecommendationsType>
	 */
	public void setRecommendations(List<RecommendationsType> recommendations) {
	    this.recommendations = recommendations;
	}
	/**
     * public getter
     *
     * 
     * Use TaskReferenceID and FileReferenceID as inputs to the
     * downloadFile call in the eBay File Transfer API. That API lets
     * you retrieve a single (bulk) GetCategorySpecifics response with
     * all the Item Specifics recommendations available for the
     * requested site ID. (The downloadFile call downloads a .zip file
     * as an attachment.)<br>
     * <br>
     * Only returned when CategorySpecificsFileInfo is passed in the
     * request.
     * 
     *
     * @returns java.lang.String
	 */
	public String getTaskReferenceID() {
	    return this.taskReferenceID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Use TaskReferenceID and FileReferenceID as inputs to the
     * downloadFile call in the eBay File Transfer API. That API lets
     * you retrieve a single (bulk) GetCategorySpecifics response with
     * all the Item Specifics recommendations available for the
     * requested site ID. (The downloadFile call downloads a .zip file
     * as an attachment.)<br>
     * <br>
     * Only returned when CategorySpecificsFileInfo is passed in the
     * request.
     * 
     *
     * @param java.lang.String
	 */
	public void setTaskReferenceID(String taskReferenceID) {
	    this.taskReferenceID = taskReferenceID;
	}
	/**
     * public getter
     *
     * 
     * Use TaskReferenceID and FileReferenceID as inputs to the
     * downloadFile call in the eBay File Transfer API. That API lets
     * you retrieve a single (bulk) GetCategorySpecifics response with
     * all the Item Specifics recommendations available for the
     * requested site ID. (The downloadFile call downloads a .zip file
     * as an attachment.)<br>
     * <br>
     * Only returned when CategorySpecificsFileInfo is passed in the
     * request.
     * 
     *
     * @returns java.lang.String
	 */
	public String getFileReferenceID() {
	    return this.fileReferenceID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Use TaskReferenceID and FileReferenceID as inputs to the
     * downloadFile call in the eBay File Transfer API. That API lets
     * you retrieve a single (bulk) GetCategorySpecifics response with
     * all the Item Specifics recommendations available for the
     * requested site ID. (The downloadFile call downloads a .zip file
     * as an attachment.)<br>
     * <br>
     * Only returned when CategorySpecificsFileInfo is passed in the
     * request.
     * 
     *
     * @param java.lang.String
	 */
	public void setFileReferenceID(String fileReferenceID) {
	    this.fileReferenceID = fileReferenceID;
	}

}