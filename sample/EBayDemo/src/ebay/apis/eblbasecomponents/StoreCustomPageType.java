// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

public class StoreCustomPageType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "Name")
	private String name;
	
	@Element(name = "PageID")
	private Long pageID;
	
	@Element(name = "URLPath")
	private String urlPath;
	
	@Element(name = "URL")
	private String url;
	
	@Element(name = "Status")
	private StoreCustomPageStatusCodeType status;
	
	@Element(name = "Content")
	private String content;
	
	@Element(name = "LeftNav")
	private Boolean leftNav;
	
	@Element(name = "PreviewEnabled")
	private Boolean previewEnabled;
	
	@Element(name = "Order")
	private Integer order;
	
    
	/**
     * public getter
     *
     * 
     *   Name of the eBay Store custom page. This value is required if you are creating a new
     * page (and omitting a <b>PageID</b> value). Note that you must include a
     * name for the page even if you are using the <b>PreviewEnabled</b> flag.
     * However, since using the preview functionality means that the page will not be
     * persisted, you can enter a dummy value for this field if you have not decided on a
     * name for the page. The <b>Name</b> value is used in links to the page.
     *   
     *
     * @returns java.lang.String
	 */
	public String getName() {
	    return this.name;
	}
	
	/**
	 * public setter
	 *
     * 
     *   Name of the eBay Store custom page. This value is required if you are creating a new
     * page (and omitting a <b>PageID</b> value). Note that you must include a
     * name for the page even if you are using the <b>PreviewEnabled</b> flag.
     * However, since using the preview functionality means that the page will not be
     * persisted, you can enter a dummy value for this field if you have not decided on a
     * name for the page. The <b>Name</b> value is used in links to the page.
     *   
     *
     * @param java.lang.String
	 */
	public void setName(String name) {
	    this.name = name;
	}
	/**
     * public getter
     *
     * 
     *   Unique identifier for an eBay Store custom page. If you specify a valid 
     *   <b>PageID</b> value in a 
     *   <b>SetStoreCustomPage</b> call, the existing custom page
     *   is updated. If you do not specify a <b>PageID</b> value, you are
     * creating a new custom page.
     * <br/><br/>
     * The <b>PageID</b> field is always returned in 
     * <b>GetStoreCustomPage</b>.
     *   
     *
     * @returns java.lang.Long
	 */
	public Long getPageID() {
	    return this.pageID;
	}
	
	/**
	 * public setter
	 *
     * 
     *   Unique identifier for an eBay Store custom page. If you specify a valid 
     *   <b>PageID</b> value in a 
     *   <b>SetStoreCustomPage</b> call, the existing custom page
     *   is updated. If you do not specify a <b>PageID</b> value, you are
     * creating a new custom page.
     * <br/><br/>
     * The <b>PageID</b> field is always returned in 
     * <b>GetStoreCustomPage</b>.
     *   
     *
     * @param java.lang.Long
	 */
	public void setPageID(Long pageID) {
	    this.pageID = pageID;
	}
	/**
     * public getter
     *
     * 
     *   The URL path of the eBay Store custom page. This field is only required if you are
     * using Chinese characters in the <b>Name</b> field. The URL path of the
     * eBay Store custom page is normally derived from the <b>Name</b> field, but
     * the URL path cannot be derived from the name of the custom page if it contains Chinese
     * characters because URLs cannot contain Chinese characters. 
     * <br/><br/>
     * The <b>URLPath</b> is only returned in the <b>GetStoreCustomPage</b> 
     * response if it is defined for the eBay Store custom page, and if a <b>PageID</b> 
     * value is included in the request.
     *   
     *
     * @returns java.lang.String
	 */
	public String getUrlPath() {
	    return this.urlPath;
	}
	
	/**
	 * public setter
	 *
     * 
     *   The URL path of the eBay Store custom page. This field is only required if you are
     * using Chinese characters in the <b>Name</b> field. The URL path of the
     * eBay Store custom page is normally derived from the <b>Name</b> field, but
     * the URL path cannot be derived from the name of the custom page if it contains Chinese
     * characters because URLs cannot contain Chinese characters. 
     * <br/><br/>
     * The <b>URLPath</b> is only returned in the <b>GetStoreCustomPage</b> 
     * response if it is defined for the eBay Store custom page, and if a <b>PageID</b> 
     * value is included in the request.
     *   
     *
     * @param java.lang.String
	 */
	public void setUrlPath(String urlPath) {
	    this.urlPath = urlPath;
	}
	/**
     * public getter
     *
     * 
     *   The full URL of the eBay Store custom page, which is generally derived from the 
     *   <b>CustomPage.Name</b> value. The exception to this rule is if the seller 
     *   specified a custom URL using the <b>CustomPage.URLPath</b> field in a 
     *   <b>SetStoreCustomPage</b> call.
     *   <br/><br/>
     *   The <b>URL</b> is only returned in the
     * <b>GetStoreCustomPage</b> response if a <b>PageID</b> value
     * is included in the request.
     *   
     *
     * @returns java.lang.String
	 */
	public String getUrl() {
	    return this.url;
	}
	
	/**
	 * public setter
	 *
     * 
     *   The full URL of the eBay Store custom page, which is generally derived from the 
     *   <b>CustomPage.Name</b> value. The exception to this rule is if the seller 
     *   specified a custom URL using the <b>CustomPage.URLPath</b> field in a 
     *   <b>SetStoreCustomPage</b> call.
     *   <br/><br/>
     *   The <b>URL</b> is only returned in the
     * <b>GetStoreCustomPage</b> response if a <b>PageID</b> value
     * is included in the request.
     *   
     *
     * @param java.lang.String
	 */
	public void setUrl(String url) {
	    this.url = url;
	}
	/**
     * public getter
     *
     * 
     *   This value indicates the status of the eBay custom page. In a 
     *   <b>SetStoreCustomPage</b> call, the seller uses the optional 
     *   <b>Status</b> field to make an inactive custom page active, to make an
     * active custom page inactive, or to delete an active or inactive custom page. To 
     * change the status (including delete) of a custom page, a <b>PageID</b> 
     * value must be included to identify the custom page to modify.
     * <br/><br/>
     * The <b>Status</b> value is always returned in the 
     * <b>GetStoreCustomPage</b> response.
     *   
     *
     * @returns ebay.apis.eblbasecomponents.StoreCustomPageStatusCodeType
	 */
	public StoreCustomPageStatusCodeType getStatus() {
	    return this.status;
	}
	
	/**
	 * public setter
	 *
     * 
     *   This value indicates the status of the eBay custom page. In a 
     *   <b>SetStoreCustomPage</b> call, the seller uses the optional 
     *   <b>Status</b> field to make an inactive custom page active, to make an
     * active custom page inactive, or to delete an active or inactive custom page. To 
     * change the status (including delete) of a custom page, a <b>PageID</b> 
     * value must be included to identify the custom page to modify.
     * <br/><br/>
     * The <b>Status</b> value is always returned in the 
     * <b>GetStoreCustomPage</b> response.
     *   
     *
     * @param ebay.apis.eblbasecomponents.StoreCustomPageStatusCodeType
	 */
	public void setStatus(StoreCustomPageStatusCodeType status) {
	    this.status = status;
	}
	/**
     * public getter
     *
     * 
     *   The HTML content of the eBay Store custom page. This field has a maximum size of 96
     * kilobytes. If the <b>PreviewEnabled</b> field is set to 'true', then
     * this field is required in a <b>SetStoreCustomPage</b> call. Otherwise, 
     * it is optional. 
     * <br/><br/>
     * The <b>Content</b> field is only returned in the
     * <b>GetStoreCustomPage</b> response if a <b>PageID</b> value
     * is included in the request.
     *   
     *
     * @returns java.lang.String
	 */
	public String getContent() {
	    return this.content;
	}
	
	/**
	 * public setter
	 *
     * 
     *   The HTML content of the eBay Store custom page. This field has a maximum size of 96
     * kilobytes. If the <b>PreviewEnabled</b> field is set to 'true', then
     * this field is required in a <b>SetStoreCustomPage</b> call. Otherwise, 
     * it is optional. 
     * <br/><br/>
     * The <b>Content</b> field is only returned in the
     * <b>GetStoreCustomPage</b> response if a <b>PageID</b> value
     * is included in the request.
     *   
     *
     * @param java.lang.String
	 */
	public void setContent(String content) {
	    this.content = content;
	}
	/**
     * public getter
     *
     * 
     *   This flag controls whether or not the left navigation bar is included in the eBay 
     *   Store custom page. To include the left navigation bar in a custom page, the seller 
     *   will include the <b>LeftNav</b> field in the <b>SetStoreCustomPage</b> 
     *   request and set it to 'true'.
     *   <br/><br/>
     * The <b>LeftNav</b> field is only returned in the
     * <b>GetStoreCustomPage</b> response if a <b>PageID</b> value
     * is included in the request.
     *   
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getLeftNav() {
	    return this.leftNav;
	}
	
	/**
	 * public setter
	 *
     * 
     *   This flag controls whether or not the left navigation bar is included in the eBay 
     *   Store custom page. To include the left navigation bar in a custom page, the seller 
     *   will include the <b>LeftNav</b> field in the <b>SetStoreCustomPage</b> 
     *   request and set it to 'true'.
     *   <br/><br/>
     * The <b>LeftNav</b> field is only returned in the
     * <b>GetStoreCustomPage</b> response if a <b>PageID</b> value
     * is included in the request.
     *   
     *
     * @param java.lang.Boolean
	 */
	public void setLeftNav(Boolean leftNav) {
	    this.leftNav = leftNav;
	}
	/**
     * public getter
     *
     * 
     *   This flag controls whether or not a custom page preview is enabled. To enable the
     * a custom page preview, the seller will include the
     * <b>PreviewEnabled</b> field in the <b>SetStoreCustomPage</b>
     * request and set it to 'true'.
     * <br/><br/>
     * The <b>PreviewEnabled</b> field is only returned in the
     * <b>GetStoreCustomPage</b> response if a <b>PageID</b> value
     * is included in the request.
     *   
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getPreviewEnabled() {
	    return this.previewEnabled;
	}
	
	/**
	 * public setter
	 *
     * 
     *   This flag controls whether or not a custom page preview is enabled. To enable the
     * a custom page preview, the seller will include the
     * <b>PreviewEnabled</b> field in the <b>SetStoreCustomPage</b>
     * request and set it to 'true'.
     * <br/><br/>
     * The <b>PreviewEnabled</b> field is only returned in the
     * <b>GetStoreCustomPage</b> response if a <b>PageID</b> value
     * is included in the request.
     *   
     *
     * @param java.lang.Boolean
	 */
	public void setPreviewEnabled(Boolean previewEnabled) {
	    this.previewEnabled = previewEnabled;
	}
	/**
     * public getter
     *
     * 
     *   This integer value controls the order in which the corresponding eBay Store custom 
     *   page is displayed in the list of custom pages. To make the corresponding custom 
     *   page appear first in the list of custom pages, the seller would include the 
     *   <b>Order</b> field and set its value to '1'.
     *   <br/><br/>
     * The <b>Order</b> value is always returned in the 
     * <b>GetStoreCustomPage</b> response.
     *   
     *
     * @returns java.lang.Integer
	 */
	public Integer getOrder() {
	    return this.order;
	}
	
	/**
	 * public setter
	 *
     * 
     *   This integer value controls the order in which the corresponding eBay Store custom 
     *   page is displayed in the list of custom pages. To make the corresponding custom 
     *   page appear first in the list of custom pages, the seller would include the 
     *   <b>Order</b> field and set its value to '1'.
     *   <br/><br/>
     * The <b>Order</b> value is always returned in the 
     * <b>GetStoreCustomPage</b> response.
     *   
     *
     * @param java.lang.Integer
	 */
	public void setOrder(Integer order) {
	    this.order = order;
	}

}