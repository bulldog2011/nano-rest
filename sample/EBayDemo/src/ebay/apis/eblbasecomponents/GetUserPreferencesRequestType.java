// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * Retrieves the specified user preferences for the authenticated caller.
 * 
 */
@RootElement(name = "GetUserPreferencesRequest", namespace = "urn:ebay:apis:eBLBaseComponents")
public class GetUserPreferencesRequestType extends AbstractRequestType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "ShowBidderNoticePreferences")
	private boolean showBidderNoticePreferences;
	
	@Element(name = "ShowCombinedPaymentPreferences")
	private boolean showCombinedPaymentPreferences;
	
	@Element(name = "ShowCrossPromotionPreferences")
	private boolean showCrossPromotionPreferences;
	
	@Element(name = "ShowSellerPaymentPreferences")
	private boolean showSellerPaymentPreferences;
	
	@Element(name = "ShowEndOfAuctionEmailPreferences")
	private Boolean showEndOfAuctionEmailPreferences;
	
	@Element(name = "ShowSellerFavoriteItemPreferences")
	private Boolean showSellerFavoriteItemPreferences;
	
	@Element(name = "ShowProStoresPreferences")
	private Boolean showProStoresPreferences;
	
	@Element(name = "ShowEmailShipmentTrackingNumberPreference")
	private Boolean showEmailShipmentTrackingNumberPreference;
	
	@Element(name = "ShowRequiredShipPhoneNumberPreference")
	private Boolean showRequiredShipPhoneNumberPreference;
	
	@Element(name = "ShowSellerExcludeShipToLocationPreference")
	private Boolean showSellerExcludeShipToLocationPreference;
	
	@Element(name = "ShowUnpaidItemAssistancePreference")
	private Boolean showUnpaidItemAssistancePreference;
	
	@Element(name = "ShowPurchaseReminderEmailPreferences")
	private Boolean showPurchaseReminderEmailPreferences;
	
	@Element(name = "ShowUnpaidItemAssistanceExclusionList")
	private Boolean showUnpaidItemAssistanceExclusionList;
	
	@Element(name = "ShowSellerProfilePreferences")
	private boolean showSellerProfilePreferences;
	
	@Element(name = "ShowSellerReturnPreferences")
	private Boolean showSellerReturnPreferences;
	
	@Element(name = "ShowGlobalShippingProgramPreference")
	private Boolean showGlobalShippingProgramPreference;
	
    
	/**
     * public getter
     *
     * 
     * If included and set to true, the seller's preference for receiving contact
     * information for unsuccessful bidders is returned in the response.
     * 
     *
     * @returns .boolean
	 */
	public boolean getShowBidderNoticePreferences() {
	    return this.showBidderNoticePreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * If included and set to true, the seller's preference for receiving contact
     * information for unsuccessful bidders is returned in the response.
     * 
     *
     * @param .boolean
	 */
	public void setShowBidderNoticePreferences(boolean showBidderNoticePreferences) {
	    this.showBidderNoticePreferences = showBidderNoticePreferences;
	}
	/**
     * public getter
     *
     * 
     * If included and set to true, the seller's combined payment preferences are
     * returned in the response.
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * The CombinedPaymentPreferences.CombinedPaymentOption field is the only
     * preference that should be managed with the GetUserPreferences and
     * SetUserPreferences calls. All other Combined Payment preferences should be
     * managed with the SetDiscountProfiles and GetDiscountProfiles calls.
     * </span>
     * 
     *
     * @returns .boolean
	 */
	public boolean getShowCombinedPaymentPreferences() {
	    return this.showCombinedPaymentPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * If included and set to true, the seller's combined payment preferences are
     * returned in the response.
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * The CombinedPaymentPreferences.CombinedPaymentOption field is the only
     * preference that should be managed with the GetUserPreferences and
     * SetUserPreferences calls. All other Combined Payment preferences should be
     * managed with the SetDiscountProfiles and GetDiscountProfiles calls.
     * </span>
     * 
     *
     * @param .boolean
	 */
	public void setShowCombinedPaymentPreferences(boolean showCombinedPaymentPreferences) {
	    this.showCombinedPaymentPreferences = showCombinedPaymentPreferences;
	}
	/**
     * public getter
     *
     * 
     * This container should no longer be used as eBay Store Cross Promotions are no
     * longer supported in the Trading API. This container will be removed from the
     * Trading WSDL and API Call Reference docs in a future release.
     * <br><br>
     * If included and set to true, the seller's cross-promotion preferences are
     * returned in the response. These preferences are only applicable for eBay
     * Store owners.
     * 
     *
     * @returns .boolean
	 */
	public boolean getShowCrossPromotionPreferences() {
	    return this.showCrossPromotionPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * This container should no longer be used as eBay Store Cross Promotions are no
     * longer supported in the Trading API. This container will be removed from the
     * Trading WSDL and API Call Reference docs in a future release.
     * <br><br>
     * If included and set to true, the seller's cross-promotion preferences are
     * returned in the response. These preferences are only applicable for eBay
     * Store owners.
     * 
     *
     * @param .boolean
	 */
	public void setShowCrossPromotionPreferences(boolean showCrossPromotionPreferences) {
	    this.showCrossPromotionPreferences = showCrossPromotionPreferences;
	}
	/**
     * public getter
     *
     * 
     * If included and set to true, the seller's payment preferences are returned
     * in the response.
     * 
     *
     * @returns .boolean
	 */
	public boolean getShowSellerPaymentPreferences() {
	    return this.showSellerPaymentPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * If included and set to true, the seller's payment preferences are returned
     * in the response.
     * 
     *
     * @param .boolean
	 */
	public void setShowSellerPaymentPreferences(boolean showSellerPaymentPreferences) {
	    this.showSellerPaymentPreferences = showSellerPaymentPreferences;
	}
	/**
     * public getter
     *
     * 
     * If included and set to true, the seller's preferences for the end-of-auction
     * email sent to the winning bidder is returned in the response. These
     * preferences are only applicable for auction listings.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getShowEndOfAuctionEmailPreferences() {
	    return this.showEndOfAuctionEmailPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * If included and set to true, the seller's preferences for the end-of-auction
     * email sent to the winning bidder is returned in the response. These
     * preferences are only applicable for auction listings.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setShowEndOfAuctionEmailPreferences(Boolean showEndOfAuctionEmailPreferences) {
	    this.showEndOfAuctionEmailPreferences = showEndOfAuctionEmailPreferences;
	}
	/**
     * public getter
     *
     * 
     * If included and set to true, the seller's favorite item preferences are
     * returned in the response.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getShowSellerFavoriteItemPreferences() {
	    return this.showSellerFavoriteItemPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * If included and set to true, the seller's favorite item preferences are
     * returned in the response.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setShowSellerFavoriteItemPreferences(Boolean showSellerFavoriteItemPreferences) {
	    this.showSellerFavoriteItemPreferences = showSellerFavoriteItemPreferences;
	}
	/**
     * public getter
     *
     * 
     * If included and set to true, the seller's ProStores preferences are
     * returned in the response.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getShowProStoresPreferences() {
	    return this.showProStoresPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * If included and set to true, the seller's ProStores preferences are
     * returned in the response.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setShowProStoresPreferences(Boolean showProStoresPreferences) {
	    this.showProStoresPreferences = showProStoresPreferences;
	}
	/**
     * public getter
     *
     * 
     * If included and set to true, the seller's preference for sending an email to
     * the buyer with the shipping tracking number is returned in the response.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getShowEmailShipmentTrackingNumberPreference() {
	    return this.showEmailShipmentTrackingNumberPreference;
	}
	
	/**
	 * public setter
	 *
     * 
     * If included and set to true, the seller's preference for sending an email to
     * the buyer with the shipping tracking number is returned in the response.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setShowEmailShipmentTrackingNumberPreference(Boolean showEmailShipmentTrackingNumberPreference) {
	    this.showEmailShipmentTrackingNumberPreference = showEmailShipmentTrackingNumberPreference;
	}
	/**
     * public getter
     *
     * 
     * If included and set to true, the seller's preference for requiring that the
     * buyer supply a shipping phone number upon checkout is returned in the
     * response. Some shipping carriers require the receiver's phone number.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getShowRequiredShipPhoneNumberPreference() {
	    return this.showRequiredShipPhoneNumberPreference;
	}
	
	/**
	 * public setter
	 *
     * 
     * If included and set to true, the seller's preference for requiring that the
     * buyer supply a shipping phone number upon checkout is returned in the
     * response. Some shipping carriers require the receiver's phone number.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setShowRequiredShipPhoneNumberPreference(Boolean showRequiredShipPhoneNumberPreference) {
	    this.showRequiredShipPhoneNumberPreference = showRequiredShipPhoneNumberPreference;
	}
	/**
     * public getter
     *
     * 
     * If included and set to true, all of the seller's excluded shipping locations
     * are returned in the response. The returned list mirrors the seller's current
     * Exclude shipping locations list in My eBay's Shipping Preferences. An
     * excluded shipping location in My eBay can be an entire geographical region
     * (such as Middle East) or only an individual country (such as Iraq). Sellers
     * can override these default settings for an individual listing by using the
     * Item.ShippingDetails.ExcludeShipToLocation field in the AddItem family of
     * calls.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getShowSellerExcludeShipToLocationPreference() {
	    return this.showSellerExcludeShipToLocationPreference;
	}
	
	/**
	 * public setter
	 *
     * 
     * If included and set to true, all of the seller's excluded shipping locations
     * are returned in the response. The returned list mirrors the seller's current
     * Exclude shipping locations list in My eBay's Shipping Preferences. An
     * excluded shipping location in My eBay can be an entire geographical region
     * (such as Middle East) or only an individual country (such as Iraq). Sellers
     * can override these default settings for an individual listing by using the
     * Item.ShippingDetails.ExcludeShipToLocation field in the AddItem family of
     * calls.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setShowSellerExcludeShipToLocationPreference(Boolean showSellerExcludeShipToLocationPreference) {
	    this.showSellerExcludeShipToLocationPreference = showSellerExcludeShipToLocationPreference;
	}
	/**
     * public getter
     *
     * 
     * If included and set to true, the seller's Unpaid Item Assistant preferences
     * are returned in the response. The Unpaid Item Assistant automatically opens
     * an Unpaid Item dispute on the behalf of the seller.
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * To return the list of buyers excluded from the Unpaid Item Assistant
     * mechanism, the ShowUnpaidItemAssistanceExclusionList field must also be
     * included and set to true in the request. Excluded buyers can be viewed in
     * the UnpaidItemAssistancePreferences.ExcludedUser field.
     * </span>
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getShowUnpaidItemAssistancePreference() {
	    return this.showUnpaidItemAssistancePreference;
	}
	
	/**
	 * public setter
	 *
     * 
     * If included and set to true, the seller's Unpaid Item Assistant preferences
     * are returned in the response. The Unpaid Item Assistant automatically opens
     * an Unpaid Item dispute on the behalf of the seller.
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * To return the list of buyers excluded from the Unpaid Item Assistant
     * mechanism, the ShowUnpaidItemAssistanceExclusionList field must also be
     * included and set to true in the request. Excluded buyers can be viewed in
     * the UnpaidItemAssistancePreferences.ExcludedUser field.
     * </span>
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setShowUnpaidItemAssistancePreference(Boolean showUnpaidItemAssistancePreference) {
	    this.showUnpaidItemAssistancePreference = showUnpaidItemAssistancePreference;
	}
	/**
     * public getter
     *
     * 
     * If included and set to true, the seller's preference for sending a purchase
     * reminder email to buyers is returned in the response.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getShowPurchaseReminderEmailPreferences() {
	    return this.showPurchaseReminderEmailPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * If included and set to true, the seller's preference for sending a purchase
     * reminder email to buyers is returned in the response.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setShowPurchaseReminderEmailPreferences(Boolean showPurchaseReminderEmailPreferences) {
	    this.showPurchaseReminderEmailPreferences = showPurchaseReminderEmailPreferences;
	}
	/**
     * public getter
     *
     * 
     * If included and set to true, the list of eBay user IDs on the Unpaid Item
     * Assistant Excluded User list is returned through the
     * UnpaidItemAssistancePreferences.ExcludedUser field in the response. For
     * excluded users, an Unpaid Item dispute is not automatically filed through
     * the UPI Assistance mechanism. The Excluded User list is managed through the
     * SetUserPreferences call.
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * To return the list of buyers excluded from the Unpaid Item Assistant
     * mechanism, the ShowUnpaidItemAssistancePreference field must also be
     * included and set to true in the request.
     * </span>
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getShowUnpaidItemAssistanceExclusionList() {
	    return this.showUnpaidItemAssistanceExclusionList;
	}
	
	/**
	 * public setter
	 *
     * 
     * If included and set to true, the list of eBay user IDs on the Unpaid Item
     * Assistant Excluded User list is returned through the
     * UnpaidItemAssistancePreferences.ExcludedUser field in the response. For
     * excluded users, an Unpaid Item dispute is not automatically filed through
     * the UPI Assistance mechanism. The Excluded User list is managed through the
     * SetUserPreferences call.
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * To return the list of buyers excluded from the Unpaid Item Assistant
     * mechanism, the ShowUnpaidItemAssistancePreference field must also be
     * included and set to true in the request.
     * </span>
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setShowUnpaidItemAssistanceExclusionList(Boolean showUnpaidItemAssistanceExclusionList) {
	    this.showUnpaidItemAssistanceExclusionList = showUnpaidItemAssistanceExclusionList;
	}
	/**
     * public getter
     *
     * 
     * If this flag is included and set to true, the seller's Business Policies profile information is
     * returned in the response. This information includes a flag that indicates whether or
     * not the seller has opted into Business Policies, as well as Business Policies profiles
     * (payment, shipping, and return policy) active on the seller's account.
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * Business Policies are not yet available for use on the eBay platform.
     * </span>
     * 
     *
     * @returns .boolean
	 */
	public boolean getShowSellerProfilePreferences() {
	    return this.showSellerProfilePreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * If this flag is included and set to true, the seller's Business Policies profile information is
     * returned in the response. This information includes a flag that indicates whether or
     * not the seller has opted into Business Policies, as well as Business Policies profiles
     * (payment, shipping, and return policy) active on the seller's account.
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * Business Policies are not yet available for use on the eBay platform.
     * </span>
     * 
     *
     * @param .boolean
	 */
	public void setShowSellerProfilePreferences(boolean showSellerProfilePreferences) {
	    this.showSellerProfilePreferences = showSellerProfilePreferences;
	}
	/**
     * public getter
     *
     * 
     * If this flag is included and set to true, the seller's eBay Return Center
     * preference information will be returned.
     * <br><br>
     * eBay managed returns are currently only available on the US site. The eBay
     * Return Center pilot launched on July 10, 2012. The eBay Return Center full
     * launch is scheduled for early August 2012.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getShowSellerReturnPreferences() {
	    return this.showSellerReturnPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * If this flag is included and set to true, the seller's eBay Return Center
     * preference information will be returned.
     * <br><br>
     * eBay managed returns are currently only available on the US site. The eBay
     * Return Center pilot launched on July 10, 2012. The eBay Return Center full
     * launch is scheduled for early August 2012.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setShowSellerReturnPreferences(Boolean showSellerReturnPreferences) {
	    this.showSellerReturnPreferences = showSellerReturnPreferences;
	}
	/**
     * public getter
     *
     * 
     * If this flag is included and set to true, the seller's preference for offering the Global Shipping Program to international buyers will be returned in <strong>OfferGlobalShippingProgramPreference</strong>.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getShowGlobalShippingProgramPreference() {
	    return this.showGlobalShippingProgramPreference;
	}
	
	/**
	 * public setter
	 *
     * 
     * If this flag is included and set to true, the seller's preference for offering the Global Shipping Program to international buyers will be returned in <strong>OfferGlobalShippingProgramPreference</strong>.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setShowGlobalShippingProgramPreference(Boolean showGlobalShippingProgramPreference) {
	    this.showGlobalShippingProgramPreference = showGlobalShippingProgramPreference;
	}

}