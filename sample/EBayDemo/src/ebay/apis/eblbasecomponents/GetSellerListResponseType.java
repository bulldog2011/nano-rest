// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * Contains a list of the items listed by the seller specified as input. The list of
 * items is returned in an ItemArrayType object, in which are returned zero, one, or
 * multiple ItemType objects. Each ItemType object contains the detail data for one
 * item listing.
 * 
 */
@RootElement(name = "GetSellerListResponse", namespace = "urn:ebay:apis:eBLBaseComponents")
public class GetSellerListResponseType extends AbstractResponseType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "PaginationResult")
	private PaginationResultType paginationResult;
	
	@Element(name = "HasMoreItems")
	private Boolean hasMoreItems;
	
	@Element(name = "ItemArray")
	private ItemArrayType itemArray;
	
	@Element(name = "ItemsPerPage")
	private Integer itemsPerPage;
	
	@Element(name = "PageNumber")
	private Integer pageNumber;
	
	@Element(name = "ReturnedItemCountActual")
	private Integer returnedItemCountActual;
	
	@Element(name = "Seller")
	private UserType seller;
	
    
	/**
     * public getter
     *
     * 
     * Contains information regarding the pagination of data (if pagination is
     * used), including total number of pages and total number of entries.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.PaginationResultType
	 */
	public PaginationResultType getPaginationResult() {
	    return this.paginationResult;
	}
	
	/**
	 * public setter
	 *
     * 
     * Contains information regarding the pagination of data (if pagination is
     * used), including total number of pages and total number of entries.
     * 
     *
     * @param ebay.apis.eblbasecomponents.PaginationResultType
	 */
	public void setPaginationResult(PaginationResultType paginationResult) {
	    this.paginationResult = paginationResult;
	}
	/**
     * public getter
     *
     * 
     * If true, there are more items yet to be retrieved. Additional
     * GetSellerList calls with higher page numbers or more items per page must
     * be made to retrieve these items. Not returned if no items match the
     * request.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getHasMoreItems() {
	    return this.hasMoreItems;
	}
	
	/**
	 * public setter
	 *
     * 
     * If true, there are more items yet to be retrieved. Additional
     * GetSellerList calls with higher page numbers or more items per page must
     * be made to retrieve these items. Not returned if no items match the
     * request.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setHasMoreItems(Boolean hasMoreItems) {
	    this.hasMoreItems = hasMoreItems;
	}
	/**
     * public getter
     *
     * 
     * Contains the list of the seller's items, one ItemType object per item.
     * Returns empty if no items are available that match the request.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ItemArrayType
	 */
	public ItemArrayType getItemArray() {
	    return this.itemArray;
	}
	
	/**
	 * public setter
	 *
     * 
     * Contains the list of the seller's items, one ItemType object per item.
     * Returns empty if no items are available that match the request.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ItemArrayType
	 */
	public void setItemArray(ItemArrayType itemArray) {
	    this.itemArray = itemArray;
	}
	/**
     * public getter
     *
     * 
     * Indicates the number of items that are being returned per page of data
     * (i.e., per call). Will be the same as the value specified in the
     * Pagination.EntriesPerPage input. Only returned if items are returned.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getItemsPerPage() {
	    return this.itemsPerPage;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates the number of items that are being returned per page of data
     * (i.e., per call). Will be the same as the value specified in the
     * Pagination.EntriesPerPage input. Only returned if items are returned.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setItemsPerPage(Integer itemsPerPage) {
	    this.itemsPerPage = itemsPerPage;
	}
	/**
     * public getter
     *
     * 
     * Indicates which page of data was just returned. Will be the same as the
     * value specified in the Pagination.PageNumber input. (If the input is
     * higher than the total number of pages, the call fails with an error.)
     * Only returned if items are returned.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getPageNumber() {
	    return this.pageNumber;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates which page of data was just returned. Will be the same as the
     * value specified in the Pagination.PageNumber input. (If the input is
     * higher than the total number of pages, the call fails with an error.)
     * Only returned if items are returned.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setPageNumber(Integer pageNumber) {
	    this.pageNumber = pageNumber;
	}
	/**
     * public getter
     *
     * 
     * Indicates the total number of items returned (i.e., the number of
     * ItemType objects in ItemArray).
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getReturnedItemCountActual() {
	    return this.returnedItemCountActual;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates the total number of items returned (i.e., the number of
     * ItemType objects in ItemArray).
     * 
     *
     * @param java.lang.Integer
	 */
	public void setReturnedItemCountActual(Integer returnedItemCountActual) {
	    this.returnedItemCountActual = returnedItemCountActual;
	}
	/**
     * public getter
     *
     * 
     * Indicates the seller whose items are returned. The seller is the eBay
     * member whose UserID was passed in the request. If UserID was not
     * specified, the seller is the user who made the request (identified by
     * eBayAuthToken).
     * 
     *
     * @returns ebay.apis.eblbasecomponents.UserType
	 */
	public UserType getSeller() {
	    return this.seller;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates the seller whose items are returned. The seller is the eBay
     * member whose UserID was passed in the request. If UserID was not
     * specified, the seller is the user who made the request (identified by
     * eBayAuthToken).
     * 
     *
     * @param ebay.apis.eblbasecomponents.UserType
	 */
	public void setSeller(UserType seller) {
	    this.seller = seller;
	}

}