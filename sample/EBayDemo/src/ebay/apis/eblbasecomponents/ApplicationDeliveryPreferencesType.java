// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * 
 * Specifies preferences about how notifications are delivered to an application.
 * 
 */
public class ApplicationDeliveryPreferencesType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "ApplicationURL")
	private String applicationURL;
	
	@Element(name = "ApplicationEnable")
	private EnableCodeType applicationEnable;
	
	@Element(name = "AlertEmail")
	private String alertEmail;
	
	@Element(name = "AlertEnable")
	private EnableCodeType alertEnable;
	
	@Element(name = "NotificationPayloadType")
	private NotificationPayloadTypeCodeType notificationPayloadType;
	
	@Element(name = "DeviceType")
	private DeviceTypeCodeType deviceType;
	
	@Element(name = "PayloadVersion")
	private String payloadVersion;
	
	@Element(name = "DeliveryURLDetails")
	private List<DeliveryURLDetailType> deliveryURLDetails;
	
    
	/**
     * public getter
     *
     * 
     * The URL to which eBay delivers all notifications sent to the application. For
     * delivery to a server, the URL begins with http:// or https:// and must be well
     * formed. Use a URL that is functional at the time of the call. For delivery to
     * an email address, the URL begins with mailto:// and specifies a valid email
     * address.
     * 
     *
     * @returns java.lang.String
	 */
	public String getApplicationURL() {
	    return this.applicationURL;
	}
	
	/**
	 * public setter
	 *
     * 
     * The URL to which eBay delivers all notifications sent to the application. For
     * delivery to a server, the URL begins with http:// or https:// and must be well
     * formed. Use a URL that is functional at the time of the call. For delivery to
     * an email address, the URL begins with mailto:// and specifies a valid email
     * address.
     * 
     *
     * @param java.lang.String
	 */
	public void setApplicationURL(String applicationURL) {
	    this.applicationURL = applicationURL;
	}
	/**
     * public getter
     *
     * 
     * Enables or disables notifications and alerts. If you disable notifications, the
     * application will not receive them, but its notification preferences are
     * preserved.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.EnableCodeType
	 */
	public EnableCodeType getApplicationEnable() {
	    return this.applicationEnable;
	}
	
	/**
	 * public setter
	 *
     * 
     * Enables or disables notifications and alerts. If you disable notifications, the
     * application will not receive them, but its notification preferences are
     * preserved.
     * 
     *
     * @param ebay.apis.eblbasecomponents.EnableCodeType
	 */
	public void setApplicationEnable(EnableCodeType applicationEnable) {
	    this.applicationEnable = applicationEnable;
	}
	/**
     * public getter
     *
     * 
     * The email address to which eBay sends all application markup and markdown event
     * notifications. When setting the email address, input must be in the format
     * mailto://youremailaddress@yoursite.com. Enable these alerts using the
     * AlertEnable field.
     * 
     *
     * @returns java.lang.String
	 */
	public String getAlertEmail() {
	    return this.alertEmail;
	}
	
	/**
	 * public setter
	 *
     * 
     * The email address to which eBay sends all application markup and markdown event
     * notifications. When setting the email address, input must be in the format
     * mailto://youremailaddress@yoursite.com. Enable these alerts using the
     * AlertEnable field.
     * 
     *
     * @param java.lang.String
	 */
	public void setAlertEmail(String alertEmail) {
	    this.alertEmail = alertEmail;
	}
	/**
     * public getter
     *
     * 
     * <b>For SetNotificationPreferences</b>: include and set <b>AlertEnable</b> to 
     * 'Enable' to receive application markup and markdown alerts, or set to 'Disable' to 
     * disable the alerts. If not included, the <b>AlertEnable</b> defaults to 
     * its current value.
     * <br/><br/>
     * <b>For GetNotificationPreferences</b>: this field's value indicates 
     * whether application markup and markdown alerts are enabled or disabled.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.EnableCodeType
	 */
	public EnableCodeType getAlertEnable() {
	    return this.alertEnable;
	}
	
	/**
	 * public setter
	 *
     * 
     * <b>For SetNotificationPreferences</b>: include and set <b>AlertEnable</b> to 
     * 'Enable' to receive application markup and markdown alerts, or set to 'Disable' to 
     * disable the alerts. If not included, the <b>AlertEnable</b> defaults to 
     * its current value.
     * <br/><br/>
     * <b>For GetNotificationPreferences</b>: this field's value indicates 
     * whether application markup and markdown alerts are enabled or disabled.
     * 
     *
     * @param ebay.apis.eblbasecomponents.EnableCodeType
	 */
	public void setAlertEnable(EnableCodeType alertEnable) {
	    this.alertEnable = alertEnable;
	}
	/**
     * public getter
     *
     * 
     * If this field is specified, the value must be eBLSchemaSOAP.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.NotificationPayloadTypeCodeType
	 */
	public NotificationPayloadTypeCodeType getNotificationPayloadType() {
	    return this.notificationPayloadType;
	}
	
	/**
	 * public setter
	 *
     * 
     * If this field is specified, the value must be eBLSchemaSOAP.
     * 
     *
     * @param ebay.apis.eblbasecomponents.NotificationPayloadTypeCodeType
	 */
	public void setNotificationPayloadType(NotificationPayloadTypeCodeType notificationPayloadType) {
	    this.notificationPayloadType = notificationPayloadType;
	}
	/**
     * public getter
     *
     * 
     * The means of receipt of notification. In most cases, it is Platform (typical API
     * calls and web interaction), so this is the default, if not specified. For
     * wireless applications, use SMS. Do not test Client Alerts in production if you
     * are currently using Platform Notifications.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.DeviceTypeCodeType
	 */
	public DeviceTypeCodeType getDeviceType() {
	    return this.deviceType;
	}
	
	/**
	 * public setter
	 *
     * 
     * The means of receipt of notification. In most cases, it is Platform (typical API
     * calls and web interaction), so this is the default, if not specified. For
     * wireless applications, use SMS. Do not test Client Alerts in production if you
     * are currently using Platform Notifications.
     * 
     *
     * @param ebay.apis.eblbasecomponents.DeviceTypeCodeType
	 */
	public void setDeviceType(DeviceTypeCodeType deviceType) {
	    this.deviceType = deviceType;
	}
	/**
     * public getter
     *
     * 
     * Use this field to specify the API version for all notifications for the calling
     * application. If you do not specify PayloadVersion in
     * SetNotificationPreferences, the API version for notifications will be based on
     * the API version specified in your SetNotificationPreferences call.
     * 
     *
     * @returns java.lang.String
	 */
	public String getPayloadVersion() {
	    return this.payloadVersion;
	}
	
	/**
	 * public setter
	 *
     * 
     * Use this field to specify the API version for all notifications for the calling
     * application. If you do not specify PayloadVersion in
     * SetNotificationPreferences, the API version for notifications will be based on
     * the API version specified in your SetNotificationPreferences call.
     * 
     *
     * @param java.lang.String
	 */
	public void setPayloadVersion(String payloadVersion) {
	    this.payloadVersion = payloadVersion;
	}
	/**
     * public getter
     *
     * 
     * Defines settings for notification URLs (including the URL name in DeliveryURLName). You
     * define settings for up to 25 notification URLs (including the URL name in
     * DeliveryURLName) in separate DeliveryURLDetails containers. Associate a user token with
     * notification URLs by using the token in a SetNotificationPreferences request that
     * specifies the URL name or names in SetNotificationPreferencesRequest.DeliveryURLName. Use
     * comma-separated format to specify multiple URL names in
     * SetNotificationPreferencesRequest.DeliveryURLName. Notifications will be sent to these
     * URL(s) if ApplicationDeliveryPreferencesType.ApplicationEnable is set to Enable.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.DeliveryURLDetailType>
	 */
	public List<DeliveryURLDetailType> getDeliveryURLDetails() {
	    return this.deliveryURLDetails;
	}
	
	/**
	 * public setter
	 *
     * 
     * Defines settings for notification URLs (including the URL name in DeliveryURLName). You
     * define settings for up to 25 notification URLs (including the URL name in
     * DeliveryURLName) in separate DeliveryURLDetails containers. Associate a user token with
     * notification URLs by using the token in a SetNotificationPreferences request that
     * specifies the URL name or names in SetNotificationPreferencesRequest.DeliveryURLName. Use
     * comma-separated format to specify multiple URL names in
     * SetNotificationPreferencesRequest.DeliveryURLName. Notifications will be sent to these
     * URL(s) if ApplicationDeliveryPreferencesType.ApplicationEnable is set to Enable.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.DeliveryURLDetailType>
	 */
	public void setDeliveryURLDetails(List<DeliveryURLDetailType> deliveryURLDetails) {
	    this.deliveryURLDetails = deliveryURLDetails;
	}

}