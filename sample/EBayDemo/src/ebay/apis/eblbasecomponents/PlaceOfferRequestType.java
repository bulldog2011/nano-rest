// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * Enables the authenticated user to to make a bid, a best offer, or
 * a purchase on the item specified by the ItemID input field.
 * 
 */
@RootElement(name = "PlaceOfferRequest", namespace = "urn:ebay:apis:eBLBaseComponents")
public class PlaceOfferRequestType extends AbstractRequestType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "Offer")
	private OfferType offer;
	
	@Element(name = "ItemID")
	private String itemID;
	
	@Element(name = "BlockOnWarning")
	private Boolean blockOnWarning;
	
	@Element(name = "AffiliateTrackingDetails")
	private AffiliateTrackingDetailsType affiliateTrackingDetails;
	
	@Element(name = "VariationSpecifics")
	private NameValueListArrayType variationSpecifics;
	
    
	/**
     * public getter
     *
     * 
     * Specifies the type of offer being made. If the item is a
     * competitive-bidding listing, the offer is a bid. If the item is a
     * fixed-price listing, then the offer purchases the item. If the item is a
     * competitive-bidding listing and the offer is of type with an active,
     * unexercised Buy It Now option, then the offer can either purchase the
     * item or be a bid. See the schema documentation for OfferType for details
     * on its properties and their meanings.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.OfferType
	 */
	public OfferType getOffer() {
	    return this.offer;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the type of offer being made. If the item is a
     * competitive-bidding listing, the offer is a bid. If the item is a
     * fixed-price listing, then the offer purchases the item. If the item is a
     * competitive-bidding listing and the offer is of type with an active,
     * unexercised Buy It Now option, then the offer can either purchase the
     * item or be a bid. See the schema documentation for OfferType for details
     * on its properties and their meanings.
     * 
     *
     * @param ebay.apis.eblbasecomponents.OfferType
	 */
	public void setOffer(OfferType offer) {
	    this.offer = offer;
	}
	/**
     * public getter
     *
     * 
     * Unique item ID that identifies the item listing for which the action is being
     * submitted.
     * <br><br>
     * If the item was listed with Variations, you must also specify
     * VariationSpecifics in the request to uniquely identify the
     * variant being purchased.
     * 
     *
     * @returns java.lang.String
	 */
	public String getItemID() {
	    return this.itemID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Unique item ID that identifies the item listing for which the action is being
     * submitted.
     * <br><br>
     * If the item was listed with Variations, you must also specify
     * VariationSpecifics in the request to uniquely identify the
     * variant being purchased.
     * 
     *
     * @param java.lang.String
	 */
	public void setItemID(String itemID) {
	    this.itemID = itemID;
	}
	/**
     * public getter
     *
     * 
     * If a warning message exists and BlockOnWarning is true,
     * the warning message is returned and the bid is blocked. If no warning message
     * exists and BlockOnWarning is true, the bid is placed. If BlockOnWarning
     * is false, the bid is placed, regardless of warning.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getBlockOnWarning() {
	    return this.blockOnWarning;
	}
	
	/**
	 * public setter
	 *
     * 
     * If a warning message exists and BlockOnWarning is true,
     * the warning message is returned and the bid is blocked. If no warning message
     * exists and BlockOnWarning is true, the bid is placed. If BlockOnWarning
     * is false, the bid is placed, regardless of warning.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setBlockOnWarning(Boolean blockOnWarning) {
	    this.blockOnWarning = blockOnWarning;
	}
	/**
     * public getter
     *
     * 
     * Container for affiliate-related tags, which enable the tracking of user
     * activity. If you include AffiliateTrackingDetails in your PlaceOffer call, then
     * it is possible to receive affiliate commissions based on calls made by your
     * application. (See the <a href=
     * "http://www.ebaypartnernetwork.com/" target="_blank">eBay Partner Network</a>
     * for information about commissions.) Please note that affiliate tracking is not
     * available in the Sandbox environment, and that affiliate tracking is not
     * available when you make a best offer.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AffiliateTrackingDetailsType
	 */
	public AffiliateTrackingDetailsType getAffiliateTrackingDetails() {
	    return this.affiliateTrackingDetails;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container for affiliate-related tags, which enable the tracking of user
     * activity. If you include AffiliateTrackingDetails in your PlaceOffer call, then
     * it is possible to receive affiliate commissions based on calls made by your
     * application. (See the <a href=
     * "http://www.ebaypartnernetwork.com/" target="_blank">eBay Partner Network</a>
     * for information about commissions.) Please note that affiliate tracking is not
     * available in the Sandbox environment, and that affiliate tracking is not
     * available when you make a best offer.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AffiliateTrackingDetailsType
	 */
	public void setAffiliateTrackingDetails(AffiliateTrackingDetailsType affiliateTrackingDetails) {
	    this.affiliateTrackingDetails = affiliateTrackingDetails;
	}
	/**
     * public getter
     *
     * 
     * Name-value pairs that identify a single variation within the
     * listing identified by ItemID. Required when the seller
     * listed the item with Item Variations.<br>
     * <br>
     * If you want to buy items from multiple variations in the same
     * listing, use a separate PlaceOffer request for each variation.
     * For example, if you want to buy 3 red shirts and 2 black shirts
     * from the same listing, use one PlaceOffer request for the
     * 3 red shirts, and another PlaceOffer request for the 2
     * black shirts.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.NameValueListArrayType
	 */
	public NameValueListArrayType getVariationSpecifics() {
	    return this.variationSpecifics;
	}
	
	/**
	 * public setter
	 *
     * 
     * Name-value pairs that identify a single variation within the
     * listing identified by ItemID. Required when the seller
     * listed the item with Item Variations.<br>
     * <br>
     * If you want to buy items from multiple variations in the same
     * listing, use a separate PlaceOffer request for each variation.
     * For example, if you want to buy 3 red shirts and 2 black shirts
     * from the same listing, use one PlaceOffer request for the
     * 3 red shirts, and another PlaceOffer request for the 2
     * black shirts.
     * 
     *
     * @param ebay.apis.eblbasecomponents.NameValueListArrayType
	 */
	public void setVariationSpecifics(NameValueListArrayType variationSpecifics) {
	    this.variationSpecifics = variationSpecifics;
	}

}