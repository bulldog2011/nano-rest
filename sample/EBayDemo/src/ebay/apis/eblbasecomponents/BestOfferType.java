// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.Date;

/**
 * 
 * Details about a Best Offer.
 * 
 */
public class BestOfferType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "BestOfferID")
	private String bestOfferID;
	
	@Element(name = "ExpirationTime")
	private Date expirationTime;
	
	@Element(name = "Buyer")
	private UserType buyer;
	
	@Element(name = "Price")
	private AmountType price;
	
	@Element(name = "Status")
	private BestOfferStatusCodeType status;
	
	@Element(name = "Quantity")
	private Integer quantity;
	
	@Element(name = "BuyerMessage")
	private String buyerMessage;
	
	@Element(name = "SellerMessage")
	private String sellerMessage;
	
	@Element(name = "BestOfferCodeType")
	private BestOfferTypeCodeType bestOfferCodeType;
	
	@Element(name = "CallStatus")
	private String callStatus;
	
    
	/**
     * public getter
     *
     * 
     * An ID to distinguish this Best Offer from other Best Offers
     * made on the item.
     * 
     *
     * @returns java.lang.String
	 */
	public String getBestOfferID() {
	    return this.bestOfferID;
	}
	
	/**
	 * public setter
	 *
     * 
     * An ID to distinguish this Best Offer from other Best Offers
     * made on the item.
     * 
     *
     * @param java.lang.String
	 */
	public void setBestOfferID(String bestOfferID) {
	    this.bestOfferID = bestOfferID;
	}
	/**
     * public getter
     *
     * 
     * Date and time (in GMT) the offer naturally expires (if the
     * seller has not accepted or declined the offer).
     * 
     *
     * @returns java.util.Date
	 */
	public Date getExpirationTime() {
	    return this.expirationTime;
	}
	
	/**
	 * public setter
	 *
     * 
     * Date and time (in GMT) the offer naturally expires (if the
     * seller has not accepted or declined the offer).
     * 
     *
     * @param java.util.Date
	 */
	public void setExpirationTime(Date expirationTime) {
	    this.expirationTime = expirationTime;
	}
	/**
     * public getter
     *
     * 
     * Information about the buyer who made the Best Offer.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.UserType
	 */
	public UserType getBuyer() {
	    return this.buyer;
	}
	
	/**
	 * public setter
	 *
     * 
     * Information about the buyer who made the Best Offer.
     * 
     *
     * @param ebay.apis.eblbasecomponents.UserType
	 */
	public void setBuyer(UserType buyer) {
	    this.buyer = buyer;
	}
	/**
     * public getter
     *
     * 
     * The amount of the Best Offer.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getPrice() {
	    return this.price;
	}
	
	/**
	 * public setter
	 *
     * 
     * The amount of the Best Offer.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setPrice(AmountType price) {
	    this.price = price;
	}
	/**
     * public getter
     *
     * 
     * The state of the offer. In the case of 
     * a PlaceOffer response that specified a Best Offer,
     * Status may be "Accepted" if the Best Offer
     * was at or above an auto-accept price.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.BestOfferStatusCodeType
	 */
	public BestOfferStatusCodeType getStatus() {
	    return this.status;
	}
	
	/**
	 * public setter
	 *
     * 
     * The state of the offer. In the case of 
     * a PlaceOffer response that specified a Best Offer,
     * Status may be "Accepted" if the Best Offer
     * was at or above an auto-accept price.
     * 
     *
     * @param ebay.apis.eblbasecomponents.BestOfferStatusCodeType
	 */
	public void setStatus(BestOfferStatusCodeType status) {
	    this.status = status;
	}
	/**
     * public getter
     *
     * 
     * The number of items for which the buyer is making an offer.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getQuantity() {
	    return this.quantity;
	}
	
	/**
	 * public setter
	 *
     * 
     * The number of items for which the buyer is making an offer.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setQuantity(Integer quantity) {
	    this.quantity = quantity;
	}
	/**
     * public getter
     *
     * 
     * Text message that was provided by a buyer when placing a Best Offer.
     * 
     *
     * @returns java.lang.String
	 */
	public String getBuyerMessage() {
	    return this.buyerMessage;
	}
	
	/**
	 * public setter
	 *
     * 
     * Text message that was provided by a buyer when placing a Best Offer.
     * 
     *
     * @param java.lang.String
	 */
	public void setBuyerMessage(String buyerMessage) {
	    this.buyerMessage = buyerMessage;
	}
	/**
     * public getter
     *
     * 
     * Text response to buyer from seller.
     * 
     *
     * @returns java.lang.String
	 */
	public String getSellerMessage() {
	    return this.sellerMessage;
	}
	
	/**
	 * public setter
	 *
     * 
     * Text response to buyer from seller.
     * 
     *
     * @param java.lang.String
	 */
	public void setSellerMessage(String sellerMessage) {
	    this.sellerMessage = sellerMessage;
	}
	/**
     * public getter
     *
     * 
     * This value indicates whether the corresponding offer is an original Best Offer, or a counter offer to a Best 
     * Offer from the seller or buyer.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.BestOfferTypeCodeType
	 */
	public BestOfferTypeCodeType getBestOfferCodeType() {
	    return this.bestOfferCodeType;
	}
	
	/**
	 * public setter
	 *
     * 
     * This value indicates whether the corresponding offer is an original Best Offer, or a counter offer to a Best 
     * Offer from the seller or buyer.
     * 
     *
     * @param ebay.apis.eblbasecomponents.BestOfferTypeCodeType
	 */
	public void setBestOfferCodeType(BestOfferTypeCodeType bestOfferCodeType) {
	    this.bestOfferCodeType = bestOfferCodeType;
	}
	/**
     * public getter
     *
     * 
     * The status of the call, either Success or Failure.
     * 
     *
     * @returns java.lang.String
	 */
	public String getCallStatus() {
	    return this.callStatus;
	}
	
	/**
	 * public setter
	 *
     * 
     * The status of the call, either Success or Failure.
     * 
     *
     * @param java.lang.String
	 */
	public void setCallStatus(String callStatus) {
	    this.callStatus = callStatus;
	}

}