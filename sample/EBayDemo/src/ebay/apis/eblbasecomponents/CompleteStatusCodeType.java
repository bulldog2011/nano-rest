// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

/**
 * 
 * Indicates whether the order is complete, incomplete, or pending.
 * 
 */
public enum CompleteStatusCodeType {

    /**
     * 
   * The order is incomplete. Generally speaking, an order is incomplete when payment
   * from the buyer has yet to be initiated.
   * 
     */
    INCOMPLETE("Incomplete"),
  

    /**
     * 
   * The order is complete. Generally speaking, an order is complete when payment
   * from the buyer has been initiated and processed.
   * <br><br>
   * <b>Note</b>: If the PaymentMethod is CashOnPickup, the
   * CheckoutStatus.Status value in GetOrders will read Complete right at Checkout,
   * even though the seller may not have been officially paid yet. The
   * CheckoutStatus.Status value in GetOrders will remain as Complete even if the
   * seller uses ReviseCheckoutStatus to change the checkout status to Pending.
   * However, the eBayPaymentStatus value in GetOrders will change from
   * NoPaymentFailure to PaymentInProcess.
   * 
     */
    COMPLETE("Complete"),
  

    /**
     * 
   * The order is pending. Generally speaking, an order is pending when payment
   * from the buyer has been initiated but has yet to be fully processed.
   * <br><br>
   * <b>Note</b>: If the PaymentMethod is CashOnPickup, the
   * CheckoutStatus.Status value in GetOrders will read Complete right at Checkout,
   * even though the seller may not have been officially paid yet. The
   * CheckoutStatus.Status value in GetOrders will remain as Complete even if the
   * seller uses ReviseCheckoutStatus to change the checkout status to Pending.
   * However, the eBayPaymentStatus value in GetOrders will change from
   * NoPaymentFailure to PaymentInProcess.
   * 
     */
    PENDING("Pending"),
  

    /**
     * 
   * Reserved for internal or future use
   * 
     */
    CUSTOM_CODE("CustomCode");
  
  
    private final String value;
  
    CompleteStatusCodeType(String v) {
        value = v;
    }
    
    public String value() {
        return value;
    }
    
    public static CompleteStatusCodeType fromValue(String v) {
        if (v != null) {
            for (CompleteStatusCodeType c: CompleteStatusCodeType.values()) {
                if (c.value.equals(v)) {
                    return c;
                }
            }
        }
        throw new IllegalArgumentException(v);
    }
}