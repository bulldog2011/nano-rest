// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * Splitting include reviews and guides from GetProducts.
 * 
 */
@RootElement(name = "FindReviewsAndGuidesRequest", namespace = "urn:ebay:apis:eBLBaseComponents")
public class FindReviewsAndGuidesRequestType extends AbstractRequestType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "ProductID")
	private ProductIDType productID;
	
	@Element(name = "UserID")
	private String userID;
	
	@Element(name = "CategoryID")
	private String categoryID;
	
	@Element(name = "MaxResultsPerPage")
	private Integer maxResultsPerPage;
	
	@Element(name = "PageNumber")
	private Integer pageNumber;
	
	@Element(name = "ReviewSort")
	private ReviewSortCodeType reviewSort;
	
	@Element(name = "SortOrder")
	private SortOrderCodeType sortOrder;
	
    
	/**
     * public getter
     *
     * 
     * Use this to retrieve reviews (not guides) for one specific product.
     * Specify the ID as a string, and use the type attribute
     * to indicate the nature of the ID you are specifying.
     * Same as FindProducts, supports Reference, ISBN, UPC, EAN.
     * <br>
     * <br>
     * ProductID can be used in combination with UserID to return Reviews and Guides.
     * ProductID and CategoryID cannot be used together.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ProductIDType
	 */
	public ProductIDType getProductID() {
	    return this.productID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Use this to retrieve reviews (not guides) for one specific product.
     * Specify the ID as a string, and use the type attribute
     * to indicate the nature of the ID you are specifying.
     * Same as FindProducts, supports Reference, ISBN, UPC, EAN.
     * <br>
     * <br>
     * ProductID can be used in combination with UserID to return Reviews and Guides.
     * ProductID and CategoryID cannot be used together.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ProductIDType
	 */
	public void setProductID(ProductIDType productID) {
	    this.productID = productID;
	}
	/**
     * public getter
     *
     * 
     * Retrieves reviews and guides written by the specified user.
     * <br>
     * <br>
     * UserID can be combined with either ProductID or CategoryID but not both (as
     * ProductID and CategoryID cannot be used together).
     * 
     *
     * @returns java.lang.String
	 */
	public String getUserID() {
	    return this.userID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Retrieves reviews and guides written by the specified user.
     * <br>
     * <br>
     * UserID can be combined with either ProductID or CategoryID but not both (as
     * ProductID and CategoryID cannot be used together).
     * 
     *
     * @param java.lang.String
	 */
	public void setUserID(String userID) {
	    this.userID = userID;
	}
	/**
     * public getter
     *
     * 
     * Specify a single CategoryID to restrict your query to a specific Guide category.
     * <br>
     * <br>
     * If the specified category ID doesn't match an existing category
     * for the site, an invalid-category error message is returned.
     * To determine valid categories:<br>
     * Use <b>findItemsAdvanced</b> from the <a href="http://www.developer.ebay.com/DevZone/finding/CallRef/index.html">Finding API</a> with CategoryHistogram value in the OutputSelector field 
     * to retrieve matching categories. Then make another
     * FindReviewsAndGuides call with the ID of a matching category.
     * <br>
     * <br>
     * CategoryID can be used in combination with UserID to return Reviews and Guides.
     * ProductID and CategoryID cannot be used together.
     * 
     *
     * @returns java.lang.String
	 */
	public String getCategoryID() {
	    return this.categoryID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specify a single CategoryID to restrict your query to a specific Guide category.
     * <br>
     * <br>
     * If the specified category ID doesn't match an existing category
     * for the site, an invalid-category error message is returned.
     * To determine valid categories:<br>
     * Use <b>findItemsAdvanced</b> from the <a href="http://www.developer.ebay.com/DevZone/finding/CallRef/index.html">Finding API</a> with CategoryHistogram value in the OutputSelector field 
     * to retrieve matching categories. Then make another
     * FindReviewsAndGuides call with the ID of a matching category.
     * <br>
     * <br>
     * CategoryID can be used in combination with UserID to return Reviews and Guides.
     * ProductID and CategoryID cannot be used together.
     * 
     *
     * @param java.lang.String
	 */
	public void setCategoryID(String categoryID) {
	    this.categoryID = categoryID;
	}
	/**
     * public getter
     *
     * 
     * Specifies the maximum number of reviews per page (not guides) in the returned list. If not
     * specified, the default returns 5 results per page.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getMaxResultsPerPage() {
	    return this.maxResultsPerPage;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the maximum number of reviews per page (not guides) in the returned list. If not
     * specified, the default returns 5 results per page.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setMaxResultsPerPage(Integer maxResultsPerPage) {
	    this.maxResultsPerPage = maxResultsPerPage;
	}
	/**
     * public getter
     *
     * 
     * Specifies the number of the page of data to return in the current call.
     * Specify a positive value equal to or lower than the number of pages
     * available (which you determine by examining the results of your initial request).
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getPageNumber() {
	    return this.pageNumber;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the number of the page of data to return in the current call.
     * Specify a positive value equal to or lower than the number of pages
     * available (which you determine by examining the results of your initial request).
     * 
     *
     * @param java.lang.Integer
	 */
	public void setPageNumber(Integer pageNumber) {
	    this.pageNumber = pageNumber;
	}
	/**
     * public getter
     *
     * 
     * Include ReviewSort in your request if you want to sort by a parameter,
     * such as CreationTime. See the SortOrder field for values for specifying
     * that results are returned in ascending or descending order.
     * (By default, results are returned in descending order.)
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ReviewSortCodeType
	 */
	public ReviewSortCodeType getReviewSort() {
	    return this.reviewSort;
	}
	
	/**
	 * public setter
	 *
     * 
     * Include ReviewSort in your request if you want to sort by a parameter,
     * such as CreationTime. See the SortOrder field for values for specifying
     * that results are returned in ascending or descending order.
     * (By default, results are returned in descending order.)
     * 
     *
     * @param ebay.apis.eblbasecomponents.ReviewSortCodeType
	 */
	public void setReviewSort(ReviewSortCodeType reviewSort) {
	    this.reviewSort = reviewSort;
	}
	/**
     * public getter
     *
     * 
     * Sorts search results in ascending or descending order, in conjunction
     * with the value you specify in ReviewsSort. The default is descending
     * order.
     * <br> <br>
     * For example, for the ReviewsSort value of CreationTime,
     * and a SortOrder value of Descending, the most recently created
     * reviews are returned first.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SortOrderCodeType
	 */
	public SortOrderCodeType getSortOrder() {
	    return this.sortOrder;
	}
	
	/**
	 * public setter
	 *
     * 
     * Sorts search results in ascending or descending order, in conjunction
     * with the value you specify in ReviewsSort. The default is descending
     * order.
     * <br> <br>
     * For example, for the ReviewsSort value of CreationTime,
     * and a SortOrder value of Descending, the most recently created
     * reviews are returned first.
     * 
     *
     * @param ebay.apis.eblbasecomponents.SortOrderCodeType
	 */
	public void setSortOrder(SortOrderCodeType sortOrder) {
	    this.sortOrder = sortOrder;
	}

}