// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * 
 * Returns the Item ID or SKU with changed Price and Quantity for the revised listing.
 * 
 */
@RootElement(name = "ReviseInventoryStatusResponse", namespace = "urn:ebay:apis:eBLBaseComponents")
public class ReviseInventoryStatusResponseType extends AbstractResponseType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "InventoryStatus")
	private List<InventoryStatusType> inventoryStatus;
	
	@Element(name = "Fees")
	private List<InventoryFeesType> fees;
	
    
	/**
     * public getter
     *
     * 
     * Confirms the quantity and price associated with a listing 
     * or variation that was revised.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.InventoryStatusType>
	 */
	public List<InventoryStatusType> getInventoryStatus() {
	    return this.inventoryStatus;
	}
	
	/**
	 * public setter
	 *
     * 
     * Confirms the quantity and price associated with a listing 
     * or variation that was revised.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.InventoryStatusType>
	 */
	public void setInventoryStatus(List<InventoryStatusType> inventoryStatus) {
	    this.inventoryStatus = inventoryStatus;
	}
	/**
     * public getter
     *
     * 
     * Child elements contain the estimated listing fees for a 
     * listing that was revised. Use the ItemID to correlate the 
     * Fees data with the InventoryStatus data in the response. 
     * The fees do not include the Final Value Fee (FVF), 
     * which can't be determined until the listing has sales.<br>
     * <br>
     * If you revise a variation in a multi-variation listing, 
     * the fees are for the entire listing. The insertion fee and
     * listing fee are affected by the highest priced variation 
     * in the listing (which is not necessarily the variation that
     * you passed in the request).<br>
     * <br>
     * Also note that the call returns only one Fees node per listing.
     * For example, if you revise 4 variations from the same 
     * multi-variation listing, the response includes 4 
     * InventoryStatus nodes and 1 Fees node.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.InventoryFeesType>
	 */
	public List<InventoryFeesType> getFees() {
	    return this.fees;
	}
	
	/**
	 * public setter
	 *
     * 
     * Child elements contain the estimated listing fees for a 
     * listing that was revised. Use the ItemID to correlate the 
     * Fees data with the InventoryStatus data in the response. 
     * The fees do not include the Final Value Fee (FVF), 
     * which can't be determined until the listing has sales.<br>
     * <br>
     * If you revise a variation in a multi-variation listing, 
     * the fees are for the entire listing. The insertion fee and
     * listing fee are affected by the highest priced variation 
     * in the listing (which is not necessarily the variation that
     * you passed in the request).<br>
     * <br>
     * Also note that the call returns only one Fees node per listing.
     * For example, if you revise 4 variations from the same 
     * multi-variation listing, the response includes 4 
     * InventoryStatus nodes and 1 Fees node.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.InventoryFeesType>
	 */
	public void setFees(List<InventoryFeesType> fees) {
	    this.fees = fees;
	}

}