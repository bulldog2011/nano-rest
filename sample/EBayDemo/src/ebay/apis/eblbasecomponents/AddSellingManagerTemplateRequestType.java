// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * Adds a Selling Manager template.
 * One product can have up to 20 templates associated with it.
 * This call is subject to change without notice; the
 * deprecation process is inapplicable to this call.
 * 
 */
@RootElement(name = "AddSellingManagerTemplateRequest", namespace = "urn:ebay:apis:eBLBaseComponents")
public class AddSellingManagerTemplateRequestType extends AbstractRequestType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "Item")
	private ItemType item;
	
	@Element(name = "SaleTemplateName")
	private String saleTemplateName;
	
	@Element(name = "ProductID")
	private Long productID;
	
    
	/**
     * public getter
     *
     * 
     * Contains the data in your template, i.e. the data needed to
     * list an item. The item data you specify will be used
     * when you list items from the template you are adding.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ItemType
	 */
	public ItemType getItem() {
	    return this.item;
	}
	
	/**
	 * public setter
	 *
     * 
     * Contains the data in your template, i.e. the data needed to
     * list an item. The item data you specify will be used
     * when you list items from the template you are adding.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ItemType
	 */
	public void setItem(ItemType item) {
	    this.item = item;
	}
	/**
     * public getter
     *
     * 
     * The name you provide for the template. If you don't specify
     * a name, then Item.Title is used as the name.
     * 
     *
     * @returns java.lang.String
	 */
	public String getSaleTemplateName() {
	    return this.saleTemplateName;
	}
	
	/**
	 * public setter
	 *
     * 
     * The name you provide for the template. If you don't specify
     * a name, then Item.Title is used as the name.
     * 
     *
     * @param java.lang.String
	 */
	public void setSaleTemplateName(String saleTemplateName) {
	    this.saleTemplateName = saleTemplateName;
	}
	/**
     * public getter
     *
     * 
     * The ID of the product with which the template will be associated.
     * Before calling AddSellingManagerTemplate, you can obtain a product ID
     * from the response of an AddSellingManagerProduct call.
     * That is, after you add a product using AddSellingManagerProduct, a product ID is
     * returned in the SellingManagerProductDetails.ProductID field.
     * The GetSellingManagerTemplates
     * call also returns product IDs.
     * Alternatively, you can obtain information about a user's existing
     * products, including the product IDs, by calling GetSellingManagerInventory.
     * 
     *
     * @returns java.lang.Long
	 */
	public Long getProductID() {
	    return this.productID;
	}
	
	/**
	 * public setter
	 *
     * 
     * The ID of the product with which the template will be associated.
     * Before calling AddSellingManagerTemplate, you can obtain a product ID
     * from the response of an AddSellingManagerProduct call.
     * That is, after you add a product using AddSellingManagerProduct, a product ID is
     * returned in the SellingManagerProductDetails.ProductID field.
     * The GetSellingManagerTemplates
     * call also returns product IDs.
     * Alternatively, you can obtain information about a user's existing
     * products, including the product IDs, by calling GetSellingManagerInventory.
     * 
     *
     * @param java.lang.Long
	 */
	public void setProductID(Long productID) {
	    this.productID = productID;
	}

}