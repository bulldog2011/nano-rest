// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * Information about an eBay catalog product.
 * 
 */
public class CatalogProductType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "Title")
	private String title;
	
	@Element(name = "DetailsURL")
	private String detailsURL;
	
	@Element(name = "StockPhotoURL")
	private String stockPhotoURL;
	
	@Element(name = "DisplayStockPhotos")
	private Boolean displayStockPhotos;
	
	@Element(name = "ItemCount")
	private Integer itemCount;
	
	@Element(name = "ExternalProductID")
	private ExternalProductIDType externalProductID;
	
	@Element(name = "ProductReferenceID")
	private Long productReferenceID;
	
	@Element(name = "AttributeSetID")
	private Integer attributeSetID;
	
	@Element(name = "ItemSpecifics")
	private NameValueListArrayType itemSpecifics;
	
	@Element(name = "ReviewCount")
	private Integer reviewCount;
	
	@Element(name = "ReviewDetails")
	private ReviewDetailsType reviewDetails;
	
	@Element(name = "ProductState")
	private ProductStateCodeType productState;
	
    
	/**
     * public getter
     *
     * 
     * The title of the product. Always returned when Product is returned.
     * 
     *
     * @returns java.lang.String
	 */
	public String getTitle() {
	    return this.title;
	}
	
	/**
	 * public setter
	 *
     * 
     * The title of the product. Always returned when Product is returned.
     * 
     *
     * @param java.lang.String
	 */
	public void setTitle(String title) {
	    this.title = title;
	}
	/**
     * public getter
     *
     * 
     * Fully qualified URL for optional information about the product,
     * such as a movie's description or film credits. This information
     * is hosted through the eBay Web site and it cannot be edited.
     * Portions of the content are protected by copyright.
     * Applications can include this URL as a link in product search results
     * so that end users can view additional descriptive details about
     * the product.<br>
     * <br>
     * <span class="tablenote"><b>Note:</b> You can use
     * the ProductMementoString parameter in this URL as the ProductID value in
     * GetSearchResults requests. This parameter is a colon-delimited
     * alphanumeric value. For an example of how to use this string,
     * see the GetProducts samples in the eBay Web Services guide.</span>
     * 
     *
     * @returns java.lang.String
	 */
	public String getDetailsURL() {
	    return this.detailsURL;
	}
	
	/**
	 * public setter
	 *
     * 
     * Fully qualified URL for optional information about the product,
     * such as a movie's description or film credits. This information
     * is hosted through the eBay Web site and it cannot be edited.
     * Portions of the content are protected by copyright.
     * Applications can include this URL as a link in product search results
     * so that end users can view additional descriptive details about
     * the product.<br>
     * <br>
     * <span class="tablenote"><b>Note:</b> You can use
     * the ProductMementoString parameter in this URL as the ProductID value in
     * GetSearchResults requests. This parameter is a colon-delimited
     * alphanumeric value. For an example of how to use this string,
     * see the GetProducts samples in the eBay Web Services guide.</span>
     * 
     *
     * @param java.lang.String
	 */
	public void setDetailsURL(String detailsURL) {
	    this.detailsURL = detailsURL;
	}
	/**
     * public getter
     *
     * 
     * Fully qualified URL for a stock image (if any) that is associated
     * with the eBay catalog product. The URL is for the image eBay
     * usually displays in product search results (usually 70px tall).
     * It may be helpful to calculate the dimensions of the photo
     * programmatically before displaying it.
     * 
     *
     * @returns java.lang.String
	 */
	public String getStockPhotoURL() {
	    return this.stockPhotoURL;
	}
	
	/**
	 * public setter
	 *
     * 
     * Fully qualified URL for a stock image (if any) that is associated
     * with the eBay catalog product. The URL is for the image eBay
     * usually displays in product search results (usually 70px tall).
     * It may be helpful to calculate the dimensions of the photo
     * programmatically before displaying it.
     * 
     *
     * @param java.lang.String
	 */
	public void setStockPhotoURL(String stockPhotoURL) {
	    this.stockPhotoURL = stockPhotoURL;
	}
	/**
     * public getter
     *
     * 
     * If true, your application can attempt to display stock photos that
     * are returned. If false, your application should not attempt to display
     * any stock photos that are returned. This recommendation is useful for
     * catalog data related to products like coins, where stock photos are not
     * necessarily applicable or available. An application with a graphical
     * user interface can use this flag to determine
     * when to hide customized stock photo widgets.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getDisplayStockPhotos() {
	    return this.displayStockPhotos;
	}
	
	/**
	 * public setter
	 *
     * 
     * If true, your application can attempt to display stock photos that
     * are returned. If false, your application should not attempt to display
     * any stock photos that are returned. This recommendation is useful for
     * catalog data related to products like coins, where stock photos are not
     * necessarily applicable or available. An application with a graphical
     * user interface can use this flag to determine
     * when to hide customized stock photo widgets.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setDisplayStockPhotos(Boolean displayStockPhotos) {
	    this.displayStockPhotos = displayStockPhotos;
	}
	/**
     * public getter
     *
     * 
     * Total number of listings on the specified eBay site that use
     * stock information from this catalog product. This value can be greater
     * than the number of listings returned in ItemArray. To retrieve more
     * listings, use GetSearchResults.
     * Only returned when you use ExternalProductID or ProductReferenceID
     * and you set IncludeItemArray to true.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getItemCount() {
	    return this.itemCount;
	}
	
	/**
	 * public setter
	 *
     * 
     * Total number of listings on the specified eBay site that use
     * stock information from this catalog product. This value can be greater
     * than the number of listings returned in ItemArray. To retrieve more
     * listings, use GetSearchResults.
     * Only returned when you use ExternalProductID or ProductReferenceID
     * and you set IncludeItemArray to true.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setItemCount(Integer itemCount) {
	    this.itemCount = itemCount;
	}
	/**
     * public getter
     *
     * 
     * An ISBN, UPC, or EAN value that is associated with this
     * eBay catalog product (if any). These values are only returned
     * for products in "media" domains (Books, DVDs and Movies, Music, and
     * Video Games). Products in other domains don't return this value
     * (even if a UPC is available in the Item Specifics.)
     * Please note that as of February 2007, GetProducts may temporarily return
     * two ExternalProductID nodes for ISBN for some sites (one with a 13-digit
     * value and one with a 10-digit value). This is a bug and it will be fixed in
     * an upcoming release. Instead, one ExternalProductID node will be returned
     * with an additional field. Do not code your application to expect multiple
     * ExternalProductID nodes to be returned for ISBN values on an ongoing basis.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ExternalProductIDType
	 */
	public ExternalProductIDType getExternalProductID() {
	    return this.externalProductID;
	}
	
	/**
	 * public setter
	 *
     * 
     * An ISBN, UPC, or EAN value that is associated with this
     * eBay catalog product (if any). These values are only returned
     * for products in "media" domains (Books, DVDs and Movies, Music, and
     * Video Games). Products in other domains don't return this value
     * (even if a UPC is available in the Item Specifics.)
     * Please note that as of February 2007, GetProducts may temporarily return
     * two ExternalProductID nodes for ISBN for some sites (one with a 13-digit
     * value and one with a 10-digit value). This is a bug and it will be fixed in
     * an upcoming release. Instead, one ExternalProductID node will be returned
     * with an additional field. Do not code your application to expect multiple
     * ExternalProductID nodes to be returned for ISBN values on an ongoing basis.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ExternalProductIDType
	 */
	public void setExternalProductID(ExternalProductIDType externalProductID) {
	    this.externalProductID = externalProductID;
	}
	/**
     * public getter
     *
     * 
     * The numeric ID for the eBay catalog product. After selecting a product
     * returned from a keyword query, pass this value in GetProducts to
     * retrieve more information about that product.
     * 
     *
     * @returns java.lang.Long
	 */
	public Long getProductReferenceID() {
	    return this.productReferenceID;
	}
	
	/**
	 * public setter
	 *
     * 
     * The numeric ID for the eBay catalog product. After selecting a product
     * returned from a keyword query, pass this value in GetProducts to
     * retrieve more information about that product.
     * 
     *
     * @param java.lang.Long
	 */
	public void setProductReferenceID(Long productReferenceID) {
	    this.productReferenceID = productReferenceID;
	}
	/**
     * public getter
     *
     * 
     * Numeric ID for the product's domain (characteristic set).
     * When you use GetProducts by itself, this can be useful when
     * you want to group product results
     * by domain (e.g., all book products together).
     * For a mapping of attribute set IDs to names, see the
     * eBay Web Services guide. Alternatively, use GetCategory2CS
     * to retrieve the mappings periodically (e.g., once a day) and
     * store them locally. (We do not recommend using the product histogram,
     * for this purpose.)
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getAttributeSetID() {
	    return this.attributeSetID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Numeric ID for the product's domain (characteristic set).
     * When you use GetProducts by itself, this can be useful when
     * you want to group product results
     * by domain (e.g., all book products together).
     * For a mapping of attribute set IDs to names, see the
     * eBay Web Services guide. Alternatively, use GetCategory2CS
     * to retrieve the mappings periodically (e.g., once a day) and
     * store them locally. (We do not recommend using the product histogram,
     * for this purpose.)
     * 
     *
     * @param java.lang.Integer
	 */
	public void setAttributeSetID(Integer attributeSetID) {
	    this.attributeSetID = attributeSetID;
	}
	/**
     * public getter
     *
     * 
     * A list of attribute and value pairs that are included in the product's
     * pre-filled Item Specifics.
     * Also see ExternalProductID for ISBN, UPC, or MPN values, if applicable.
     * This is usually returned. (We are not aware of any cases in which this
     * node is not be returned. However, it may be safest to check for the
     * existence of this node.)
     * 
     *
     * @returns ebay.apis.eblbasecomponents.NameValueListArrayType
	 */
	public NameValueListArrayType getItemSpecifics() {
	    return this.itemSpecifics;
	}
	
	/**
	 * public setter
	 *
     * 
     * A list of attribute and value pairs that are included in the product's
     * pre-filled Item Specifics.
     * Also see ExternalProductID for ISBN, UPC, or MPN values, if applicable.
     * This is usually returned. (We are not aware of any cases in which this
     * node is not be returned. However, it may be safest to check for the
     * existence of this node.)
     * 
     *
     * @param ebay.apis.eblbasecomponents.NameValueListArrayType
	 */
	public void setItemSpecifics(NameValueListArrayType itemSpecifics) {
	    this.itemSpecifics = itemSpecifics;
	}
	/**
     * public getter
     *
     * 
     * The total number of reviews that are available for this product
     * on the eBay Web site. This can be greater than the number of
     * reviews returned by GetProducts. See ReviewDetails.Review.URL
     * for information about viewing more reviews.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getReviewCount() {
	    return this.reviewCount;
	}
	
	/**
	 * public setter
	 *
     * 
     * The total number of reviews that are available for this product
     * on the eBay Web site. This can be greater than the number of
     * reviews returned by GetProducts. See ReviewDetails.Review.URL
     * for information about viewing more reviews.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setReviewCount(Integer reviewCount) {
	    this.reviewCount = reviewCount;
	}
	/**
     * public getter
     *
     * 
     * The product's most helpful reviews, if any.
     * The reviews are sorted by most helpful review (most votes) first.
     * Only returned when you pass in ExternalProductID or
     * ProductReferenceID and you set IncludeReviewDetails to true.
     * Up to 20 of the reviews are returned. If more reviews are available,
     * (that is, if ReviewCount is greater than 20), the user can look at
     * additional reviews on the eBay Web site.
     * See ReviewDetails.Review.URL for information about viewing more
     * reviews.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ReviewDetailsType
	 */
	public ReviewDetailsType getReviewDetails() {
	    return this.reviewDetails;
	}
	
	/**
	 * public setter
	 *
     * 
     * The product's most helpful reviews, if any.
     * The reviews are sorted by most helpful review (most votes) first.
     * Only returned when you pass in ExternalProductID or
     * ProductReferenceID and you set IncludeReviewDetails to true.
     * Up to 20 of the reviews are returned. If more reviews are available,
     * (that is, if ReviewCount is greater than 20), the user can look at
     * additional reviews on the eBay Web site.
     * See ReviewDetails.Review.URL for information about viewing more
     * reviews.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ReviewDetailsType
	 */
	public void setReviewDetails(ReviewDetailsType reviewDetails) {
	    this.reviewDetails = reviewDetails;
	}
	/**
     * public getter
     *
     * 
     * Indicates that the product has changed or will soon change (usually due to a migration
     * from one catalog to another catalog). Typically, this field is returned for up to 90
     * days for a given product. After that, the product either no longer returns this field
     * or the product is no longer returned (depending on the state change).
     * <br><br>
     * This data is primarily applicable to catalogs used by the US, Germany, Austria, and
     * Switzerland sites. Other sites may undergo catalog changes in the future.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ProductStateCodeType
	 */
	public ProductStateCodeType getProductState() {
	    return this.productState;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates that the product has changed or will soon change (usually due to a migration
     * from one catalog to another catalog). Typically, this field is returned for up to 90
     * days for a given product. After that, the product either no longer returns this field
     * or the product is no longer returned (depending on the state change).
     * <br><br>
     * This data is primarily applicable to catalogs used by the US, Germany, Austria, and
     * Switzerland sites. Other sites may undergo catalog changes in the future.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ProductStateCodeType
	 */
	public void setProductState(ProductStateCodeType productState) {
	    this.productState = productState;
	}

}