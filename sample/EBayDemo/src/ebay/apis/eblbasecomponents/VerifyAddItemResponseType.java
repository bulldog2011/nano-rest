// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * 
 * Returns the estimated fees that would be applicable for a new listing
 * (were the item actually listed to eBay with AddItem).
 * 
 */
@RootElement(name = "VerifyAddItemResponse", namespace = "urn:ebay:apis:eBLBaseComponents")
public class VerifyAddItemResponseType extends AbstractResponseType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "ItemID")
	private String itemID;
	
	@Element(name = "Fees")
	private FeesType fees;
	
	@Element(name = "ExpressListing")
	private Boolean expressListing;
	
	@Element(name = "ExpressItemRequirements")
	private ExpressItemRequirementsType expressItemRequirements;
	
	@Element(name = "CategoryID")
	private String categoryID;
	
	@Element(name = "Category2ID")
	private String category2ID;
	
	@Element(name = "DiscountReason")
	private List<DiscountReasonCodeType> discountReason;
	
	@Element(name = "ProductSuggestions")
	private ProductSuggestionsType productSuggestions;
	
    
	/**
     * public getter
     *
     * 
     * Represents the item ID for the new listing. VerifyAddItem does not
     * actually list an item, so 0 is returned instead of a normal item ID.
     * <br><br>
     * <span class="tablenote"><b>Note:</b>
     * Although we represent item IDs as strings in the schema, we recommend you store
     * them as 64-bit signed integers. If you choose to store item IDs as strings,
     * allocate at least 19 characters (assuming decimal digits are used) to hold them.
     * eBay will increase the size of IDs over time. Your code should be prepared to
     * handle IDs of up to 19 digits. For more information about item IDs, see
     * <a href=
     * "http://ebay.custhelp.com/cgi-bin/ebay.cfg/php/enduser/std_adp.php?p_faqid=468">
     * Common FAQs on eBay Item IDs and other eBay IDs</a> in the Knowledge Base.
     * </span>
     * 
     *
     * @returns java.lang.String
	 */
	public String getItemID() {
	    return this.itemID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Represents the item ID for the new listing. VerifyAddItem does not
     * actually list an item, so 0 is returned instead of a normal item ID.
     * <br><br>
     * <span class="tablenote"><b>Note:</b>
     * Although we represent item IDs as strings in the schema, we recommend you store
     * them as 64-bit signed integers. If you choose to store item IDs as strings,
     * allocate at least 19 characters (assuming decimal digits are used) to hold them.
     * eBay will increase the size of IDs over time. Your code should be prepared to
     * handle IDs of up to 19 digits. For more information about item IDs, see
     * <a href=
     * "http://ebay.custhelp.com/cgi-bin/ebay.cfg/php/enduser/std_adp.php?p_faqid=468">
     * Common FAQs on eBay Item IDs and other eBay IDs</a> in the Knowledge Base.
     * </span>
     * 
     *
     * @param java.lang.String
	 */
	public void setItemID(String itemID) {
	    this.itemID = itemID;
	}
	/**
     * public getter
     *
     * 
     * Child Fee containers provide the listing feature names, fees, and possible discounts
     * for the new item listing. The fees do not include the Final Value Fee (FVF), which
     * cannot be determined until an item is sold.
     * <br />
     * <br />
     * There is no guarantee that a PromotionalDiscount returned with VerifyAddItem will
     * be realized when the seller uses AddItem to list the same item. This is the result
     * of the timing of certain promotions.
     * <br />
     * <br />
     * <span class="tablenote"><strong>Note:</strong>
     * Starting with version 619, the behavior of VerifyAddItem changed to match that of
     * AddItem. With a request version of 619 or higher, the value of Fees.Fee.Fee
     * for VerifyAddItem represents the actual cost of the respective feature, with any
     * discounts subtracted from the posted feature price. With a request version lower
     * than 619, VerifyAddItem returns the full price of the feature in the Fee element,
     * regardless of whether or not a discount was applied.
     * </span>
     * 
     *
     * @returns ebay.apis.eblbasecomponents.FeesType
	 */
	public FeesType getFees() {
	    return this.fees;
	}
	
	/**
	 * public setter
	 *
     * 
     * Child Fee containers provide the listing feature names, fees, and possible discounts
     * for the new item listing. The fees do not include the Final Value Fee (FVF), which
     * cannot be determined until an item is sold.
     * <br />
     * <br />
     * There is no guarantee that a PromotionalDiscount returned with VerifyAddItem will
     * be realized when the seller uses AddItem to list the same item. This is the result
     * of the timing of certain promotions.
     * <br />
     * <br />
     * <span class="tablenote"><strong>Note:</strong>
     * Starting with version 619, the behavior of VerifyAddItem changed to match that of
     * AddItem. With a request version of 619 or higher, the value of Fees.Fee.Fee
     * for VerifyAddItem represents the actual cost of the respective feature, with any
     * discounts subtracted from the posted feature price. With a request version lower
     * than 619, VerifyAddItem returns the full price of the feature in the Fee element,
     * regardless of whether or not a discount was applied.
     * </span>
     * 
     *
     * @param ebay.apis.eblbasecomponents.FeesType
	 */
	public void setFees(FeesType fees) {
	    this.fees = fees;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether the item would be listed on eBay Express.
     * See ExpressItemRequirements for hints about why this
     * value is true or false for a given item.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getExpressListing() {
	    return this.expressListing;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether the item would be listed on eBay Express.
     * See ExpressItemRequirements for hints about why this
     * value is true or false for a given item.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setExpressListing(Boolean expressListing) {
	    this.expressListing = expressListing;
	}
	/**
     * public getter
     *
     * 
     * Contains details about why an item does or doesn't
     * qualify as an eBay Express listing. Only returned when
     * IncludeExpressRequirements is true the request.
     * <br>
     * <br>
     * The item requirements are assessed in this order:<br>
     * - SellerExpressEligible<br>
     * - ExpressOptOut<br>
     * - ExpressApproved<br>
     * - All other settings
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ExpressItemRequirementsType
	 */
	public ExpressItemRequirementsType getExpressItemRequirements() {
	    return this.expressItemRequirements;
	}
	
	/**
	 * public setter
	 *
     * 
     * Contains details about why an item does or doesn't
     * qualify as an eBay Express listing. Only returned when
     * IncludeExpressRequirements is true the request.
     * <br>
     * <br>
     * The item requirements are assessed in this order:<br>
     * - SellerExpressEligible<br>
     * - ExpressOptOut<br>
     * - ExpressApproved<br>
     * - All other settings
     * 
     *
     * @param ebay.apis.eblbasecomponents.ExpressItemRequirementsType
	 */
	public void setExpressItemRequirements(ExpressItemRequirementsType expressItemRequirements) {
	    this.expressItemRequirements = expressItemRequirements;
	}
	/**
     * public getter
     *
     * 
     * ID of the primary category in which the item would be listed.
     * Only returned if you set Item.CategoryMappingAllowed to true in the request
     * and the ID you passed in PrimaryCategory was mapped to a new ID by eBay.
     * If the primary category has not changed or it has expired with no replacement,
     * CategoryID does not return a value.
     * 
     *
     * @returns java.lang.String
	 */
	public String getCategoryID() {
	    return this.categoryID;
	}
	
	/**
	 * public setter
	 *
     * 
     * ID of the primary category in which the item would be listed.
     * Only returned if you set Item.CategoryMappingAllowed to true in the request
     * and the ID you passed in PrimaryCategory was mapped to a new ID by eBay.
     * If the primary category has not changed or it has expired with no replacement,
     * CategoryID does not return a value.
     * 
     *
     * @param java.lang.String
	 */
	public void setCategoryID(String categoryID) {
	    this.categoryID = categoryID;
	}
	/**
     * public getter
     *
     * 
     * ID of the secondary category in which the item would be listed.
     * Only returned if you set Item.CategoryMappingAllowed to true in the request
     * and the ID you passed in SecondaryCategory was mapped to a new ID by eBay.
     * If the secondary category has not changed or it has expired with no replacement,
     * Category2ID does not return a value.
     * 
     *
     * @returns java.lang.String
	 */
	public String getCategory2ID() {
	    return this.category2ID;
	}
	
	/**
	 * public setter
	 *
     * 
     * ID of the secondary category in which the item would be listed.
     * Only returned if you set Item.CategoryMappingAllowed to true in the request
     * and the ID you passed in SecondaryCategory was mapped to a new ID by eBay.
     * If the secondary category has not changed or it has expired with no replacement,
     * Category2ID does not return a value.
     * 
     *
     * @param java.lang.String
	 */
	public void setCategory2ID(String category2ID) {
	    this.category2ID = category2ID;
	}
	/**
     * public getter
     *
     * 
     * The nature of the discount, if a discount would have applied
     * had this actually been listed at this time.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.DiscountReasonCodeType>
	 */
	public List<DiscountReasonCodeType> getDiscountReason() {
	    return this.discountReason;
	}
	
	/**
	 * public setter
	 *
     * 
     * The nature of the discount, if a discount would have applied
     * had this actually been listed at this time.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.DiscountReasonCodeType>
	 */
	public void setDiscountReason(List<DiscountReasonCodeType> discountReason) {
	    this.discountReason = discountReason;
	}
	/**
     * public getter
     *
     * 
     * Provides a list of products recommended by eBay which match the item information
     * provided by the seller.
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ProductSuggestionsType
	 */
	public ProductSuggestionsType getProductSuggestions() {
	    return this.productSuggestions;
	}
	
	/**
	 * public setter
	 *
     * 
     * Provides a list of products recommended by eBay which match the item information
     * provided by the seller.
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ProductSuggestionsType
	 */
	public void setProductSuggestions(ProductSuggestionsType productSuggestions) {
	    this.productSuggestions = productSuggestions;
	}

}