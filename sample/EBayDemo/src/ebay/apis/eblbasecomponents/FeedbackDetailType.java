// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.Date;

/**
 * 
 * Container consisting of detailed information on a Feedback entry for a specific 
 * order line item.
 *   
 */
public class FeedbackDetailType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "CommentingUser")
	private String commentingUser;
	
	@Element(name = "CommentingUserScore")
	private Integer commentingUserScore;
	
	@Element(name = "CommentText")
	private String commentText;
	
	@Element(name = "CommentTime")
	private Date commentTime;
	
	@Element(name = "CommentType")
	private CommentTypeCodeType commentType;
	
	@Element(name = "FeedbackResponse")
	private String feedbackResponse;
	
	@Element(name = "Followup")
	private String followup;
	
	@Element(name = "ItemID")
	private String itemID;
	
	@Element(name = "Role")
	private TradingRoleCodeType role;
	
	@Element(name = "ItemTitle")
	private String itemTitle;
	
	@Element(name = "ItemPrice")
	private AmountType itemPrice;
	
	@Element(name = "FeedbackID")
	private String feedbackID;
	
	@Element(name = "TransactionID")
	private String transactionID;
	
	@Element(name = "CommentReplaced")
	private Boolean commentReplaced;
	
	@Element(name = "ResponseReplaced")
	private Boolean responseReplaced;
	
	@Element(name = "FollowUpReplaced")
	private Boolean followUpReplaced;
	
	@Element(name = "Countable")
	private Boolean countable;
	
	@Element(name = "FeedbackRevised")
	private Boolean feedbackRevised;
	
	@Element(name = "OrderLineItemID")
	private String orderLineItemID;
	
    
	/**
     * public getter
     *
     * 
     * The eBay User ID of the user who left the feedback.
     * 
     *
     * @returns java.lang.String
	 */
	public String getCommentingUser() {
	    return this.commentingUser;
	}
	
	/**
	 * public setter
	 *
     * 
     * The eBay User ID of the user who left the feedback.
     * 
     *
     * @param java.lang.String
	 */
	public void setCommentingUser(String commentingUser) {
	    this.commentingUser = commentingUser;
	}
	/**
     * public getter
     *
     * 
     * The Feedback score of the user indicated in <b>CommentingUser</b>.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getCommentingUserScore() {
	    return this.commentingUserScore;
	}
	
	/**
	 * public setter
	 *
     * 
     * The Feedback score of the user indicated in <b>CommentingUser</b>.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setCommentingUserScore(Integer commentingUserScore) {
	    this.commentingUserScore = commentingUserScore;
	}
	/**
     * public getter
     *
     * 
     * Textual comment that explains, clarifies, or justifies the Feedback rating specified
     * in <b>CommentType</b>. 
     * <br><br>
     * The comment is returned as text in the language that the comment was originally left
     * in. This comment will still be displayed even if a submitted Feedback entry is
     * withdrawn.
     * 
     *
     * @returns java.lang.String
	 */
	public String getCommentText() {
	    return this.commentText;
	}
	
	/**
	 * public setter
	 *
     * 
     * Textual comment that explains, clarifies, or justifies the Feedback rating specified
     * in <b>CommentType</b>. 
     * <br><br>
     * The comment is returned as text in the language that the comment was originally left
     * in. This comment will still be displayed even if a submitted Feedback entry is
     * withdrawn.
     * 
     *
     * @param java.lang.String
	 */
	public void setCommentText(String commentText) {
	    this.commentText = commentText;
	}
	/**
     * public getter
     *
     * 
     * Timestamp (in GMT) indicating the date/time that the Feedback entry was submitted
     * to eBay.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getCommentTime() {
	    return this.commentTime;
	}
	
	/**
	 * public setter
	 *
     * 
     * Timestamp (in GMT) indicating the date/time that the Feedback entry was submitted
     * to eBay.
     * 
     *
     * @param java.util.Date
	 */
	public void setCommentTime(Date commentTime) {
	    this.commentTime = commentTime;
	}
	/**
     * public getter
     *
     * 
     * This value indicates the rating of the feedback left by the user identified by 
     * <b>CommentingUser</b>. 
     * <br><br>
     * A Positive rating increases a user's Feedback score, a Negative rating decreases
     * a user's Feedback score, and a Neutral rating does not affect a user's Feedback
     * score. 
     * <br><br>
     * Sellers cannot leave Neutral or Negative ratings for buyers. 
     * 
     *
     * @returns ebay.apis.eblbasecomponents.CommentTypeCodeType
	 */
	public CommentTypeCodeType getCommentType() {
	    return this.commentType;
	}
	
	/**
	 * public setter
	 *
     * 
     * This value indicates the rating of the feedback left by the user identified by 
     * <b>CommentingUser</b>. 
     * <br><br>
     * A Positive rating increases a user's Feedback score, a Negative rating decreases
     * a user's Feedback score, and a Neutral rating does not affect a user's Feedback
     * score. 
     * <br><br>
     * Sellers cannot leave Neutral or Negative ratings for buyers. 
     * 
     *
     * @param ebay.apis.eblbasecomponents.CommentTypeCodeType
	 */
	public void setCommentType(CommentTypeCodeType commentType) {
	    this.commentType = commentType;
	}
	/**
     * public getter
     *
     * 
     * Textual comment that the recipient of the feedback may leave in response or
     * rebuttal to the feedback. Responses to Feedback comments cannot be submitted or
     * edited via the API.
     * 
     *
     * @returns java.lang.String
	 */
	public String getFeedbackResponse() {
	    return this.feedbackResponse;
	}
	
	/**
	 * public setter
	 *
     * 
     * Textual comment that the recipient of the feedback may leave in response or
     * rebuttal to the feedback. Responses to Feedback comments cannot be submitted or
     * edited via the API.
     * 
     *
     * @param java.lang.String
	 */
	public void setFeedbackResponse(String feedbackResponse) {
	    this.feedbackResponse = feedbackResponse;
	}
	/**
     * public getter
     *
     * 
     * Explanation a user can give to a response. Follow-ups to Feedback comments cannot be
     * submitted or edited via the API.
     * 
     *
     * @returns java.lang.String
	 */
	public String getFollowup() {
	    return this.followup;
	}
	
	/**
	 * public setter
	 *
     * 
     * Explanation a user can give to a response. Follow-ups to Feedback comments cannot be
     * submitted or edited via the API.
     * 
     *
     * @param java.lang.String
	 */
	public void setFollowup(String followup) {
	    this.followup = followup;
	}
	/**
     * public getter
     *
     * 
     * The unique identifier that uniquely identifies the item listing.
     * 
     *
     * @returns java.lang.String
	 */
	public String getItemID() {
	    return this.itemID;
	}
	
	/**
	 * public setter
	 *
     * 
     * The unique identifier that uniquely identifies the item listing.
     * 
     *
     * @param java.lang.String
	 */
	public void setItemID(String itemID) {
	    this.itemID = itemID;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether the recipient of the Feedback entry is the buyer
     * or the seller for the corresponding order line item.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.TradingRoleCodeType
	 */
	public TradingRoleCodeType getRole() {
	    return this.role;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether the recipient of the Feedback entry is the buyer
     * or the seller for the corresponding order line item.
     * 
     *
     * @param ebay.apis.eblbasecomponents.TradingRoleCodeType
	 */
	public void setRole(TradingRoleCodeType role) {
	    this.role = role;
	}
	/**
     * public getter
     *
     * 
     * Name of the item listing for which feedback was provided. Returned as CDATA. This
     * value can be returned as part of the Detailed Seller Ratings feature.
     * Not returned if a listing ended more than 90 days ago.
     * 
     *
     * @returns java.lang.String
	 */
	public String getItemTitle() {
	    return this.itemTitle;
	}
	
	/**
	 * public setter
	 *
     * 
     * Name of the item listing for which feedback was provided. Returned as CDATA. This
     * value can be returned as part of the Detailed Seller Ratings feature.
     * Not returned if a listing ended more than 90 days ago.
     * 
     *
     * @param java.lang.String
	 */
	public void setItemTitle(String itemTitle) {
	    this.itemTitle = itemTitle;
	}
	/**
     * public getter
     *
     * 
     * The final price for the item, associated with
     * the currency identified by the <b>CurrencyID</b> attribute of the <b>AmountType</b>.
     * This value can be returned as part of the Detailed Seller Ratings feature.
     * Not returned if a listing ended more than 90 days ago.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getItemPrice() {
	    return this.itemPrice;
	}
	
	/**
	 * public setter
	 *
     * 
     * The final price for the item, associated with
     * the currency identified by the <b>CurrencyID</b> attribute of the <b>AmountType</b>.
     * This value can be returned as part of the Detailed Seller Ratings feature.
     * Not returned if a listing ended more than 90 days ago.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setItemPrice(AmountType itemPrice) {
	    this.itemPrice = itemPrice;
	}
	/**
     * public getter
     *
     * 
     * Unique identifier for the feedback entry.
     * Returned for a detail level of <b>ReturnAll</b> (if the parent is returned).
     * 
     *
     * @returns java.lang.String
	 */
	public String getFeedbackID() {
	    return this.feedbackID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Unique identifier for the feedback entry.
     * Returned for a detail level of <b>ReturnAll</b> (if the parent is returned).
     * 
     *
     * @param java.lang.String
	 */
	public void setFeedbackID(String feedbackID) {
	    this.feedbackID = feedbackID;
	}
	/**
     * public getter
     *
     * 
     * Unique identifier for an eBay order line item for which the
     * Feedback entry was left. This field is not returned if the Feedback entry was left
     * for an auction listing, since all auction listings have a <b>TransactionID</b>
     * value of 0. 
     * 
     *
     * @returns java.lang.String
	 */
	public String getTransactionID() {
	    return this.transactionID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Unique identifier for an eBay order line item for which the
     * Feedback entry was left. This field is not returned if the Feedback entry was left
     * for an auction listing, since all auction listings have a <b>TransactionID</b>
     * value of 0. 
     * 
     *
     * @param java.lang.String
	 */
	public void setTransactionID(String transactionID) {
	    this.transactionID = transactionID;
	}
	/**
     * public getter
     *
     * 
     * Flag used to indicate whether or not eBay replaced the Feedback comment with a
     * message that the Feedback comment was removed.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getCommentReplaced() {
	    return this.commentReplaced;
	}
	
	/**
	 * public setter
	 *
     * 
     * Flag used to indicate whether or not eBay replaced the Feedback comment with a
     * message that the Feedback comment was removed.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setCommentReplaced(Boolean commentReplaced) {
	    this.commentReplaced = commentReplaced;
	}
	/**
     * public getter
     *
     * 
     * Flag used to indicate whether or not eBay replaced the response to the Feedback
     * comment with a message that the response to the Feedback comment was removed.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getResponseReplaced() {
	    return this.responseReplaced;
	}
	
	/**
	 * public setter
	 *
     * 
     * Flag used to indicate whether or not eBay replaced the response to the Feedback
     * comment with a message that the response to the Feedback comment was removed.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setResponseReplaced(Boolean responseReplaced) {
	    this.responseReplaced = responseReplaced;
	}
	/**
     * public getter
     *
     * 
     * Flag used to indicate whether or not eBay replaced the follow-up to the Feedback
     * comment with a message that the follow-up to the Feedback comment was removed.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getFollowUpReplaced() {
	    return this.followUpReplaced;
	}
	
	/**
	 * public setter
	 *
     * 
     * Flag used to indicate whether or not eBay replaced the follow-up to the Feedback
     * comment with a message that the follow-up to the Feedback comment was removed.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setFollowUpReplaced(Boolean followUpReplaced) {
	    this.followUpReplaced = followUpReplaced;
	}
	/**
     * public getter
     *
     * 
     * The flag indicates whether or not the Feedback entry will affect the user's Feedback
     * score. Only feedback left by verified users can count toward the aggregate score of
     * another user. If a unverified user leaves a Feedback entry, then later
     * becomes verified, that Feedback entry will still have no affect on the recipient 
     * user's Feedback score. Or, if a user is verified and at some later date changes to
     * unverified status, the Feedback entry left while the user was verified remains
     * in effect.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getCountable() {
	    return this.countable;
	}
	
	/**
	 * public setter
	 *
     * 
     * The flag indicates whether or not the Feedback entry will affect the user's Feedback
     * score. Only feedback left by verified users can count toward the aggregate score of
     * another user. If a unverified user leaves a Feedback entry, then later
     * becomes verified, that Feedback entry will still have no affect on the recipient 
     * user's Feedback score. Or, if a user is verified and at some later date changes to
     * unverified status, the Feedback entry left while the user was verified remains
     * in effect.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setCountable(Boolean countable) {
	    this.countable = countable;
	}
	/**
     * public getter
     *
     * 
     * Flag used to indicate whether or not a Feedback entry was revised (rating was 
     * changed).
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getFeedbackRevised() {
	    return this.feedbackRevised;
	}
	
	/**
	 * public setter
	 *
     * 
     * Flag used to indicate whether or not a Feedback entry was revised (rating was 
     * changed).
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setFeedbackRevised(Boolean feedbackRevised) {
	    this.feedbackRevised = feedbackRevised;
	}
	/**
     * public getter
     *
     * 
     * <b>OrderLineItemID</b> is a unique identifier for an eBay order line item and is
     * based upon the concatenation of <b>ItemID</b> and <b>TransactionID</b>, with a hyphen in
     * between these two IDs.
     * <br>
     * 
     *
     * @returns java.lang.String
	 */
	public String getOrderLineItemID() {
	    return this.orderLineItemID;
	}
	
	/**
	 * public setter
	 *
     * 
     * <b>OrderLineItemID</b> is a unique identifier for an eBay order line item and is
     * based upon the concatenation of <b>ItemID</b> and <b>TransactionID</b>, with a hyphen in
     * between these two IDs.
     * <br>
     * 
     *
     * @param java.lang.String
	 */
	public void setOrderLineItemID(String orderLineItemID) {
	    this.orderLineItemID = orderLineItemID;
	}

}