// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;
import java.util.Date;

/**
 * 
 * Includes the acknowledgement of date and time the auction was
 * ended due to the call to EndItem.
 * 
 */
public class EndItemResponseContainerType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "EndTime")
	private Date endTime;
	
	@Element(name = "CorrelationID")
	private String correlationID;
	
	@Element(name = "Errors")
	private List<ErrorType> errors;
	
    
	/**
     * public getter
     *
     * 
     * Indicates the date and time (returned in GMT) the specified item listing
     * was ended.
     * Also applicable to Half.com.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getEndTime() {
	    return this.endTime;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates the date and time (returned in GMT) the specified item listing
     * was ended.
     * Also applicable to Half.com.
     * 
     *
     * @param java.util.Date
	 */
	public void setEndTime(Date endTime) {
	    this.endTime = endTime;
	}
	/**
     * public getter
     *
     * 
     * Most Trading API calls support a <b>MessageID</b> element in the request
     * and a <b>CorrelationID</b> element in the response. With 
     * <b>EndItems</b>, the seller can pass in a different 
     * <b>MessageID</b> value for 
     * each <b>EndItemRequestContainer<b> container that is used in the request. The 
     * <b>CorrelationID</b> value returned under each 
     * <b>EndItemResponseContainer</b> container is used to correlate each 
     * End Item request container with its corresponding End Item response container. The same <b>MessageID</b> value that you pass into a request will 
     * be returned in the <b>CorrelationID</b> field in the response.
     * <br>
     * <br>
     * If you do not pass in a <b>MessageID</b> value in the request, 
     * <b>CorrelationID</b> is not returned.
     * 
     *
     * @returns java.lang.String
	 */
	public String getCorrelationID() {
	    return this.correlationID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Most Trading API calls support a <b>MessageID</b> element in the request
     * and a <b>CorrelationID</b> element in the response. With 
     * <b>EndItems</b>, the seller can pass in a different 
     * <b>MessageID</b> value for 
     * each <b>EndItemRequestContainer<b> container that is used in the request. The 
     * <b>CorrelationID</b> value returned under each 
     * <b>EndItemResponseContainer</b> container is used to correlate each 
     * End Item request container with its corresponding End Item response container. The same <b>MessageID</b> value that you pass into a request will 
     * be returned in the <b>CorrelationID</b> field in the response.
     * <br>
     * <br>
     * If you do not pass in a <b>MessageID</b> value in the request, 
     * <b>CorrelationID</b> is not returned.
     * 
     *
     * @param java.lang.String
	 */
	public void setCorrelationID(String correlationID) {
	    this.correlationID = correlationID;
	}
	/**
     * public getter
     *
     * 
     * A list of application-level errors or warnings (if any) that were raised
     * when eBay processed the request. <br>
     * <br>
     * Application-level errors occur due to
     * problems with business-level data on the client side or on the eBay
     * server side. For example, an error would occur if the request contains
     * an invalid combination of fields, or it is missing a required field,
     * or the value of the field is not recognized. An error could also occur
     * if eBay encountered a problem in our internal business logic while
     * processing the request.<br>
     * <br>
     * Only returned if there were warnings or errors.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.ErrorType>
	 */
	public List<ErrorType> getErrors() {
	    return this.errors;
	}
	
	/**
	 * public setter
	 *
     * 
     * A list of application-level errors or warnings (if any) that were raised
     * when eBay processed the request. <br>
     * <br>
     * Application-level errors occur due to
     * problems with business-level data on the client side or on the eBay
     * server side. For example, an error would occur if the request contains
     * an invalid combination of fields, or it is missing a required field,
     * or the value of the field is not recognized. An error could also occur
     * if eBay encountered a problem in our internal business logic while
     * processing the request.<br>
     * <br>
     * Only returned if there were warnings or errors.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.ErrorType>
	 */
	public void setErrors(List<ErrorType> errors) {
	    this.errors = errors;
	}

}