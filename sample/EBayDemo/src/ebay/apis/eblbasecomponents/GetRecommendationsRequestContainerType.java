// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * 
 * Specifies the data for a single item and configures the recommendation engines to use
 * when processing the item with GetItemRecommendations.
 * 
 */
public class GetRecommendationsRequestContainerType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "ListingFlow")
	private ListingFlowCodeType listingFlow;
	
	@Element(name = "Item")
	private ItemType item;
	
	@Element(name = "RecommendationEngine")
	private List<RecommendationEngineCodeType> recommendationEngine;
	
	@Element(name = "Query")
	private String query;
	
	@Element(name = "CorrelationID")
	private String correlationID;
	
	@Element(name = "DeletedField")
	private List<String> deletedField;
	
	@Element(name = "ExcludeRelationships")
	private Boolean excludeRelationships;
	
	@Element(name = "IncludeConfidence")
	private Boolean includeConfidence;
	
    
	/**
     * public getter
     *
     * 
     * The listing flow for which the seller is seeking Listing Analyzer recommendations.
     * Not applicable to results from other recommendation engines
     * (i.e., the Suggested Attributes engine or the Product Pricing engine).
     * The default flow is AddItem.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ListingFlowCodeType
	 */
	public ListingFlowCodeType getListingFlow() {
	    return this.listingFlow;
	}
	
	/**
	 * public setter
	 *
     * 
     * The listing flow for which the seller is seeking Listing Analyzer recommendations.
     * Not applicable to results from other recommendation engines
     * (i.e., the Suggested Attributes engine or the Product Pricing engine).
     * The default flow is AddItem.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ListingFlowCodeType
	 */
	public void setListingFlow(ListingFlowCodeType listingFlow) {
	    this.listingFlow = listingFlow;
	}
	/**
     * public getter
     *
     * 
     * Contains fields that describe the item for which you are seeking recommendations. <br>
     * <br>
     * If the Listing Analyzer recommendation engine is run, the applicable fields are
     * the same as the fields for AddItem, ReviseItem, or RelistItem
     * requests, as determined by the value specified in ListingFlow.
     * The item ID (Item.ItemID) is required when the ListingFlow is ReviseItem or RelistItem,
     * and it is not applicable when the ListingFlow is AddItem.
     * All other item fields are optional, even if listed as required for other calls.
     * However, as some tips are dependent on the properties of the item, and as some properties
     * have dependencies on other properties, we strongly recommend that you include all the item properties
     * that will be included in the AddItem, ReviseItem, or RelistItem request.
     * When the Listing Analyzer engine is run, tips will only be returned for fields that are specfied on the item.<br>
     * <br>
     * When the Product Pricing engine is run, pricing data will be based on the catalog product you specify.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ItemType
	 */
	public ItemType getItem() {
	    return this.item;
	}
	
	/**
	 * public setter
	 *
     * 
     * Contains fields that describe the item for which you are seeking recommendations. <br>
     * <br>
     * If the Listing Analyzer recommendation engine is run, the applicable fields are
     * the same as the fields for AddItem, ReviseItem, or RelistItem
     * requests, as determined by the value specified in ListingFlow.
     * The item ID (Item.ItemID) is required when the ListingFlow is ReviseItem or RelistItem,
     * and it is not applicable when the ListingFlow is AddItem.
     * All other item fields are optional, even if listed as required for other calls.
     * However, as some tips are dependent on the properties of the item, and as some properties
     * have dependencies on other properties, we strongly recommend that you include all the item properties
     * that will be included in the AddItem, ReviseItem, or RelistItem request.
     * When the Listing Analyzer engine is run, tips will only be returned for fields that are specfied on the item.<br>
     * <br>
     * When the Product Pricing engine is run, pricing data will be based on the catalog product you specify.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ItemType
	 */
	public void setItem(ItemType item) {
	    this.item = item;
	}
	/**
     * public getter
     *
     * 
     * A recommendation engine to run. If no engines are specified, all available
     * recommendation engines will run. Some engines require additional fields,
     * such as Item.PrimaryCategory.CategoryID, to be specified.
     * If the ProductPricing engine is specified but Item.ProductListingDetails is not specified,
     * no Product Pricing engine results are returned.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.RecommendationEngineCodeType>
	 */
	public List<RecommendationEngineCodeType> getRecommendationEngine() {
	    return this.recommendationEngine;
	}
	
	/**
	 * public setter
	 *
     * 
     * A recommendation engine to run. If no engines are specified, all available
     * recommendation engines will run. Some engines require additional fields,
     * such as Item.PrimaryCategory.CategoryID, to be specified.
     * If the ProductPricing engine is specified but Item.ProductListingDetails is not specified,
     * no Product Pricing engine results are returned.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.RecommendationEngineCodeType>
	 */
	public void setRecommendationEngine(List<RecommendationEngineCodeType> recommendationEngine) {
	    this.recommendationEngine = recommendationEngine;
	}
	/**
     * public getter
     *
     * 
     * One or more keywords to search for when using the Suggested Attributes engine.
     * Required when SuggestedAttributes is specified as the recommendation engine
     * (including when no recommendation engines are specified). Only the listing title
     * is searched. The words "and" and "or" are treated like any other word.
     * Blank searches are not allowed (and result in a warning).
     * 
     *
     * @returns java.lang.String
	 */
	public String getQuery() {
	    return this.query;
	}
	
	/**
	 * public setter
	 *
     * 
     * One or more keywords to search for when using the Suggested Attributes engine.
     * Required when SuggestedAttributes is specified as the recommendation engine
     * (including when no recommendation engines are specified). Only the listing title
     * is searched. The words "and" and "or" are treated like any other word.
     * Blank searches are not allowed (and result in a warning).
     * 
     *
     * @param java.lang.String
	 */
	public void setQuery(String query) {
	    this.query = query;
	}
	/**
     * public getter
     *
     * 
     * Unique key to identify the response that matches this recommendation request container.
     * Use this key to distinguish between responses when multiple
     * recommendation containers are specified (i.e., for batch requests).
     * You define the key. To be useful, each correlation ID should be unique within
     * the same call. That is, define a different correlation ID for each recommendation
     * request container. (eBay does not validate the uniqueness of these IDs.)
     * If specified, the same correlation ID will be returned in the corresponding
     * recommendation response (or error response).
     * We recommend that you use this when retrieving recommendations for multiple items at once.
     * 
     *
     * @returns java.lang.String
	 */
	public String getCorrelationID() {
	    return this.correlationID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Unique key to identify the response that matches this recommendation request container.
     * Use this key to distinguish between responses when multiple
     * recommendation containers are specified (i.e., for batch requests).
     * You define the key. To be useful, each correlation ID should be unique within
     * the same call. That is, define a different correlation ID for each recommendation
     * request container. (eBay does not validate the uniqueness of these IDs.)
     * If specified, the same correlation ID will be returned in the corresponding
     * recommendation response (or error response).
     * We recommend that you use this when retrieving recommendations for multiple items at once.
     * 
     *
     * @param java.lang.String
	 */
	public void setCorrelationID(String correlationID) {
	    this.correlationID = correlationID;
	}
	/**
     * public getter
     *
     * 
     * Specifies the name of the field to remove from a listing.
     * Applicable when the ListingFlow is ReviseItem or RelistItem.
     * See ReviseItem and RelistItem for applicable values.
     * 
     *
     * @returns java.util.List<java.lang.String>
	 */
	public List<String> getDeletedField() {
	    return this.deletedField;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the name of the field to remove from a listing.
     * Applicable when the ListingFlow is ReviseItem or RelistItem.
     * See ReviseItem and RelistItem for applicable values.
     * 
     *
     * @param java.util.List<java.lang.String>
	 */
	public void setDeletedField(List<String> deletedField) {
	    this.deletedField = deletedField;
	}
	/**
     * public getter
     *
     * 
     * If true, the Relationship node is not returned for any 
     * recommendations. Relationship recommendations tell you whether 
     * an Item Specific value has a logical dependency on another 
     * Item Specific.<br>
     * <br>
     * For example, in a clothing category, Size Type could be 
     * recommended as a parent of Size, because Size=Small would 
     * mean something different to buyers depending on whether 
     * Size Type=Petite or Size Type=Plus.<br>
     * <br>
     * In general, it is a good idea to retrieve and use relationship 
     * recommendations, as this data can help buyers find the items
     * they want more easily.<br>
     * <br>
     * Only applicable when RecommendationEngine=ItemSpecifics.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getExcludeRelationships() {
	    return this.excludeRelationships;
	}
	
	/**
	 * public setter
	 *
     * 
     * If true, the Relationship node is not returned for any 
     * recommendations. Relationship recommendations tell you whether 
     * an Item Specific value has a logical dependency on another 
     * Item Specific.<br>
     * <br>
     * For example, in a clothing category, Size Type could be 
     * recommended as a parent of Size, because Size=Small would 
     * mean something different to buyers depending on whether 
     * Size Type=Petite or Size Type=Plus.<br>
     * <br>
     * In general, it is a good idea to retrieve and use relationship 
     * recommendations, as this data can help buyers find the items
     * they want more easily.<br>
     * <br>
     * Only applicable when RecommendationEngine=ItemSpecifics.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setExcludeRelationships(Boolean excludeRelationships) {
	    this.excludeRelationships = excludeRelationships;
	}
	/**
     * public getter
     *
     * 
     * If true, returns eBay's level of confidence for each 
     * name and value. Some sellers may find this useful when choosing
     * whether to use eBay's recommendation or their own name or value.
     * <br>
     * <br>
     * Only applicable when RecommendationEngine=ItemSpecifics.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getIncludeConfidence() {
	    return this.includeConfidence;
	}
	
	/**
	 * public setter
	 *
     * 
     * If true, returns eBay's level of confidence for each 
     * name and value. Some sellers may find this useful when choosing
     * whether to use eBay's recommendation or their own name or value.
     * <br>
     * <br>
     * Only applicable when RecommendationEngine=ItemSpecifics.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setIncludeConfidence(Boolean includeConfidence) {
	    this.includeConfidence = includeConfidence;
	}

}