// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.Date;

/**
 * 
 * Retrieves the orders for which the authenticated user is a participant, either as the buyer
 * or the seller.&nbsp;<b>Also for Half.com</b>. The call returns all the
 * orders that meet the request specifications.
 * 
 */
@RootElement(name = "GetOrdersRequest", namespace = "urn:ebay:apis:eBLBaseComponents")
public class GetOrdersRequestType extends AbstractRequestType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "OrderIDArray")
	private OrderIDArrayType orderIDArray;
	
	@Element(name = "CreateTimeFrom")
	private Date createTimeFrom;
	
	@Element(name = "CreateTimeTo")
	private Date createTimeTo;
	
	@Element(name = "OrderRole")
	private TradingRoleCodeType orderRole;
	
	@Element(name = "OrderStatus")
	private OrderStatusCodeType orderStatus;
	
	@Element(name = "ListingType")
	private ListingTypeCodeType listingType;
	
	@Element(name = "Pagination")
	private PaginationType pagination;
	
	@Element(name = "ModTimeFrom")
	private Date modTimeFrom;
	
	@Element(name = "ModTimeTo")
	private Date modTimeTo;
	
	@Element(name = "NumberOfDays")
	private Integer numberOfDays;
	
	@Element(name = "IncludeFinalValueFee")
	private Boolean includeFinalValueFee;
	
    
	/**
     * public getter
     *
     * 
     * A container for eBay order IDs. If one or more order IDs are specified in this
     * container, no other call-specific input fields are applicable.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.OrderIDArrayType
	 */
	public OrderIDArrayType getOrderIDArray() {
	    return this.orderIDArray;
	}
	
	/**
	 * public setter
	 *
     * 
     * A container for eBay order IDs. If one or more order IDs are specified in this
     * container, no other call-specific input fields are applicable.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.OrderIDArrayType
	 */
	public void setOrderIDArray(OrderIDArrayType orderIDArray) {
	    this.orderIDArray = orderIDArray;
	}
	/**
     * public getter
     *
     * 
     * The CreateTimeFrom and CreateTimeTo fields specify a date range for retrieving
     * orders. The CreateTimeFrom field is the starting date range. All eBay orders
     * that were created within this date range are returned in the output. The maximum
     * date range that may be specified with the CreateTimeFrom and CreateTimeTo fields
     * is 90 days. CreateTimeFrom/CreateTimeTo date filters are ignored if the
     * NumberOfDays date filter is used in the request, or if one or more order IDs are
     * passed in the request.
     * <br>
     * Applicable to Half.com.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getCreateTimeFrom() {
	    return this.createTimeFrom;
	}
	
	/**
	 * public setter
	 *
     * 
     * The CreateTimeFrom and CreateTimeTo fields specify a date range for retrieving
     * orders. The CreateTimeFrom field is the starting date range. All eBay orders
     * that were created within this date range are returned in the output. The maximum
     * date range that may be specified with the CreateTimeFrom and CreateTimeTo fields
     * is 90 days. CreateTimeFrom/CreateTimeTo date filters are ignored if the
     * NumberOfDays date filter is used in the request, or if one or more order IDs are
     * passed in the request.
     * <br>
     * Applicable to Half.com.
     * 
     *
     * @param java.util.Date
	 */
	public void setCreateTimeFrom(Date createTimeFrom) {
	    this.createTimeFrom = createTimeFrom;
	}
	/**
     * public getter
     *
     * 
     * The CreateTimeFrom and CreateTimeTo fields specify a date range for retrieving
     * orders. The CreateTimeTo field is the ending date range. All eBay orders that were
     * created within this date range are returned in the output. The maximum
     * date range that may be specified with the CreateTimeFrom and CreateTimeTo fields
     * is 90 days. If the CreateTimeFrom field is used and the
     * CreateTimeTo field is omitted, the "TimeTo" value defaults to the present time or
     * to 90 days past the CreateTimeFrom value (if CreateTimeFrom value is more than 90
     * days in the past). CreateTimeFrom/CreateTimeTo date filters are ignored if the
     * NumberOfDays date filter is used in the request, or if one or more order IDs are
     * passed in the request.
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * If a GetOrders call is made within a few seconds after the creation of a multiple
     * line item order, the caller runs the risk of retrieiving orders that are in an
     * inconsistent state, since the order consolidation involved in a multi-line item order
     * may not have been completed. For
     * this reason, it is recommended that sellers include the
     * <b>CreateTimeTo</b> field in the call, and set its value to: <i>
     * Current Time</i> - 2 minutes.
     * <br><br>
     * Applicable to Half.com.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getCreateTimeTo() {
	    return this.createTimeTo;
	}
	
	/**
	 * public setter
	 *
     * 
     * The CreateTimeFrom and CreateTimeTo fields specify a date range for retrieving
     * orders. The CreateTimeTo field is the ending date range. All eBay orders that were
     * created within this date range are returned in the output. The maximum
     * date range that may be specified with the CreateTimeFrom and CreateTimeTo fields
     * is 90 days. If the CreateTimeFrom field is used and the
     * CreateTimeTo field is omitted, the "TimeTo" value defaults to the present time or
     * to 90 days past the CreateTimeFrom value (if CreateTimeFrom value is more than 90
     * days in the past). CreateTimeFrom/CreateTimeTo date filters are ignored if the
     * NumberOfDays date filter is used in the request, or if one or more order IDs are
     * passed in the request.
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * If a GetOrders call is made within a few seconds after the creation of a multiple
     * line item order, the caller runs the risk of retrieiving orders that are in an
     * inconsistent state, since the order consolidation involved in a multi-line item order
     * may not have been completed. For
     * this reason, it is recommended that sellers include the
     * <b>CreateTimeTo</b> field in the call, and set its value to: <i>
     * Current Time</i> - 2 minutes.
     * <br><br>
     * Applicable to Half.com.
     * 
     *
     * @param java.util.Date
	 */
	public void setCreateTimeTo(Date createTimeTo) {
	    this.createTimeTo = createTimeTo;
	}
	/**
     * public getter
     *
     * 
     * Filters the returned orders based on the role of the user. The user's role is
     * either buyer or seller. If this field is used with a date filter, returned orders
     * must satisfy both the date range and the OrderRole value.
     * <br>
     * Applicable to eBay.com and Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.TradingRoleCodeType
	 */
	public TradingRoleCodeType getOrderRole() {
	    return this.orderRole;
	}
	
	/**
	 * public setter
	 *
     * 
     * Filters the returned orders based on the role of the user. The user's role is
     * either buyer or seller. If this field is used with a date filter, returned orders
     * must satisfy both the date range and the OrderRole value.
     * <br>
     * Applicable to eBay.com and Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.TradingRoleCodeType
	 */
	public void setOrderRole(TradingRoleCodeType orderRole) {
	    this.orderRole = orderRole;
	}
	/**
     * public getter
     *
     * 
     * Filters the returned orders by order status. For eBay orders, only the Active and
     * Completed values are applicable. The Shipping value can be used for Half.com
     * orders. If this field is used with a date filter, returned orders
     * must satisfy both the date range and the OrderStatus value.
     * <br><br>
     * To retrieve orders with a status of Inactive or Cancelled, you must specify
     * the order IDs (OrderIDArray.OrderID). When you specify order IDs, no
     * other filters may be used.
     * <br><br>
     * For Half.com, you can get some, but not all orders.
     * Orders on Half.com have different order status values from
     * eBay orders. When you set ListingType to Half, set OrderStatus
     * to Shipped. Otherwise, GetOrders may return incomplete information
     * or have indeterminate results.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.OrderStatusCodeType
	 */
	public OrderStatusCodeType getOrderStatus() {
	    return this.orderStatus;
	}
	
	/**
	 * public setter
	 *
     * 
     * Filters the returned orders by order status. For eBay orders, only the Active and
     * Completed values are applicable. The Shipping value can be used for Half.com
     * orders. If this field is used with a date filter, returned orders
     * must satisfy both the date range and the OrderStatus value.
     * <br><br>
     * To retrieve orders with a status of Inactive or Cancelled, you must specify
     * the order IDs (OrderIDArray.OrderID). When you specify order IDs, no
     * other filters may be used.
     * <br><br>
     * For Half.com, you can get some, but not all orders.
     * Orders on Half.com have different order status values from
     * eBay orders. When you set ListingType to Half, set OrderStatus
     * to Shipped. Otherwise, GetOrders may return incomplete information
     * or have indeterminate results.
     * 
     *
     * @param ebay.apis.eblbasecomponents.OrderStatusCodeType
	 */
	public void setOrderStatus(OrderStatusCodeType orderStatus) {
	    this.orderStatus = orderStatus;
	}
	/**
     * public getter
     *
     * 
     * Specify Half to retrieve Half.com orders.
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * Do not use this field if you are retrieving eBay orders.
     * <br><br>
     * This field cannnot be used as a listing type filter on eBay.com. If not
     * provided, or if you specify any value other than Half, this field has
     * no useful effect and the call retrieves eBay orders of all types. Also,
     * you can't retrieve both eBay and Half.com orders in the same response.
     * </span>
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ListingTypeCodeType
	 */
	public ListingTypeCodeType getListingType() {
	    return this.listingType;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specify Half to retrieve Half.com orders.
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * Do not use this field if you are retrieving eBay orders.
     * <br><br>
     * This field cannnot be used as a listing type filter on eBay.com. If not
     * provided, or if you specify any value other than Half, this field has
     * no useful effect and the call retrieves eBay orders of all types. Also,
     * you can't retrieve both eBay and Half.com orders in the same response.
     * </span>
     * 
     *
     * @param ebay.apis.eblbasecomponents.ListingTypeCodeType
	 */
	public void setListingType(ListingTypeCodeType listingType) {
	    this.listingType = listingType;
	}
	/**
     * public getter
     *
     * 
     * If many orders are
     * available to retrieve, you may need to call GetOrders multiple times to retrieve all
     * the data. Each result set is returned as a page of entries. Use the
     * Pagination filters to control the maximum number of entries to
     * retrieve per page (i.e., per call), the page number to retrieve, and
     * other data.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.PaginationType
	 */
	public PaginationType getPagination() {
	    return this.pagination;
	}
	
	/**
	 * public setter
	 *
     * 
     * If many orders are
     * available to retrieve, you may need to call GetOrders multiple times to retrieve all
     * the data. Each result set is returned as a page of entries. Use the
     * Pagination filters to control the maximum number of entries to
     * retrieve per page (i.e., per call), the page number to retrieve, and
     * other data.
     * 
     *
     * @param ebay.apis.eblbasecomponents.PaginationType
	 */
	public void setPagination(PaginationType pagination) {
	    this.pagination = pagination;
	}
	/**
     * public getter
     *
     * 
     * The ModTimeFrom and ModTimeTo fields specify a date range for retrieving
     * existing orders that have been modified within this time window (for example,
     * 'Incomplete' status to 'Pending' status or 'Pending' status to 'Complete' status). The
     * ModTimeFrom field is the starting date range. All eBay orders that were last
     * modified within this date range are returned in the output. The maximum date
     * range that may be specified with the ModTimeFrom and ModTimeTo fields is 30
     * days. ModTimeFrom/ModTimeTo date filters are ignored if the
     * CreateTimeFrom/CreateTimeTo or NumberOfDays date filters are used in the
     * request, or if one or more order IDs are passed in the request.
     * <br><br>
     * Applicable to Half.com.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getModTimeFrom() {
	    return this.modTimeFrom;
	}
	
	/**
	 * public setter
	 *
     * 
     * The ModTimeFrom and ModTimeTo fields specify a date range for retrieving
     * existing orders that have been modified within this time window (for example,
     * 'Incomplete' status to 'Pending' status or 'Pending' status to 'Complete' status). The
     * ModTimeFrom field is the starting date range. All eBay orders that were last
     * modified within this date range are returned in the output. The maximum date
     * range that may be specified with the ModTimeFrom and ModTimeTo fields is 30
     * days. ModTimeFrom/ModTimeTo date filters are ignored if the
     * CreateTimeFrom/CreateTimeTo or NumberOfDays date filters are used in the
     * request, or if one or more order IDs are passed in the request.
     * <br><br>
     * Applicable to Half.com.
     * 
     *
     * @param java.util.Date
	 */
	public void setModTimeFrom(Date modTimeFrom) {
	    this.modTimeFrom = modTimeFrom;
	}
	/**
     * public getter
     *
     * 
     * The ModTimeFrom and ModTimeTo fields specify a date range for retrieving
     * existing orders that have been modified within this time window (for example,
     * 'Incomplete' status to 'Pending' status or 'Pending' status to 'Complete'
     * status). The ModTimeTo field is the ending date range. All eBay orders that were
     * last modified within this date range are returned in the output. The maximum
     * date range that may be specified with the ModTimeFrom and ModTimeTo fields is 30
     * days. If the ModTimeFrom field is used and the ModTimeTo field is omitted, the
     * "TimeTo" value defaults to the present time (if ModTimeFrom value is less than
     * 30 days in the past) or to 30 days past the ModTimeFrom value.
     * ModTimeFrom/ModTimeTo date filters are ignored if the
     * CreateTimeFrom/CreateTimeTo or NumberOfDays date filters are used in the
     * request, or if one or more order IDs are passed in the request.
     * <br><br>
     * Applicable to Half.com.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getModTimeTo() {
	    return this.modTimeTo;
	}
	
	/**
	 * public setter
	 *
     * 
     * The ModTimeFrom and ModTimeTo fields specify a date range for retrieving
     * existing orders that have been modified within this time window (for example,
     * 'Incomplete' status to 'Pending' status or 'Pending' status to 'Complete'
     * status). The ModTimeTo field is the ending date range. All eBay orders that were
     * last modified within this date range are returned in the output. The maximum
     * date range that may be specified with the ModTimeFrom and ModTimeTo fields is 30
     * days. If the ModTimeFrom field is used and the ModTimeTo field is omitted, the
     * "TimeTo" value defaults to the present time (if ModTimeFrom value is less than
     * 30 days in the past) or to 30 days past the ModTimeFrom value.
     * ModTimeFrom/ModTimeTo date filters are ignored if the
     * CreateTimeFrom/CreateTimeTo or NumberOfDays date filters are used in the
     * request, or if one or more order IDs are passed in the request.
     * <br><br>
     * Applicable to Half.com.
     * 
     *
     * @param java.util.Date
	 */
	public void setModTimeTo(Date modTimeTo) {
	    this.modTimeTo = modTimeTo;
	}
	/**
     * public getter
     *
     * 
     * This filter specifies the number of days (24-hour periods) in the past to search
     * for orders. All eBay orders that were either created or modified within this
     * period are returned in the output. This field cannot be used in conjunction with
     * the CreateTimeFrom/CreateTimeTo or ModTimeFrom/ModTimeTo date filters. This date 
     * filter is ignored if one or more order IDs are passed in the request.
     * <br><br>
     * Applicable to Half.com.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getNumberOfDays() {
	    return this.numberOfDays;
	}
	
	/**
	 * public setter
	 *
     * 
     * This filter specifies the number of days (24-hour periods) in the past to search
     * for orders. All eBay orders that were either created or modified within this
     * period are returned in the output. This field cannot be used in conjunction with
     * the CreateTimeFrom/CreateTimeTo or ModTimeFrom/ModTimeTo date filters. This date 
     * filter is ignored if one or more order IDs are passed in the request.
     * <br><br>
     * Applicable to Half.com.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setNumberOfDays(Integer numberOfDays) {
	    this.numberOfDays = numberOfDays;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether to include the Final Value Fee (FVF) for all Transaction objects in the
     * response. The Final Value Fee is returned in Transaction.FinalValueFee. The Final
     * Value Fee is assessed right after the creation of an eBay order line item.
     * <br>
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getIncludeFinalValueFee() {
	    return this.includeFinalValueFee;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether to include the Final Value Fee (FVF) for all Transaction objects in the
     * response. The Final Value Fee is returned in Transaction.FinalValueFee. The Final
     * Value Fee is assessed right after the creation of an eBay order line item.
     * <br>
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setIncludeFinalValueFee(Boolean includeFinalValueFee) {
	    this.includeFinalValueFee = includeFinalValueFee;
	}

}