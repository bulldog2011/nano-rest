// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * Type defining the TaxDetails container, which consists of detailed sales tax
 *  information for an order line item, including the tax type and description, sales tax
 *  on the item cost, and sales tax related to shipping and handling. The information in
 *  this container supercedes/overrides the sales tax information in the
 *  ShippingDetails.SalesTax container.
 * 
 */
public class TaxDetailsType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "Imposition")
	private TaxTypeCodeType imposition;
	
	@Element(name = "TaxDescription")
	private TaxDescriptionCodeType taxDescription;
	
	@Element(name = "TaxAmount")
	private AmountType taxAmount;
	
	@Element(name = "TaxOnSubtotalAmount")
	private AmountType taxOnSubtotalAmount;
	
	@Element(name = "TaxOnShippingAmount")
	private AmountType taxOnShippingAmount;
	
	@Element(name = "TaxOnHandlingAmount")
	private AmountType taxOnHandlingAmount;
	
    
	/**
     * public getter
     *
     * 
     * This field indicates the sales tax type. A separate TaxDetails container is
     * required for each unique imposition (tax type).
     * 
     *
     * @returns ebay.apis.eblbasecomponents.TaxTypeCodeType
	 */
	public TaxTypeCodeType getImposition() {
	    return this.imposition;
	}
	
	/**
	 * public setter
	 *
     * 
     * This field indicates the sales tax type. A separate TaxDetails container is
     * required for each unique imposition (tax type).
     * 
     *
     * @param ebay.apis.eblbasecomponents.TaxTypeCodeType
	 */
	public void setImposition(TaxTypeCodeType imposition) {
	    this.imposition = imposition;
	}
	/**
     * public getter
     *
     * 
     * This field indicates the description of the sales tax. 
     * 
     *
     * @returns ebay.apis.eblbasecomponents.TaxDescriptionCodeType
	 */
	public TaxDescriptionCodeType getTaxDescription() {
	    return this.taxDescription;
	}
	
	/**
	 * public setter
	 *
     * 
     * This field indicates the description of the sales tax. 
     * 
     *
     * @param ebay.apis.eblbasecomponents.TaxDescriptionCodeType
	 */
	public void setTaxDescription(TaxDescriptionCodeType taxDescription) {
	    this.taxDescription = taxDescription;
	}
	/**
     * public getter
     *
     * 
     * This value is the total amount of sales tax for the order line item for the
     * corresponding impositiion (tax type).
     * <br><br>
     * <b>TaxAmount</b> = <b>TaxOnSubtotalAmount</b> + <b>TaxOnShippingAmount</b> + <b>TaxOnHandlingAmount</b>
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getTaxAmount() {
	    return this.taxAmount;
	}
	
	/**
	 * public setter
	 *
     * 
     * This value is the total amount of sales tax for the order line item for the
     * corresponding impositiion (tax type).
     * <br><br>
     * <b>TaxAmount</b> = <b>TaxOnSubtotalAmount</b> + <b>TaxOnShippingAmount</b> + <b>TaxOnHandlingAmount</b>
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setTaxAmount(AmountType taxAmount) {
	    this.taxAmount = taxAmount;
	}
	/**
     * public getter
     *
     * 
     * This value is the amount of sales tax applied based on the unit cost of the
     * order line item for the corresponding impositiion (tax type).
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getTaxOnSubtotalAmount() {
	    return this.taxOnSubtotalAmount;
	}
	
	/**
	 * public setter
	 *
     * 
     * This value is the amount of sales tax applied based on the unit cost of the
     * order line item for the corresponding impositiion (tax type).
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setTaxOnSubtotalAmount(AmountType taxOnSubtotalAmount) {
	    this.taxOnSubtotalAmount = taxOnSubtotalAmount;
	}
	/**
     * public getter
     *
     * 
     * This value is the amount of sales tax applied based on shipping costs for the
     * order line item for the corresponding impositiion (tax type).
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getTaxOnShippingAmount() {
	    return this.taxOnShippingAmount;
	}
	
	/**
	 * public setter
	 *
     * 
     * This value is the amount of sales tax applied based on shipping costs for the
     * order line item for the corresponding impositiion (tax type).
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setTaxOnShippingAmount(AmountType taxOnShippingAmount) {
	    this.taxOnShippingAmount = taxOnShippingAmount;
	}
	/**
     * public getter
     *
     * 
     * This value is the amount of sales tax applied based on handling costs for the
     * order line item for the corresponding impositiion (tax type).
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getTaxOnHandlingAmount() {
	    return this.taxOnHandlingAmount;
	}
	
	/**
	 * public setter
	 *
     * 
     * This value is the amount of sales tax applied based on handling costs for the
     * order line item for the corresponding impositiion (tax type).
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setTaxOnHandlingAmount(AmountType taxOnHandlingAmount) {
	    this.taxOnHandlingAmount = taxOnHandlingAmount;
	}

}