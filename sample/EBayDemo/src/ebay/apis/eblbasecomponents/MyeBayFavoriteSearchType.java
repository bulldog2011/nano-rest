// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;
import java.util.Date;

/**
 * 
 * Characteristics of a saved My eBay Favorite Search.
 * 
 */
public class MyeBayFavoriteSearchType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "SearchName")
	private String searchName;
	
	@Element(name = "SearchQuery")
	private String searchQuery;
	
	@Element(name = "QueryKeywords")
	private String queryKeywords;
	
	@Element(name = "CategoryID")
	private String categoryID;
	
	@Element(name = "ItemSort")
	private SimpleItemSortCodeType itemSort;
	
	@Element(name = "SortOrder")
	private SortOrderCodeType sortOrder;
	
	@Element(name = "EndTimeFrom")
	private Date endTimeFrom;
	
	@Element(name = "EndTimeTo")
	private Date endTimeTo;
	
	@Element(name = "MaxDistance")
	private Integer maxDistance;
	
	@Element(name = "PostalCode")
	private String postalCode;
	
	@Element(name = "ItemType")
	private ItemTypeCodeType itemType;
	
	@Element(name = "PriceMax")
	private AmountType priceMax;
	
	@Element(name = "PriceMin")
	private AmountType priceMin;
	
	@Element(name = "Currency")
	private CurrencyCodeType currency;
	
	@Element(name = "BidCountMax")
	private Integer bidCountMax;
	
	@Element(name = "BidCountMin")
	private Integer bidCountMin;
	
	@Element(name = "SearchFlag")
	private List<SearchFlagCodeType> searchFlag;
	
	@Element(name = "PaymentMethod")
	private PaymentMethodSearchCodeType paymentMethod;
	
	@Element(name = "PreferredLocation")
	private PreferredLocationCodeType preferredLocation;
	
	@Element(name = "SellerID")
	private List<String> sellerID;
	
	@Element(name = "SellerIDExclude")
	private List<String> sellerIDExclude;
	
	@Element(name = "ItemsAvailableTo")
	private CountryCodeType itemsAvailableTo;
	
	@Element(name = "ItemsLocatedIn")
	private CountryCodeType itemsLocatedIn;
	
	@Element(name = "SellerBusinessType")
	private SellerBusinessCodeType sellerBusinessType;
	
	@Element(name = "Condition")
	private ItemConditionCodeType condition;
	
	@Element(name = "Quantity")
	private Integer quantity;
	
	@Element(name = "QuantityOperator")
	private QuantityOperatorCodeType quantityOperator;
	
    
	/**
     * public getter
     *
     * 
     * The name of a My eBay Favorite Search.
     * 
     *
     * @returns java.lang.String
	 */
	public String getSearchName() {
	    return this.searchName;
	}
	
	/**
	 * public setter
	 *
     * 
     * The name of a My eBay Favorite Search.
     * 
     *
     * @param java.lang.String
	 */
	public void setSearchName(String searchName) {
	    this.searchName = searchName;
	}
	/**
     * public getter
     *
     * 
     * The query string of a My eBay Favorite Search. You can paste this value, that is
     * returned as a URL, into a browser to re-play the Favorite Search using the Trading
     * Web Service.
     * 
     *
     * @returns java.lang.String
	 */
	public String getSearchQuery() {
	    return this.searchQuery;
	}
	
	/**
	 * public setter
	 *
     * 
     * The query string of a My eBay Favorite Search. You can paste this value, that is
     * returned as a URL, into a browser to re-play the Favorite Search using the Trading
     * Web Service.
     * 
     *
     * @param java.lang.String
	 */
	public void setSearchQuery(String searchQuery) {
	    this.searchQuery = searchQuery;
	}
	/**
     * public getter
     *
     * 
     * The QueryKeywords of a My eBay Favorite Search. A search that uses QueryKeywords is a
     * query that specifies a string for searching titles of items on
     * eBay.<br><br> If you are using a URL, then to search for multiple words,
     * use "%20". For example, use Harry%20Potter to search for items containing those words
     * in any order.
     * <br><br>
     * You can incorporate wildcards into a multi-word search, as in the following:
     * ap*%20ip*.<br><br> The words "and" and "or" are treated like any other
     * word. Only use "and", "or", or "the" if you are searching for listings containing
     * these words.
     * 
     *
     * @returns java.lang.String
	 */
	public String getQueryKeywords() {
	    return this.queryKeywords;
	}
	
	/**
	 * public setter
	 *
     * 
     * The QueryKeywords of a My eBay Favorite Search. A search that uses QueryKeywords is a
     * query that specifies a string for searching titles of items on
     * eBay.<br><br> If you are using a URL, then to search for multiple words,
     * use "%20". For example, use Harry%20Potter to search for items containing those words
     * in any order.
     * <br><br>
     * You can incorporate wildcards into a multi-word search, as in the following:
     * ap*%20ip*.<br><br> The words "and" and "or" are treated like any other
     * word. Only use "and", "or", or "the" if you are searching for listings containing
     * these words.
     * 
     *
     * @param java.lang.String
	 */
	public void setQueryKeywords(String queryKeywords) {
	    this.queryKeywords = queryKeywords;
	}
	/**
     * public getter
     *
     * 
     * The CategoryID of a My eBay Favorite Search. CategoryID is used to
     * restrict the query to a specific category. CategoryID cannot be used
     * with the following input fields: EndTimeFrom, EndTimeTo, PriceMin, or PriceMax.
     * 
     *
     * @returns java.lang.String
	 */
	public String getCategoryID() {
	    return this.categoryID;
	}
	
	/**
	 * public setter
	 *
     * 
     * The CategoryID of a My eBay Favorite Search. CategoryID is used to
     * restrict the query to a specific category. CategoryID cannot be used
     * with the following input fields: EndTimeFrom, EndTimeTo, PriceMin, or PriceMax.
     * 
     *
     * @param java.lang.String
	 */
	public void setCategoryID(String categoryID) {
	    this.categoryID = categoryID;
	}
	/**
     * public getter
     *
     * 
     * The ItemSort of a My eBay Favorite Search. Values for ItemSort include
     * Best Match, EndTime, Distance, and other options listed in SimpleItemSortCodeType.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SimpleItemSortCodeType
	 */
	public SimpleItemSortCodeType getItemSort() {
	    return this.itemSort;
	}
	
	/**
	 * public setter
	 *
     * 
     * The ItemSort of a My eBay Favorite Search. Values for ItemSort include
     * Best Match, EndTime, Distance, and other options listed in SimpleItemSortCodeType.
     * 
     *
     * @param ebay.apis.eblbasecomponents.SimpleItemSortCodeType
	 */
	public void setItemSort(SimpleItemSortCodeType itemSort) {
	    this.itemSort = itemSort;
	}
	/**
     * public getter
     *
     * 
     * The SortOrder of a My eBay Favorite Search. This value specifies whether you want to
     * sort search results in ascending or descending order, in conjunction with the value
     * you specify in ItemSort.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SortOrderCodeType
	 */
	public SortOrderCodeType getSortOrder() {
	    return this.sortOrder;
	}
	
	/**
	 * public setter
	 *
     * 
     * The SortOrder of a My eBay Favorite Search. This value specifies whether you want to
     * sort search results in ascending or descending order, in conjunction with the value
     * you specify in ItemSort.
     * 
     *
     * @param ebay.apis.eblbasecomponents.SortOrderCodeType
	 */
	public void setSortOrder(SortOrderCodeType sortOrder) {
	    this.sortOrder = sortOrder;
	}
	/**
     * public getter
     *
     * 
     * The EndTimeFrom of a My eBay Favorite Search. EndTimeFrom and EndTimeTo limit the
     * results to items ending within a time range. EndTimeFrom specifies the beginning of
     * the time range.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getEndTimeFrom() {
	    return this.endTimeFrom;
	}
	
	/**
	 * public setter
	 *
     * 
     * The EndTimeFrom of a My eBay Favorite Search. EndTimeFrom and EndTimeTo limit the
     * results to items ending within a time range. EndTimeFrom specifies the beginning of
     * the time range.
     * 
     *
     * @param java.util.Date
	 */
	public void setEndTimeFrom(Date endTimeFrom) {
	    this.endTimeFrom = endTimeFrom;
	}
	/**
     * public getter
     *
     * 
     * The EndTimeTo of a My eBay Favorite Search. EndTimeFrom and EndTimeTo limit the
     * results to items ending within a time range. EndTimeTo specifies the end of the time
     * range.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getEndTimeTo() {
	    return this.endTimeTo;
	}
	
	/**
	 * public setter
	 *
     * 
     * The EndTimeTo of a My eBay Favorite Search. EndTimeFrom and EndTimeTo limit the
     * results to items ending within a time range. EndTimeTo specifies the end of the time
     * range.
     * 
     *
     * @param java.util.Date
	 */
	public void setEndTimeTo(Date endTimeTo) {
	    this.endTimeTo = endTimeTo;
	}
	/**
     * public getter
     *
     * 
     * The MaxDistance of a My eBay Favorite Search. This is the maximum distance from the
     * item-location value specified in PostalCode.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getMaxDistance() {
	    return this.maxDistance;
	}
	
	/**
	 * public setter
	 *
     * 
     * The MaxDistance of a My eBay Favorite Search. This is the maximum distance from the
     * item-location value specified in PostalCode.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setMaxDistance(Integer maxDistance) {
	    this.maxDistance = maxDistance;
	}
	/**
     * public getter
     *
     * 
     * The PostalCode of a My eBay Favorite Search. This value indicates the
     * postal code where an item is located.
     * 
     *
     * @returns java.lang.String
	 */
	public String getPostalCode() {
	    return this.postalCode;
	}
	
	/**
	 * public setter
	 *
     * 
     * The PostalCode of a My eBay Favorite Search. This value indicates the
     * postal code where an item is located.
     * 
     *
     * @param java.lang.String
	 */
	public void setPostalCode(String postalCode) {
	    this.postalCode = postalCode;
	}
	/**
     * public getter
     *
     * 
     * The ItemType of a My eBay Favorite Search. Setting ItemType in a search
     * limits the results to items of a specific type, such as Fixed Price items,
     * Store Inventory items, items with AdFormat, etc.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ItemTypeCodeType
	 */
	public ItemTypeCodeType getItemType() {
	    return this.itemType;
	}
	
	/**
	 * public setter
	 *
     * 
     * The ItemType of a My eBay Favorite Search. Setting ItemType in a search
     * limits the results to items of a specific type, such as Fixed Price items,
     * Store Inventory items, items with AdFormat, etc.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ItemTypeCodeType
	 */
	public void setItemType(ItemTypeCodeType itemType) {
	    this.itemType = itemType;
	}
	/**
     * public getter
     *
     * 
     * The PriceMax of a My eBay Favorite Search. PriceMax specifies
     * the maximum current price an item can have to be included in
     * the search results. PriceMax can be used with PriceMin to specify
     * a range of prices.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getPriceMax() {
	    return this.priceMax;
	}
	
	/**
	 * public setter
	 *
     * 
     * The PriceMax of a My eBay Favorite Search. PriceMax specifies
     * the maximum current price an item can have to be included in
     * the search results. PriceMax can be used with PriceMin to specify
     * a range of prices.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setPriceMax(AmountType priceMax) {
	    this.priceMax = priceMax;
	}
	/**
     * public getter
     *
     * 
     * The PriceMin of a My eBay Favorite Search. PriceMin specifies the
     * minimum current price an item listing can have to be included in
     * the search results. PriceMin can be used with PriceMax to specify
     * a range of prices.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getPriceMin() {
	    return this.priceMin;
	}
	
	/**
	 * public setter
	 *
     * 
     * The PriceMin of a My eBay Favorite Search. PriceMin specifies the
     * minimum current price an item listing can have to be included in
     * the search results. PriceMin can be used with PriceMax to specify
     * a range of prices.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setPriceMin(AmountType priceMin) {
	    this.priceMin = priceMin;
	}
	/**
     * public getter
     *
     * 
     * The Currency of a My eBay Favorite Search. The currency value limits
     * the result set to just those items with a specified currency.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.CurrencyCodeType
	 */
	public CurrencyCodeType getCurrency() {
	    return this.currency;
	}
	
	/**
	 * public setter
	 *
     * 
     * The Currency of a My eBay Favorite Search. The currency value limits
     * the result set to just those items with a specified currency.
     * 
     *
     * @param ebay.apis.eblbasecomponents.CurrencyCodeType
	 */
	public void setCurrency(CurrencyCodeType currency) {
	    this.currency = currency;
	}
	/**
     * public getter
     *
     * 
     * The BidCountMax value in a My eBay Favorite Search. The BidCountMax limits the search
     * results to items with a maximum number of bids.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getBidCountMax() {
	    return this.bidCountMax;
	}
	
	/**
	 * public setter
	 *
     * 
     * The BidCountMax value in a My eBay Favorite Search. The BidCountMax limits the search
     * results to items with a maximum number of bids.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setBidCountMax(Integer bidCountMax) {
	    this.bidCountMax = bidCountMax;
	}
	/**
     * public getter
     *
     * 
     * The BidCountMin value in a My eBay Favorite Search. The BidCountMin limits the
     * results of a search to items with a maximum number of bids.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getBidCountMin() {
	    return this.bidCountMin;
	}
	
	/**
	 * public setter
	 *
     * 
     * The BidCountMin value in a My eBay Favorite Search. The BidCountMin limits the
     * results of a search to items with a maximum number of bids.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setBidCountMin(Integer bidCountMin) {
	    this.bidCountMin = bidCountMin;
	}
	/**
     * public getter
     *
     * 
     * The SearchFlag value in a My eBay Favorite Search. The SearchFlag allows you to
     * specify whether you want to include charity listings, free-shipping listings, and
     * listings with other features in your search.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.SearchFlagCodeType>
	 */
	public List<SearchFlagCodeType> getSearchFlag() {
	    return this.searchFlag;
	}
	
	/**
	 * public setter
	 *
     * 
     * The SearchFlag value in a My eBay Favorite Search. The SearchFlag allows you to
     * specify whether you want to include charity listings, free-shipping listings, and
     * listings with other features in your search.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.SearchFlagCodeType>
	 */
	public void setSearchFlag(List<SearchFlagCodeType> searchFlag) {
	    this.searchFlag = searchFlag;
	}
	/**
     * public getter
     *
     * 
     * The PaymentMethod value in a My eBay Favorite Search. The PaymentMethod limits the
     * search results to items that accept a specific payment method or methods.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.PaymentMethodSearchCodeType
	 */
	public PaymentMethodSearchCodeType getPaymentMethod() {
	    return this.paymentMethod;
	}
	
	/**
	 * public setter
	 *
     * 
     * The PaymentMethod value in a My eBay Favorite Search. The PaymentMethod limits the
     * search results to items that accept a specific payment method or methods.
     * 
     *
     * @param ebay.apis.eblbasecomponents.PaymentMethodSearchCodeType
	 */
	public void setPaymentMethod(PaymentMethodSearchCodeType paymentMethod) {
	    this.paymentMethod = paymentMethod;
	}
	/**
     * public getter
     *
     * 
     * The PreferredLocation value of a My eBay Favorite Search. The PreferredLocation
     * specifies the criteria for filtering search results by site, where site is determined
     * by the site ID in the request.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.PreferredLocationCodeType
	 */
	public PreferredLocationCodeType getPreferredLocation() {
	    return this.preferredLocation;
	}
	
	/**
	 * public setter
	 *
     * 
     * The PreferredLocation value of a My eBay Favorite Search. The PreferredLocation
     * specifies the criteria for filtering search results by site, where site is determined
     * by the site ID in the request.
     * 
     *
     * @param ebay.apis.eblbasecomponents.PreferredLocationCodeType
	 */
	public void setPreferredLocation(PreferredLocationCodeType preferredLocation) {
	    this.preferredLocation = preferredLocation;
	}
	/**
     * public getter
     *
     * 
     * The SellerID value in a My eBay Favorite Search. The SellerID is the eBay ID of a
     * specific seller.
     * 
     *
     * @returns java.util.List<java.lang.String>
	 */
	public List<String> getSellerID() {
	    return this.sellerID;
	}
	
	/**
	 * public setter
	 *
     * 
     * The SellerID value in a My eBay Favorite Search. The SellerID is the eBay ID of a
     * specific seller.
     * 
     *
     * @param java.util.List<java.lang.String>
	 */
	public void setSellerID(List<String> sellerID) {
	    this.sellerID = sellerID;
	}
	/**
     * public getter
     *
     * 
     * The SellerIDExclude value in a My eBay Favorite Search. The SellerIDExclude limits
     * the search results to exclude items sold by a specific seller or by specific sellers.
     * 
     *
     * @returns java.util.List<java.lang.String>
	 */
	public List<String> getSellerIDExclude() {
	    return this.sellerIDExclude;
	}
	
	/**
	 * public setter
	 *
     * 
     * The SellerIDExclude value in a My eBay Favorite Search. The SellerIDExclude limits
     * the search results to exclude items sold by a specific seller or by specific sellers.
     * 
     *
     * @param java.util.List<java.lang.String>
	 */
	public void setSellerIDExclude(List<String> sellerIDExclude) {
	    this.sellerIDExclude = sellerIDExclude;
	}
	/**
     * public getter
     *
     * 
     * The ItemsAvailableTo value in a My eBay Favorite Search. ItemsAvailableTo limits the
     * result set to just those items available to the specified country.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.CountryCodeType
	 */
	public CountryCodeType getItemsAvailableTo() {
	    return this.itemsAvailableTo;
	}
	
	/**
	 * public setter
	 *
     * 
     * The ItemsAvailableTo value in a My eBay Favorite Search. ItemsAvailableTo limits the
     * result set to just those items available to the specified country.
     * 
     *
     * @param ebay.apis.eblbasecomponents.CountryCodeType
	 */
	public void setItemsAvailableTo(CountryCodeType itemsAvailableTo) {
	    this.itemsAvailableTo = itemsAvailableTo;
	}
	/**
     * public getter
     *
     * 
     * The ItemsLocatedIn value in a My eBay Favorite Search. ItemsLocatedIn limits the
     * result set to just those items located in the specified country.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.CountryCodeType
	 */
	public CountryCodeType getItemsLocatedIn() {
	    return this.itemsLocatedIn;
	}
	
	/**
	 * public setter
	 *
     * 
     * The ItemsLocatedIn value in a My eBay Favorite Search. ItemsLocatedIn limits the
     * result set to just those items located in the specified country.
     * 
     *
     * @param ebay.apis.eblbasecomponents.CountryCodeType
	 */
	public void setItemsLocatedIn(CountryCodeType itemsLocatedIn) {
	    this.itemsLocatedIn = itemsLocatedIn;
	}
	/**
     * public getter
     *
     * 
     * The SellerBusinessType value in a My eBay Favorite Search. The SellerBusinessType
     * limits the search results to those of a particular seller business type such as
     * commercial or private. SellerBusinessType is only available for sites that have
     * business seller features enabled.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SellerBusinessCodeType
	 */
	public SellerBusinessCodeType getSellerBusinessType() {
	    return this.sellerBusinessType;
	}
	
	/**
	 * public setter
	 *
     * 
     * The SellerBusinessType value in a My eBay Favorite Search. The SellerBusinessType
     * limits the search results to those of a particular seller business type such as
     * commercial or private. SellerBusinessType is only available for sites that have
     * business seller features enabled.
     * 
     *
     * @param ebay.apis.eblbasecomponents.SellerBusinessCodeType
	 */
	public void setSellerBusinessType(SellerBusinessCodeType sellerBusinessType) {
	    this.sellerBusinessType = sellerBusinessType;
	}
	/**
     * public getter
     *
     * 
     * The Condition value in a My eBay Favorite Search. Condition limits the results to new
     * or used items, plus items that have no condition specified.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ItemConditionCodeType
	 */
	public ItemConditionCodeType getCondition() {
	    return this.condition;
	}
	
	/**
	 * public setter
	 *
     * 
     * The Condition value in a My eBay Favorite Search. Condition limits the results to new
     * or used items, plus items that have no condition specified.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ItemConditionCodeType
	 */
	public void setCondition(ItemConditionCodeType condition) {
	    this.condition = condition;
	}
	/**
     * public getter
     *
     * 
     * The Quantity value in a My eBay Favorite Search. The Quantity limits the search
     * results to listings that offer a certain number of items matching the query. The
     * Quantity field is used with QuantityOperator to specify that you are seeking listings
     * with quantities greater than, equal to, or less than the value you specify in
     * Quantity.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getQuantity() {
	    return this.quantity;
	}
	
	/**
	 * public setter
	 *
     * 
     * The Quantity value in a My eBay Favorite Search. The Quantity limits the search
     * results to listings that offer a certain number of items matching the query. The
     * Quantity field is used with QuantityOperator to specify that you are seeking listings
     * with quantities greater than, equal to, or less than the value you specify in
     * Quantity.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setQuantity(Integer quantity) {
	    this.quantity = quantity;
	}
	/**
     * public getter
     *
     * 
     * The Quantity Operator value in a My eBay Favorite Search. The Quantity Operator
     * limits the results to listings with quantities greater than, equal to, or less than
     * the value you specify in Quantity.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.QuantityOperatorCodeType
	 */
	public QuantityOperatorCodeType getQuantityOperator() {
	    return this.quantityOperator;
	}
	
	/**
	 * public setter
	 *
     * 
     * The Quantity Operator value in a My eBay Favorite Search. The Quantity Operator
     * limits the results to listings with quantities greater than, equal to, or less than
     * the value you specify in Quantity.
     * 
     *
     * @param ebay.apis.eblbasecomponents.QuantityOperatorCodeType
	 */
	public void setQuantityOperator(QuantityOperatorCodeType quantityOperator) {
	    this.quantityOperator = quantityOperator;
	}

}