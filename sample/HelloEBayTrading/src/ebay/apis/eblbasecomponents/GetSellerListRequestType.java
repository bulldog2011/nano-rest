// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.Date;

/**
 * 
 * Returns a list of the items posted by the authenticated user, including
 * the related item data.
 * 
 */
@RootElement(name = "GetSellerListRequest", namespace = "urn:ebay:apis:eBLBaseComponents")
public class GetSellerListRequestType extends AbstractRequestType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "UserID")
	private String userID;
	
	@Element(name = "MotorsDealerUsers")
	private UserIDArrayType motorsDealerUsers;
	
	@Element(name = "EndTimeFrom")
	private Date endTimeFrom;
	
	@Element(name = "EndTimeTo")
	private Date endTimeTo;
	
	@Element(name = "Sort")
	private Integer sort;
	
	@Element(name = "StartTimeFrom")
	private Date startTimeFrom;
	
	@Element(name = "StartTimeTo")
	private Date startTimeTo;
	
	@Element(name = "Pagination")
	private PaginationType pagination;
	
	@Element(name = "GranularityLevel")
	private GranularityLevelCodeType granularityLevel;
	
	@Element(name = "SKUArray")
	private SKUArrayType skuArray;
	
	@Element(name = "IncludeWatchCount")
	private Boolean includeWatchCount;
	
	@Element(name = "AdminEndedItemsOnly")
	private Boolean adminEndedItemsOnly;
	
	@Element(name = "CategoryID")
	private Integer categoryID;
	
	@Element(name = "IncludeVariations")
	private Boolean includeVariations;
	
    
	/**
     * public getter
     *
     * 
     * Specifies the seller whose items will be returned. UserID is an optional
     * input. If not specified, retrieves listings for the user identified by the
     * authentication token passed in the request. Note that since user
     * information is anonymous to everyone except the bidder and the seller
     * (during an active auction), only sellers looking for information about
     * their own listings and bidders who know the user IDs of their sellers will
     * be able to make this API call successfully. See <a href=
     * "http://developer.ebay.com/DevZone/XML/docs/WebHelp/index.htm?context=eBay_XML_API&topic=AnonymousUserInfo"
     * >Working with Anonymous User Information</a>in the eBay Web
     * Services Guide for more information.
     * 
     *
     * @returns java.lang.String
	 */
	public String getUserID() {
	    return this.userID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the seller whose items will be returned. UserID is an optional
     * input. If not specified, retrieves listings for the user identified by the
     * authentication token passed in the request. Note that since user
     * information is anonymous to everyone except the bidder and the seller
     * (during an active auction), only sellers looking for information about
     * their own listings and bidders who know the user IDs of their sellers will
     * be able to make this API call successfully. See <a href=
     * "http://developer.ebay.com/DevZone/XML/docs/WebHelp/index.htm?context=eBay_XML_API&topic=AnonymousUserInfo"
     * >Working with Anonymous User Information</a>in the eBay Web
     * Services Guide for more information.
     * 
     *
     * @param java.lang.String
	 */
	public void setUserID(String userID) {
	    this.userID = userID;
	}
	/**
     * public getter
     *
     * 
     * Specifies the list of Motors Dealer sellers for which a special set of
     * metrics can be requested. Applies to eBay Motors Pro applications only.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.UserIDArrayType
	 */
	public UserIDArrayType getMotorsDealerUsers() {
	    return this.motorsDealerUsers;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the list of Motors Dealer sellers for which a special set of
     * metrics can be requested. Applies to eBay Motors Pro applications only.
     * 
     *
     * @param ebay.apis.eblbasecomponents.UserIDArrayType
	 */
	public void setMotorsDealerUsers(UserIDArrayType motorsDealerUsers) {
	    this.motorsDealerUsers = motorsDealerUsers;
	}
	/**
     * public getter
     *
     * 
     * Specifies the earliest (oldest) date to use in a date range filter based on
     * item end time. Specify either an end-time range or a start-time range
     * filter in every call request. Each of the time ranges must be a value less than
     * 120 days.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getEndTimeFrom() {
	    return this.endTimeFrom;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the earliest (oldest) date to use in a date range filter based on
     * item end time. Specify either an end-time range or a start-time range
     * filter in every call request. Each of the time ranges must be a value less than
     * 120 days.
     * 
     *
     * @param java.util.Date
	 */
	public void setEndTimeFrom(Date endTimeFrom) {
	    this.endTimeFrom = endTimeFrom;
	}
	/**
     * public getter
     *
     * 
     * Specifies the latest (most recent) date to use in a date range filter based
     * on item end time. Must be specified if EndTimeFrom is specified.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getEndTimeTo() {
	    return this.endTimeTo;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the latest (most recent) date to use in a date range filter based
     * on item end time. Must be specified if EndTimeFrom is specified.
     * 
     *
     * @param java.util.Date
	 */
	public void setEndTimeTo(Date endTimeTo) {
	    this.endTimeTo = endTimeTo;
	}
	/**
     * public getter
     *
     * 
     * Specifies the order in which returned items are sorted (based on the end
     * dates of the item listings). Valid values:
     * <br>
     * 0 = No sorting<br>
     * 1 = Sort in descending order<br>
     * 2 = Sort in ascending order<br>
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getSort() {
	    return this.sort;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the order in which returned items are sorted (based on the end
     * dates of the item listings). Valid values:
     * <br>
     * 0 = No sorting<br>
     * 1 = Sort in descending order<br>
     * 2 = Sort in ascending order<br>
     * 
     *
     * @param java.lang.Integer
	 */
	public void setSort(Integer sort) {
	    this.sort = sort;
	}
	/**
     * public getter
     *
     * 
     * Specifies the earliest (oldest) date to use in a date range filter based on
     * item start time. Each of the time ranges must be a value less than
     * 120 days. In all calls, at least one date-range filter must be specified
     * (i.e., you must specify either the end time range or start time range
     * in every request).
     * 
     *
     * @returns java.util.Date
	 */
	public Date getStartTimeFrom() {
	    return this.startTimeFrom;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the earliest (oldest) date to use in a date range filter based on
     * item start time. Each of the time ranges must be a value less than
     * 120 days. In all calls, at least one date-range filter must be specified
     * (i.e., you must specify either the end time range or start time range
     * in every request).
     * 
     *
     * @param java.util.Date
	 */
	public void setStartTimeFrom(Date startTimeFrom) {
	    this.startTimeFrom = startTimeFrom;
	}
	/**
     * public getter
     *
     * 
     * Specifies the latest (most recent) date to use in a date range filter based
     * on item start time. Must be specified if StartTimeFrom is specified.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getStartTimeTo() {
	    return this.startTimeTo;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the latest (most recent) date to use in a date range filter based
     * on item start time. Must be specified if StartTimeFrom is specified.
     * 
     *
     * @param java.util.Date
	 */
	public void setStartTimeTo(Date startTimeTo) {
	    this.startTimeTo = startTimeTo;
	}
	/**
     * public getter
     *
     * 
     * Contains the data controlling the pagination of the returned values.
     * If you set a DetailLevel in this call, you must set pagination values.
     * The Pagination field contains
     * the number of items to be returned per page of data (per call),
     * and the page number to return with the current call.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.PaginationType
	 */
	public PaginationType getPagination() {
	    return this.pagination;
	}
	
	/**
	 * public setter
	 *
     * 
     * Contains the data controlling the pagination of the returned values.
     * If you set a DetailLevel in this call, you must set pagination values.
     * The Pagination field contains
     * the number of items to be returned per page of data (per call),
     * and the page number to return with the current call.
     * 
     *
     * @param ebay.apis.eblbasecomponents.PaginationType
	 */
	public void setPagination(PaginationType pagination) {
	    this.pagination = pagination;
	}
	/**
     * public getter
     *
     * 
     * Specifies the subset of item and user fields to return. See GetSellerList
     * in the eBay Web Services guide for a list of the fields that are returned
     * for each granularity level. For GetSellerList, use DetailLevel or
     * GranularityLevel in a request, but not both. For GetSellerList, if
     * GranularityLevel is specified, DetailLevel is ignored.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.GranularityLevelCodeType
	 */
	public GranularityLevelCodeType getGranularityLevel() {
	    return this.granularityLevel;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the subset of item and user fields to return. See GetSellerList
     * in the eBay Web Services guide for a list of the fields that are returned
     * for each granularity level. For GetSellerList, use DetailLevel or
     * GranularityLevel in a request, but not both. For GetSellerList, if
     * GranularityLevel is specified, DetailLevel is ignored.
     * 
     *
     * @param ebay.apis.eblbasecomponents.GranularityLevelCodeType
	 */
	public void setGranularityLevel(GranularityLevelCodeType granularityLevel) {
	    this.granularityLevel = granularityLevel;
	}
	/**
     * public getter
     *
     * 
     * Container for a set of SKUs.
     * Filters (reduces) the response to only include active listings
     * that the seller listed with any of the specified SKUs.
     * If multiple listings include the same SKU, they are
     * all returned (assuming they also match the other criteria
     * in the GetSellerList request).<br>
     * <br>
     * SKUArray can be used to retrieve items listed by the user
     * identified in AuthToken or in UserID.<br>
     * <br>
     * <span class="tablenote"><b>Note:</b>
     * Listings with matching SKUs are returned regardless of their
     * Item.InventoryTrackingMethod settings.
     * </span>
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SKUArrayType
	 */
	public SKUArrayType getSkuArray() {
	    return this.skuArray;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container for a set of SKUs.
     * Filters (reduces) the response to only include active listings
     * that the seller listed with any of the specified SKUs.
     * If multiple listings include the same SKU, they are
     * all returned (assuming they also match the other criteria
     * in the GetSellerList request).<br>
     * <br>
     * SKUArray can be used to retrieve items listed by the user
     * identified in AuthToken or in UserID.<br>
     * <br>
     * <span class="tablenote"><b>Note:</b>
     * Listings with matching SKUs are returned regardless of their
     * Item.InventoryTrackingMethod settings.
     * </span>
     * 
     *
     * @param ebay.apis.eblbasecomponents.SKUArrayType
	 */
	public void setSkuArray(SKUArrayType skuArray) {
	    this.skuArray = skuArray;
	}
	/**
     * public getter
     *
     * 
     * Specifies whether to include WatchCount in Item nodes returned.
     * WatchCount is only returned with DetailLevel ReturnAll.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getIncludeWatchCount() {
	    return this.includeWatchCount;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies whether to include WatchCount in Item nodes returned.
     * WatchCount is only returned with DetailLevel ReturnAll.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setIncludeWatchCount(Boolean includeWatchCount) {
	    this.includeWatchCount = includeWatchCount;
	}
	/**
     * public getter
     *
     * 
     * Specifies whether to return only items that were administratively ended
     * based on a policy violation.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getAdminEndedItemsOnly() {
	    return this.adminEndedItemsOnly;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies whether to return only items that were administratively ended
     * based on a policy violation.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setAdminEndedItemsOnly(Boolean adminEndedItemsOnly) {
	    this.adminEndedItemsOnly = adminEndedItemsOnly;
	}
	/**
     * public getter
     *
     * 
     * The category ID for the items retrieved.
     * If you specify CategoryID in a GetSellerList call,
     * the response contains only items in the category you specify.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getCategoryID() {
	    return this.categoryID;
	}
	
	/**
	 * public setter
	 *
     * 
     * The category ID for the items retrieved.
     * If you specify CategoryID in a GetSellerList call,
     * the response contains only items in the category you specify.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setCategoryID(Integer categoryID) {
	    this.categoryID = categoryID;
	}
	/**
     * public getter
     *
     * 
     * If true, the Variations node is returned for all multi-variation
     * listings in the response.<br>
     * <br>
     * Please note that if the seller includes a large number of
     * variations in many listings, using this flag may degrade the
     * call's performance. Therefore, when you use this flag, you
     * may need to reduce the total number of items you're requesting
     * at once.
     * For example, you may need to use shorter time ranges in the
     * EndTime or StartTime filters, fewer entries per page in
     * Pagination, and/or SKUArray.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getIncludeVariations() {
	    return this.includeVariations;
	}
	
	/**
	 * public setter
	 *
     * 
     * If true, the Variations node is returned for all multi-variation
     * listings in the response.<br>
     * <br>
     * Please note that if the seller includes a large number of
     * variations in many listings, using this flag may degrade the
     * call's performance. Therefore, when you use this flag, you
     * may need to reduce the total number of items you're requesting
     * at once.
     * For example, you may need to use shorter time ranges in the
     * EndTime or StartTime filters, fewer entries per page in
     * Pagination, and/or SKUArray.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setIncludeVariations(Boolean includeVariations) {
	    this.includeVariations = includeVariations;
	}

}