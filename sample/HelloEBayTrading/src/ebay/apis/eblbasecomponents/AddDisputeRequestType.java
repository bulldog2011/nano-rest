// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * This call enables a seller to create an Unpaid Item case against a buyer, or to cancel a
 * single line item order. 
 * <br/><br/>
 * <span class="tablenote"><b>Note:</b>
 * This call is only used by sellers to create an Unpaid Item cases or to mutually cancel a
 * single line item order. Buyers must use the eBay Resolution Center or PayPal Resolution 
 * Center (for orders that satisfy requirements) to create an Item Not Received or an Item
 * Significantly Not as Described case. 
 * </span>
 * 
 */
@RootElement(name = "AddDisputeRequest", namespace = "urn:ebay:apis:eBLBaseComponents")
public class AddDisputeRequestType extends AbstractRequestType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "DisputeExplanation")
	private DisputeExplanationCodeType disputeExplanation;
	
	@Element(name = "DisputeReason")
	private DisputeReasonCodeType disputeReason;
	
	@Element(name = "ItemID")
	private String itemID;
	
	@Element(name = "TransactionID")
	private String transactionID;
	
	@Element(name = "OrderLineItemID")
	private String orderLineItemID;
	
    
	/**
     * public getter
     *
     * 
     * This enumerated value gives the explanation of why the buyer or seller opened a
     * case (or why seller canceled an order line item). Not all values contained in 
     * <b>DisputeExplanationCodeType</b> are allowed in the 
     * <b>AddDispute</b> call, and the values that are allowed must match 
     * the <b>DisputeReason</b> value.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.DisputeExplanationCodeType
	 */
	public DisputeExplanationCodeType getDisputeExplanation() {
	    return this.disputeExplanation;
	}
	
	/**
	 * public setter
	 *
     * 
     * This enumerated value gives the explanation of why the buyer or seller opened a
     * case (or why seller canceled an order line item). Not all values contained in 
     * <b>DisputeExplanationCodeType</b> are allowed in the 
     * <b>AddDispute</b> call, and the values that are allowed must match 
     * the <b>DisputeReason</b> value.
     * 
     *
     * @param ebay.apis.eblbasecomponents.DisputeExplanationCodeType
	 */
	public void setDisputeExplanation(DisputeExplanationCodeType disputeExplanation) {
	    this.disputeExplanation = disputeExplanation;
	}
	/**
     * public getter
     *
     * 
     * The type of dispute being created. <b>BuyerHasNotPaid</b> and
     * <b>TransactionMutuallyCanceled</b> are the only values that may
     * be used with the <b>AddDispute</b> call. 
     * 
     *
     * @returns ebay.apis.eblbasecomponents.DisputeReasonCodeType
	 */
	public DisputeReasonCodeType getDisputeReason() {
	    return this.disputeReason;
	}
	
	/**
	 * public setter
	 *
     * 
     * The type of dispute being created. <b>BuyerHasNotPaid</b> and
     * <b>TransactionMutuallyCanceled</b> are the only values that may
     * be used with the <b>AddDispute</b> call. 
     * 
     *
     * @param ebay.apis.eblbasecomponents.DisputeReasonCodeType
	 */
	public void setDisputeReason(DisputeReasonCodeType disputeReason) {
	    this.disputeReason = disputeReason;
	}
	/**
     * public getter
     *
     * 
     * Unique identifier for an eBay item listing. A listing can have multiple
     * orders, but only one <b>ItemID</b>. To
     * identify a specific order line item, either an
     * <b>ItemID</b>/<b>TransactionID</b> pair or an
     * <b>OrderLineItemID</b> value must be passed in the request. So,
     * unless <b>OrderLineItemID</b> is used, this field is required.
     * <br>
     * 
     *
     * @returns java.lang.String
	 */
	public String getItemID() {
	    return this.itemID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Unique identifier for an eBay item listing. A listing can have multiple
     * orders, but only one <b>ItemID</b>. To
     * identify a specific order line item, either an
     * <b>ItemID</b>/<b>TransactionID</b> pair or an
     * <b>OrderLineItemID</b> value must be passed in the request. So,
     * unless <b>OrderLineItemID</b> is used, this field is required.
     * <br>
     * 
     *
     * @param java.lang.String
	 */
	public void setItemID(String itemID) {
	    this.itemID = itemID;
	}
	/**
     * public getter
     *
     * 
     * The unique identifier of an order line item. An order line item is created once
     * a buyer purchases the item through a fixed-priced listing or by using the Buy It
     * Now feature in an auction listing, or when an auction listing ends with a
     * winning bidder. To identify a specific order line item, either an 
     * <b>ItemID</b>/<b>TransactionID</b> pair or an 
     * <b>OrderLineItemID</b> value must be passed in the request. So,
     * unless <b>OrderLineItemID</b> is used, this field is required.
     * <br>
     * 
     *
     * @returns java.lang.String
	 */
	public String getTransactionID() {
	    return this.transactionID;
	}
	
	/**
	 * public setter
	 *
     * 
     * The unique identifier of an order line item. An order line item is created once
     * a buyer purchases the item through a fixed-priced listing or by using the Buy It
     * Now feature in an auction listing, or when an auction listing ends with a
     * winning bidder. To identify a specific order line item, either an 
     * <b>ItemID</b>/<b>TransactionID</b> pair or an 
     * <b>OrderLineItemID</b> value must be passed in the request. So,
     * unless <b>OrderLineItemID</b> is used, this field is required.
     * <br>
     * 
     *
     * @param java.lang.String
	 */
	public void setTransactionID(String transactionID) {
	    this.transactionID = transactionID;
	}
	/**
     * public getter
     *
     * 
     * <b>OrderLineItemID</b> is a unique identifier of an order line item,
     * and is based upon the concatenation of <b>ItemID</b> and 
     * <b>TransactionID</b>, with a hyphen in between these two IDs. To 
     * identify a specific order line item, either an 
     * <b>ItemID</b>/<b>TransactionID</b> pair or an 
     * <b>OrderLineItemID</b> value must be passed in the request. So,
     * unless <b>ItemID</b>/<b>TransactionID</b> pair is used,
     * this field is required.
     * <br>
     * 
     *
     * @returns java.lang.String
	 */
	public String getOrderLineItemID() {
	    return this.orderLineItemID;
	}
	
	/**
	 * public setter
	 *
     * 
     * <b>OrderLineItemID</b> is a unique identifier of an order line item,
     * and is based upon the concatenation of <b>ItemID</b> and 
     * <b>TransactionID</b>, with a hyphen in between these two IDs. To 
     * identify a specific order line item, either an 
     * <b>ItemID</b>/<b>TransactionID</b> pair or an 
     * <b>OrderLineItemID</b> value must be passed in the request. So,
     * unless <b>ItemID</b>/<b>TransactionID</b> pair is used,
     * this field is required.
     * <br>
     * 
     *
     * @param java.lang.String
	 */
	public void setOrderLineItemID(String orderLineItemID) {
	    this.orderLineItemID = orderLineItemID;
	}

}