// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * 
 * Returns a list of disputes that involve the calling user
 * as buyer or seller, in response to a GetUserDisputesRequest.
 * 
 */
@RootElement(name = "GetUserDisputesResponse", namespace = "urn:ebay:apis:eBLBaseComponents")
public class GetUserDisputesResponseType extends AbstractResponseType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "StartingDisputeID")
	private String startingDisputeID;
	
	@Element(name = "EndingDisputeID")
	private String endingDisputeID;
	
	@Element(name = "DisputeArray")
	private DisputeArrayType disputeArray;
	
	@Element(name = "ItemsPerPage")
	private Integer itemsPerPage;
	
	@Element(name = "PageNumber")
	private Integer pageNumber;
	
	@Element(name = "DisputeFilterCount")
	private List<DisputeFilterCountType> disputeFilterCount;
	
	@Element(name = "PaginationResult")
	private PaginationResultType paginationResult;
	
    
	/**
     * public getter
     *
     * 
     * The index of the first dispute in the current result set, relative
     * to the total number of disputes available.
     * Primarily useful for interpreting paginated results.
     * For example, if 228 disputes are available and
     * 200 results are returned per page: The first page returns
     * a StartingDisputeID value of 1 and the second page returns a
     * StartingDisputeID value of 201.
     * 
     *
     * @returns java.lang.String
	 */
	public String getStartingDisputeID() {
	    return this.startingDisputeID;
	}
	
	/**
	 * public setter
	 *
     * 
     * The index of the first dispute in the current result set, relative
     * to the total number of disputes available.
     * Primarily useful for interpreting paginated results.
     * For example, if 228 disputes are available and
     * 200 results are returned per page: The first page returns
     * a StartingDisputeID value of 1 and the second page returns a
     * StartingDisputeID value of 201.
     * 
     *
     * @param java.lang.String
	 */
	public void setStartingDisputeID(String startingDisputeID) {
	    this.startingDisputeID = startingDisputeID;
	}
	/**
     * public getter
     *
     * 
     * The index of the last dispute in the current result set, relative
     * to the total number of disputes available.
     * Primarily useful for interpreting paginated results.
     * For example, if 228 disputes are available and
     * 200 results are returned per page: The first page returns
     * an EndingDisputeID value of 200 and the second page returns an
     * EndingDisputeID value of 228.
     * 
     *
     * @returns java.lang.String
	 */
	public String getEndingDisputeID() {
	    return this.endingDisputeID;
	}
	
	/**
	 * public setter
	 *
     * 
     * The index of the last dispute in the current result set, relative
     * to the total number of disputes available.
     * Primarily useful for interpreting paginated results.
     * For example, if 228 disputes are available and
     * 200 results are returned per page: The first page returns
     * an EndingDisputeID value of 200 and the second page returns an
     * EndingDisputeID value of 228.
     * 
     *
     * @param java.lang.String
	 */
	public void setEndingDisputeID(String endingDisputeID) {
	    this.endingDisputeID = endingDisputeID;
	}
	/**
     * public getter
     *
     * 
     * The array of disputes returned.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.DisputeArrayType
	 */
	public DisputeArrayType getDisputeArray() {
	    return this.disputeArray;
	}
	
	/**
	 * public setter
	 *
     * 
     * The array of disputes returned.
     * 
     *
     * @param ebay.apis.eblbasecomponents.DisputeArrayType
	 */
	public void setDisputeArray(DisputeArrayType disputeArray) {
	    this.disputeArray = disputeArray;
	}
	/**
     * public getter
     *
     * 
     * The number of disputes on each virtual page in the result set.
     * The virtual page returned is determined by PageNumber.
     * Default is 200.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getItemsPerPage() {
	    return this.itemsPerPage;
	}
	
	/**
	 * public setter
	 *
     * 
     * The number of disputes on each virtual page in the result set.
     * The virtual page returned is determined by PageNumber.
     * Default is 200.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setItemsPerPage(Integer itemsPerPage) {
	    this.itemsPerPage = itemsPerPage;
	}
	/**
     * public getter
     *
     * 
     * The page of the total result set returned in the call. The entire result set
     * is virtual and the call returns only one page of it.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getPageNumber() {
	    return this.pageNumber;
	}
	
	/**
	 * public setter
	 *
     * 
     * The page of the total result set returned in the call. The entire result set
     * is virtual and the call returns only one page of it.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setPageNumber(Integer pageNumber) {
	    this.pageNumber = pageNumber;
	}
	/**
     * public getter
     *
     * 
     * The number of disputes that involve the requester as
     * buyer or seller and match a given filter type.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.DisputeFilterCountType>
	 */
	public List<DisputeFilterCountType> getDisputeFilterCount() {
	    return this.disputeFilterCount;
	}
	
	/**
	 * public setter
	 *
     * 
     * The number of disputes that involve the requester as
     * buyer or seller and match a given filter type.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.DisputeFilterCountType>
	 */
	public void setDisputeFilterCount(List<DisputeFilterCountType> disputeFilterCount) {
	    this.disputeFilterCount = disputeFilterCount;
	}
	/**
     * public getter
     *
     * 
     * The result of the pagination, including the total number
     * of virtual pages in the result set and the total number of
     * disputes returned.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.PaginationResultType
	 */
	public PaginationResultType getPaginationResult() {
	    return this.paginationResult;
	}
	
	/**
	 * public setter
	 *
     * 
     * The result of the pagination, including the total number
     * of virtual pages in the result set and the total number of
     * disputes returned.
     * 
     *
     * @param ebay.apis.eblbasecomponents.PaginationResultType
	 */
	public void setPaginationResult(PaginationResultType paginationResult) {
	    this.paginationResult = paginationResult;
	}

}