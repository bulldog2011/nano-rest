// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 *   Type defining the <b>SellerPaymentPreferences</b> container, which
 * consists of the seller's payment preferences. Payment preferences specified in a 
 * <b>SetUserPreferences</b> call override the settings in My eBay payment 
 * preferences.
 * 
 */
public class SellerPaymentPreferencesType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "AlwaysUseThisPaymentAddress")
	private Boolean alwaysUseThisPaymentAddress;
	
	@Element(name = "DisplayPayNowButton")
	private DisplayPayNowButtonCodeType displayPayNowButton;
	
	@Element(name = "PayPalPreferred")
	private Boolean payPalPreferred;
	
	@Element(name = "DefaultPayPalEmailAddress")
	private String defaultPayPalEmailAddress;
	
	@Element(name = "PayPalAlwaysOn")
	private Boolean payPalAlwaysOn;
	
	@Element(name = "SellerPaymentAddress")
	private AddressType sellerPaymentAddress;
	
	@Element(name = "UPSRateOption")
	private UPSRateOptionCodeType upsRateOption;
	
	@Element(name = "FedExRateOption")
	private FedExRateOptionCodeType fedExRateOption;
	
	@Element(name = "USPSRateOption")
	private USPSRateOptionCodeType uspsRateOption;
	
    
	/**
     * public getter
     *
     * 
     * Sellers include this field and set it to 'true' if they want buyers to mail payment 
     * to the payment address specified in the 
     * <b>SellerPaymentPreferences.SellerPaymentAddress</b> field. A payment
     * address only comes into play if the item's category allows offline payments, and the
     * seller has allowed the buyer to mail a payment. This payment address will only be
     * displayed to winning bidders and buyers. 
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getAlwaysUseThisPaymentAddress() {
	    return this.alwaysUseThisPaymentAddress;
	}
	
	/**
	 * public setter
	 *
     * 
     * Sellers include this field and set it to 'true' if they want buyers to mail payment 
     * to the payment address specified in the 
     * <b>SellerPaymentPreferences.SellerPaymentAddress</b> field. A payment
     * address only comes into play if the item's category allows offline payments, and the
     * seller has allowed the buyer to mail a payment. This payment address will only be
     * displayed to winning bidders and buyers. 
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setAlwaysUseThisPaymentAddress(Boolean alwaysUseThisPaymentAddress) {
	    this.alwaysUseThisPaymentAddress = alwaysUseThisPaymentAddress;
	}
	/**
     * public getter
     *
     * 
     * If set, this field determines whether a Pay Now button is displayed for all of the 
     * user's listings. The user has the option of using a PayPal only version of the Pay
     * Now button or a Pay Now button for all payment methods.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.DisplayPayNowButtonCodeType
	 */
	public DisplayPayNowButtonCodeType getDisplayPayNowButton() {
	    return this.displayPayNowButton;
	}
	
	/**
	 * public setter
	 *
     * 
     * If set, this field determines whether a Pay Now button is displayed for all of the 
     * user's listings. The user has the option of using a PayPal only version of the Pay
     * Now button or a Pay Now button for all payment methods.
     * 
     *
     * @param ebay.apis.eblbasecomponents.DisplayPayNowButtonCodeType
	 */
	public void setDisplayPayNowButton(DisplayPayNowButtonCodeType displayPayNowButton) {
	    this.displayPayNowButton = displayPayNowButton;
	}
	/**
     * public getter
     *
     * 
     * Specifies whether a seller wants to let buyers know that PayPal payments
     * are preferred.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getPayPalPreferred() {
	    return this.payPalPreferred;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies whether a seller wants to let buyers know that PayPal payments
     * are preferred.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setPayPalPreferred(Boolean payPalPreferred) {
	    this.payPalPreferred = payPalPreferred;
	}
	/**
     * public getter
     *
     * 
     * Specifies the default email address the seller uses for receiving PayPal payments.
     * 
     *
     * @returns java.lang.String
	 */
	public String getDefaultPayPalEmailAddress() {
	    return this.defaultPayPalEmailAddress;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the default email address the seller uses for receiving PayPal payments.
     * 
     *
     * @param java.lang.String
	 */
	public void setDefaultPayPalEmailAddress(String defaultPayPalEmailAddress) {
	    this.defaultPayPalEmailAddress = defaultPayPalEmailAddress;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether PayPal is always accepted for the seller's listings.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getPayPalAlwaysOn() {
	    return this.payPalAlwaysOn;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether PayPal is always accepted for the seller's listings.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setPayPalAlwaysOn(Boolean payPalAlwaysOn) {
	    this.payPalAlwaysOn = payPalAlwaysOn;
	}
	/**
     * public getter
     *
     * 
     * Specifies the address the seller uses to receive mailed payments from buyers.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AddressType
	 */
	public AddressType getSellerPaymentAddress() {
	    return this.sellerPaymentAddress;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the address the seller uses to receive mailed payments from buyers.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AddressType
	 */
	public void setSellerPaymentAddress(AddressType sellerPaymentAddress) {
	    this.sellerPaymentAddress = sellerPaymentAddress;
	}
	/**
     * public getter
     *
     * 
     * Specifies the type of United Parcel Service rates to use.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.UPSRateOptionCodeType
	 */
	public UPSRateOptionCodeType getUpsRateOption() {
	    return this.upsRateOption;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the type of United Parcel Service rates to use.
     * 
     *
     * @param ebay.apis.eblbasecomponents.UPSRateOptionCodeType
	 */
	public void setUpsRateOption(UPSRateOptionCodeType upsRateOption) {
	    this.upsRateOption = upsRateOption;
	}
	/**
     * public getter
     *
     * 
     * Specifies the type of FedEx rates to use.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.FedExRateOptionCodeType
	 */
	public FedExRateOptionCodeType getFedExRateOption() {
	    return this.fedExRateOption;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the type of FedEx rates to use.
     * 
     *
     * @param ebay.apis.eblbasecomponents.FedExRateOptionCodeType
	 */
	public void setFedExRateOption(FedExRateOptionCodeType fedExRateOption) {
	    this.fedExRateOption = fedExRateOption;
	}
	/**
     * public getter
     *
     * 
     * Specifies the type of USPS rates to use.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.USPSRateOptionCodeType
	 */
	public USPSRateOptionCodeType getUspsRateOption() {
	    return this.uspsRateOption;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the type of USPS rates to use.
     * 
     *
     * @param ebay.apis.eblbasecomponents.USPSRateOptionCodeType
	 */
	public void setUspsRateOption(USPSRateOptionCodeType uspsRateOption) {
	    this.uspsRateOption = uspsRateOption;
	}

}