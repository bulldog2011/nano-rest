// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * Reports items that allegedly infringe your copyright, trademark, or other 
 * intellectual property rights. You can report one or more items at a time with this 
 * call. You must be a member of the Verified Rights Owner (VeRO) Program to use this 
 * call. 
 * 
 */
@RootElement(name = "VeROReportItemsRequest", namespace = "urn:ebay:apis:eBLBaseComponents")
public class VeROReportItemsRequestType extends AbstractRequestType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "RightsOwnerID")
	private String rightsOwnerID;
	
	@Element(name = "ReportItems")
	private VeROReportItemsType reportItems;
	
    
	/**
     * public getter
     *
     * 
     * User ID of the VeRO member reporting the items.
     * 
     *
     * @returns java.lang.String
	 */
	public String getRightsOwnerID() {
	    return this.rightsOwnerID;
	}
	
	/**
	 * public setter
	 *
     * 
     * User ID of the VeRO member reporting the items.
     * 
     *
     * @param java.lang.String
	 */
	public void setRightsOwnerID(String rightsOwnerID) {
	    this.rightsOwnerID = rightsOwnerID;
	}
	/**
     * public getter
     *
     * 
     *  Container (packet) for items being reported. You can report the same item 
     *  more than once in a packet if a different reason code is used each time.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.VeROReportItemsType
	 */
	public VeROReportItemsType getReportItems() {
	    return this.reportItems;
	}
	
	/**
	 * public setter
	 *
     * 
     *  Container (packet) for items being reported. You can report the same item 
     *  more than once in a packet if a different reason code is used each time.
     * 
     *
     * @param ebay.apis.eblbasecomponents.VeROReportItemsType
	 */
	public void setReportItems(VeROReportItemsType reportItems) {
	    this.reportItems = reportItems;
	}

}