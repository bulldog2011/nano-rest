// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

public class PictureManagerDetailsType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "SubscriptionLevel")
	private PictureManagerSubscriptionLevelCodeType subscriptionLevel;
	
	@Element(name = "StorageUsed")
	private Integer storageUsed;
	
	@Element(name = "TotalStorageAvailable")
	private Integer totalStorageAvailable;
	
	@Element(name = "KeepOriginal")
	private Boolean keepOriginal;
	
	@Element(name = "WatermarkEPS")
	private Boolean watermarkEPS;
	
	@Element(name = "WatermarkUserID")
	private Boolean watermarkUserID;
	
	@Element(name = "Folder")
	private List<PictureManagerFolderType> folder;
	
    
	/**
     * public getter
     *
     * 
     * This type is deprecated as Pictures Manager was retired.
     * 
     * 
     *
     * @returns ebay.apis.eblbasecomponents.PictureManagerSubscriptionLevelCodeType
	 */
	public PictureManagerSubscriptionLevelCodeType getSubscriptionLevel() {
	    return this.subscriptionLevel;
	}
	
	/**
	 * public setter
	 *
     * 
     * This type is deprecated as Pictures Manager was retired.
     * 
     * 
     *
     * @param ebay.apis.eblbasecomponents.PictureManagerSubscriptionLevelCodeType
	 */
	public void setSubscriptionLevel(PictureManagerSubscriptionLevelCodeType subscriptionLevel) {
	    this.subscriptionLevel = subscriptionLevel;
	}
	/**
     * public getter
     *
     * 
     * 
     * The amount of storage already in use. Measured in bytes. Read-only value.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getStorageUsed() {
	    return this.storageUsed;
	}
	
	/**
	 * public setter
	 *
     * 
     * 
     * The amount of storage already in use. Measured in bytes. Read-only value.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setStorageUsed(Integer storageUsed) {
	    this.storageUsed = storageUsed;
	}
	/**
     * public getter
     *
     * 
     * 
     * The amount of storage space remaining in the authenticated user's album.
     * Measured in bytes. Read-only value.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getTotalStorageAvailable() {
	    return this.totalStorageAvailable;
	}
	
	/**
	 * public setter
	 *
     * 
     * 
     * The amount of storage space remaining in the authenticated user's album.
     * Measured in bytes. Read-only value.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setTotalStorageAvailable(Integer totalStorageAvailable) {
	    this.totalStorageAvailable = totalStorageAvailable;
	}
	/**
     * public getter
     *
     * 
     * 
     * Whether to keep a copy of the original picture without resizing.
     * Default is false. true = keep originals.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getKeepOriginal() {
	    return this.keepOriginal;
	}
	
	/**
	 * public setter
	 *
     * 
     * 
     * Whether to keep a copy of the original picture without resizing.
     * Default is false. true = keep originals.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setKeepOriginal(Boolean keepOriginal) {
	    this.keepOriginal = keepOriginal;
	}
	/**
     * public getter
     *
     * 
     * 
     * Whether to show the EPS watermark when photos are displayed.
     * Default is false. true = show.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getWatermarkEPS() {
	    return this.watermarkEPS;
	}
	
	/**
	 * public setter
	 *
     * 
     * 
     * Whether to show the EPS watermark when photos are displayed.
     * Default is false. true = show.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setWatermarkEPS(Boolean watermarkEPS) {
	    this.watermarkEPS = watermarkEPS;
	}
	/**
     * public getter
     *
     * 
     * 
     * Whether to show the user ID watermark when photos are displayed.
     * Default is false. true = show.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getWatermarkUserID() {
	    return this.watermarkUserID;
	}
	
	/**
	 * public setter
	 *
     * 
     * 
     * Whether to show the user ID watermark when photos are displayed.
     * Default is false. true = show.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setWatermarkUserID(Boolean watermarkUserID) {
	    this.watermarkUserID = watermarkUserID;
	}
	/**
     * public getter
     *
     * 
     * 
     * The folder requested in the album.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.PictureManagerFolderType>
	 */
	public List<PictureManagerFolderType> getFolder() {
	    return this.folder;
	}
	
	/**
	 * public setter
	 *
     * 
     * 
     * The folder requested in the album.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.PictureManagerFolderType>
	 */
	public void setFolder(List<PictureManagerFolderType> folder) {
	    this.folder = folder;
	}

}