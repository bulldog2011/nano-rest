// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;
import java.util.Date;

/**
 * 
 * Returns the item ID and the estimated fees for the revised listing.
 * 
 */
@RootElement(name = "ReviseItemResponse", namespace = "urn:ebay:apis:eBLBaseComponents")
public class ReviseItemResponseType extends AbstractResponseType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "ItemID")
	private String itemID;
	
	@Element(name = "StartTime")
	private Date startTime;
	
	@Element(name = "EndTime")
	private Date endTime;
	
	@Element(name = "Fees")
	private FeesType fees;
	
	@Element(name = "CategoryID")
	private String categoryID;
	
	@Element(name = "Category2ID")
	private String category2ID;
	
	@Element(name = "VerifyOnly")
	private Boolean verifyOnly;
	
	@Element(name = "DiscountReason")
	private List<DiscountReasonCodeType> discountReason;
	
	@Element(name = "ProductSuggestions")
	private ProductSuggestionsType productSuggestions;
	
    
	/**
     * public getter
     *
     * 
     * Item ID that uniquely identifies the item listing that was revised.
     * Provided for confirmation purposes. The value returned should be the
     * same as the item ID specified in the ItemID property of the Item object
     * specified as input for the call.
     * Also applicable to Half.com.
     * 
     *
     * @returns java.lang.String
	 */
	public String getItemID() {
	    return this.itemID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Item ID that uniquely identifies the item listing that was revised.
     * Provided for confirmation purposes. The value returned should be the
     * same as the item ID specified in the ItemID property of the Item object
     * specified as input for the call.
     * Also applicable to Half.com.
     * 
     *
     * @param java.lang.String
	 */
	public void setItemID(String itemID) {
	    this.itemID = itemID;
	}
	/**
     * public getter
     *
     * 
     * Starting date and time for the revised listing.
     * Also returned for Half.com (for Half.com, the start time is
     * always the time the item was originally listed).
     * 
     *
     * @returns java.util.Date
	 */
	public Date getStartTime() {
	    return this.startTime;
	}
	
	/**
	 * public setter
	 *
     * 
     * Starting date and time for the revised listing.
     * Also returned for Half.com (for Half.com, the start time is
     * always the time the item was originally listed).
     * 
     *
     * @param java.util.Date
	 */
	public void setStartTime(Date startTime) {
	    this.startTime = startTime;
	}
	/**
     * public getter
     *
     * 
     * Date and time when the new listing ends. This is the starting time
     * plus the listing duration.
     * Also returned for Half.com, but for Half.com the actual end time is GTC
     * (not the end time returned in the response).
     * 
     *
     * @returns java.util.Date
	 */
	public Date getEndTime() {
	    return this.endTime;
	}
	
	/**
	 * public setter
	 *
     * 
     * Date and time when the new listing ends. This is the starting time
     * plus the listing duration.
     * Also returned for Half.com, but for Half.com the actual end time is GTC
     * (not the end time returned in the response).
     * 
     *
     * @param java.util.Date
	 */
	public void setEndTime(Date endTime) {
	    this.endTime = endTime;
	}
	/**
     * public getter
     *
     * 
     * Child elements contain the estimated listing fees for the revised item
     * listing. The fees do not include the Final Value Fee (FVF), which cannot
     * be determined until an item is sold. Revising an item does not itself
     * incur a fee. However, certain item properties are fee-based and result
     * in the return of fees in the call's response.
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.FeesType
	 */
	public FeesType getFees() {
	    return this.fees;
	}
	
	/**
	 * public setter
	 *
     * 
     * Child elements contain the estimated listing fees for the revised item
     * listing. The fees do not include the Final Value Fee (FVF), which cannot
     * be determined until an item is sold. Revising an item does not itself
     * incur a fee. However, certain item properties are fee-based and result
     * in the return of fees in the call's response.
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.FeesType
	 */
	public void setFees(FeesType fees) {
	    this.fees = fees;
	}
	/**
     * public getter
     *
     * 
     * ID of the primary category in which the item was listed.
     * Only returned if you set Item.CategoryMappingAllowed to true in the request
     * and the ID passed in Item.PrimaryCategory was mapped to a new ID by eBay.
     * If the primary category has not changed or it has expired with no replacement,
     * CategoryID does not return a value.
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.String
	 */
	public String getCategoryID() {
	    return this.categoryID;
	}
	
	/**
	 * public setter
	 *
     * 
     * ID of the primary category in which the item was listed.
     * Only returned if you set Item.CategoryMappingAllowed to true in the request
     * and the ID passed in Item.PrimaryCategory was mapped to a new ID by eBay.
     * If the primary category has not changed or it has expired with no replacement,
     * CategoryID does not return a value.
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.String
	 */
	public void setCategoryID(String categoryID) {
	    this.categoryID = categoryID;
	}
	/**
     * public getter
     *
     * 
     * ID of the secondary category in which the item was listed.
     * Only returned if you set Item.CategoryMappingAllowed to true in the request
     * and the ID passed in Item.SecondaryCategory was mapped to a new ID by eBay.
     * If the secondary category has not changed or it has expired with no replacement,
     * Category2ID does not return a value.
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.String
	 */
	public String getCategory2ID() {
	    return this.category2ID;
	}
	
	/**
	 * public setter
	 *
     * 
     * ID of the secondary category in which the item was listed.
     * Only returned if you set Item.CategoryMappingAllowed to true in the request
     * and the ID passed in Item.SecondaryCategory was mapped to a new ID by eBay.
     * If the secondary category has not changed or it has expired with no replacement,
     * Category2ID does not return a value.
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.String
	 */
	public void setCategory2ID(String category2ID) {
	    this.category2ID = category2ID;
	}
	/**
     * public getter
     *
     * 
     * Supporting VerifyOnly for ReviseItem call as part of project 24083 (API - Critical enhancements).
     * When the VerifyOnly boolean tag value is supplied as 'true', the response will include the calculated
     * listing price change if there is an increase in the BIN/Start price, but does not persist the values in DB.
     * This call is simialr to VerifyAddItem in revise mode.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getVerifyOnly() {
	    return this.verifyOnly;
	}
	
	/**
	 * public setter
	 *
     * 
     * Supporting VerifyOnly for ReviseItem call as part of project 24083 (API - Critical enhancements).
     * When the VerifyOnly boolean tag value is supplied as 'true', the response will include the calculated
     * listing price change if there is an increase in the BIN/Start price, but does not persist the values in DB.
     * This call is simialr to VerifyAddItem in revise mode.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setVerifyOnly(Boolean verifyOnly) {
	    this.verifyOnly = verifyOnly;
	}
	/**
     * public getter
     *
     * 
     * The nature of the discount, if a discount applied.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.DiscountReasonCodeType>
	 */
	public List<DiscountReasonCodeType> getDiscountReason() {
	    return this.discountReason;
	}
	
	/**
	 * public setter
	 *
     * 
     * The nature of the discount, if a discount applied.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.DiscountReasonCodeType>
	 */
	public void setDiscountReason(List<DiscountReasonCodeType> discountReason) {
	    this.discountReason = discountReason;
	}
	/**
     * public getter
     *
     * 
     * Provides a list of products recommended by eBay which match the item information
     * provided by the seller.
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ProductSuggestionsType
	 */
	public ProductSuggestionsType getProductSuggestions() {
	    return this.productSuggestions;
	}
	
	/**
	 * public setter
	 *
     * 
     * Provides a list of products recommended by eBay which match the item information
     * provided by the seller.
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ProductSuggestionsType
	 */
	public void setProductSuggestions(ProductSuggestionsType productSuggestions) {
	    this.productSuggestions = productSuggestions;
	}

}