// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.Date;

/**
 * 
 * Details the recoupment policy on this site.  There are two sites involved in recoupment - the listing site
 * and the user registration site, each of which must agree before eBay enforces recoupment for a seller and listing.
 * 
 */
public class RecoupmentPolicyDetailsType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "EnforcedOnListingSite")
	private Boolean enforcedOnListingSite;
	
	@Element(name = "EnforcedOnRegistrationSite")
	private Boolean enforcedOnRegistrationSite;
	
	@Element(name = "DetailVersion")
	private String detailVersion;
	
	@Element(name = "UpdateTime")
	private Date updateTime;
	
    
	/**
     * public getter
     *
     * 
     * Indicates whether recoupment policy is enforced on the site on which the item is listed.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getEnforcedOnListingSite() {
	    return this.enforcedOnListingSite;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether recoupment policy is enforced on the site on which the item is listed.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setEnforcedOnListingSite(Boolean enforcedOnListingSite) {
	    this.enforcedOnListingSite = enforcedOnListingSite;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether recoupment policy is enforced on the registration site for which the call is made.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getEnforcedOnRegistrationSite() {
	    return this.enforcedOnRegistrationSite;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether recoupment policy is enforced on the registration site for which the call is made.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setEnforcedOnRegistrationSite(Boolean enforcedOnRegistrationSite) {
	    this.enforcedOnRegistrationSite = enforcedOnRegistrationSite;
	}
	/**
     * public getter
     *
     * 
     * Returns the latest version number for this field. The version can be
     * used to determine if and when to refresh cached client data.
     * 
     *
     * @returns java.lang.String
	 */
	public String getDetailVersion() {
	    return this.detailVersion;
	}
	
	/**
	 * public setter
	 *
     * 
     * Returns the latest version number for this field. The version can be
     * used to determine if and when to refresh cached client data.
     * 
     *
     * @param java.lang.String
	 */
	public void setDetailVersion(String detailVersion) {
	    this.detailVersion = detailVersion;
	}
	/**
     * public getter
     *
     * 
     * Gives the time in GMT that the feature flags for the details were last
     * updated. This timestamp can be used to determine if and when to refresh
     * cached client data.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getUpdateTime() {
	    return this.updateTime;
	}
	
	/**
	 * public setter
	 *
     * 
     * Gives the time in GMT that the feature flags for the details were last
     * updated. This timestamp can be used to determine if and when to refresh
     * cached client data.
     * 
     *
     * @param java.util.Date
	 */
	public void setUpdateTime(Date updateTime) {
	    this.updateTime = updateTime;
	}

}