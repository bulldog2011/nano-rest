// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * Defines the <b>SetUserPreferences</b> request container.
 * 
 */
@RootElement(name = "SetUserPreferencesRequest", namespace = "urn:ebay:apis:eBLBaseComponents")
public class SetUserPreferencesRequestType extends AbstractRequestType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "BidderNoticePreferences")
	private BidderNoticePreferencesType bidderNoticePreferences;
	
	@Element(name = "CombinedPaymentPreferences")
	private CombinedPaymentPreferencesType combinedPaymentPreferences;
	
	@Element(name = "CrossPromotionPreferences")
	private CrossPromotionPreferencesType crossPromotionPreferences;
	
	@Element(name = "SellerPaymentPreferences")
	private SellerPaymentPreferencesType sellerPaymentPreferences;
	
	@Element(name = "SellerFavoriteItemPreferences")
	private SellerFavoriteItemPreferencesType sellerFavoriteItemPreferences;
	
	@Element(name = "EndOfAuctionEmailPreferences")
	private EndOfAuctionEmailPreferencesType endOfAuctionEmailPreferences;
	
	@Element(name = "EmailShipmentTrackingNumberPreference")
	private Boolean emailShipmentTrackingNumberPreference;
	
	@Element(name = "RequiredShipPhoneNumberPreference")
	private Boolean requiredShipPhoneNumberPreference;
	
	@Element(name = "UnpaidItemAssistancePreferences")
	private UnpaidItemAssistancePreferencesType unpaidItemAssistancePreferences;
	
	@Element(name = "PurchaseReminderEmailPreferences")
	private PurchaseReminderEmailPreferencesType purchaseReminderEmailPreferences;
	
	@Element(name = "SellerThirdPartyCheckoutDisabled")
	private Boolean sellerThirdPartyCheckoutDisabled;
	
    
	/**
     * public getter
     *
     * 
     * Container consisting of the seller's preference for receiving contact
     * information for unsuccessful bidders. This preference is only applicable for
     * auction listings.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.BidderNoticePreferencesType
	 */
	public BidderNoticePreferencesType getBidderNoticePreferences() {
	    return this.bidderNoticePreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of the seller's preference for receiving contact
     * information for unsuccessful bidders. This preference is only applicable for
     * auction listings.
     * 
     *
     * @param ebay.apis.eblbasecomponents.BidderNoticePreferencesType
	 */
	public void setBidderNoticePreferences(BidderNoticePreferencesType bidderNoticePreferences) {
	    this.bidderNoticePreferences = bidderNoticePreferences;
	}
	/**
     * public getter
     *
     * 
     * Container consisting of the seller's preference for allowing combined payment
     * on multiple orders shared between the same seller and buyer.
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * Calculated and flat-rate shipping preferences are no longer set using this 
     * call. Instead, use the <b>SetShippingDiscountProfiles</b> call to
     * set the shipping discounts for combined payment orders.
     * </span> 
     * <br>
     * <span class="tablenote"><strong>Note:</strong>
     * A seller's combined payment preferences can take up to 7 days to
     * have any logical or functional effect on eBay.
     * </span>
     * 
     *
     * @returns ebay.apis.eblbasecomponents.CombinedPaymentPreferencesType
	 */
	public CombinedPaymentPreferencesType getCombinedPaymentPreferences() {
	    return this.combinedPaymentPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of the seller's preference for allowing combined payment
     * on multiple orders shared between the same seller and buyer.
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * Calculated and flat-rate shipping preferences are no longer set using this 
     * call. Instead, use the <b>SetShippingDiscountProfiles</b> call to
     * set the shipping discounts for combined payment orders.
     * </span> 
     * <br>
     * <span class="tablenote"><strong>Note:</strong>
     * A seller's combined payment preferences can take up to 7 days to
     * have any logical or functional effect on eBay.
     * </span>
     * 
     *
     * @param ebay.apis.eblbasecomponents.CombinedPaymentPreferencesType
	 */
	public void setCombinedPaymentPreferences(CombinedPaymentPreferencesType combinedPaymentPreferences) {
	    this.combinedPaymentPreferences = combinedPaymentPreferences;
	}
	/**
     * public getter
     *
     * 
     * This container should no longer be used as eBay Store Cross Promotions are no
     * longer supported in the Trading API. This container will be removed from the
     * Trading WSDL and API Call Reference docs in a future release.
     * <br><br>
     * Container consisting of the seller's cross-promotion preferences. These
     * preferences are only applicable for eBay Store owners. One or more
     * preferences may be set or modified under this field.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.CrossPromotionPreferencesType
	 */
	public CrossPromotionPreferencesType getCrossPromotionPreferences() {
	    return this.crossPromotionPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * This container should no longer be used as eBay Store Cross Promotions are no
     * longer supported in the Trading API. This container will be removed from the
     * Trading WSDL and API Call Reference docs in a future release.
     * <br><br>
     * Container consisting of the seller's cross-promotion preferences. These
     * preferences are only applicable for eBay Store owners. One or more
     * preferences may be set or modified under this field.
     * 
     *
     * @param ebay.apis.eblbasecomponents.CrossPromotionPreferencesType
	 */
	public void setCrossPromotionPreferences(CrossPromotionPreferencesType crossPromotionPreferences) {
	    this.crossPromotionPreferences = crossPromotionPreferences;
	}
	/**
     * public getter
     *
     * 
     * Container consisting of the seller's payment preferences. One or more
     * preferences may be set or modified under this field. Payment preferences
     * specified in a <b>SetUserPreferences</b> call override the settings
     * in My eBay payment preferences.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SellerPaymentPreferencesType
	 */
	public SellerPaymentPreferencesType getSellerPaymentPreferences() {
	    return this.sellerPaymentPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of the seller's payment preferences. One or more
     * preferences may be set or modified under this field. Payment preferences
     * specified in a <b>SetUserPreferences</b> call override the settings
     * in My eBay payment preferences.
     * 
     *
     * @param ebay.apis.eblbasecomponents.SellerPaymentPreferencesType
	 */
	public void setSellerPaymentPreferences(SellerPaymentPreferencesType sellerPaymentPreferences) {
	    this.sellerPaymentPreferences = sellerPaymentPreferences;
	}
	/**
     * public getter
     *
     * 
     * Container consisting of the seller's preferences for displaying items on a
     * buyer's Favorite Sellers' Items page or Favorite Sellers' Items digest. One
     * or more preferences may be set or modified under this field. 
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SellerFavoriteItemPreferencesType
	 */
	public SellerFavoriteItemPreferencesType getSellerFavoriteItemPreferences() {
	    return this.sellerFavoriteItemPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of the seller's preferences for displaying items on a
     * buyer's Favorite Sellers' Items page or Favorite Sellers' Items digest. One
     * or more preferences may be set or modified under this field. 
     * 
     *
     * @param ebay.apis.eblbasecomponents.SellerFavoriteItemPreferencesType
	 */
	public void setSellerFavoriteItemPreferences(SellerFavoriteItemPreferencesType sellerFavoriteItemPreferences) {
	    this.sellerFavoriteItemPreferences = sellerFavoriteItemPreferences;
	}
	/**
     * public getter
     *
     * 
     * Container consisting of the seller's preferences for the end-of-auction
     * email sent to the winning bidder. These preferences allow the seller to
     * customize the Email that is sent to buyer at the end of the auction. One or
     * more preferences may be set or modified under this field. These preferences
     * are only applicable for auction listings.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.EndOfAuctionEmailPreferencesType
	 */
	public EndOfAuctionEmailPreferencesType getEndOfAuctionEmailPreferences() {
	    return this.endOfAuctionEmailPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of the seller's preferences for the end-of-auction
     * email sent to the winning bidder. These preferences allow the seller to
     * customize the Email that is sent to buyer at the end of the auction. One or
     * more preferences may be set or modified under this field. These preferences
     * are only applicable for auction listings.
     * 
     *
     * @param ebay.apis.eblbasecomponents.EndOfAuctionEmailPreferencesType
	 */
	public void setEndOfAuctionEmailPreferences(EndOfAuctionEmailPreferencesType endOfAuctionEmailPreferences) {
	    this.endOfAuctionEmailPreferences = endOfAuctionEmailPreferences;
	}
	/**
     * public getter
     *
     * 
     * Flag that controls whether the shipment's tracking number is sent by Email
     * from the seller to the buyer. 
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getEmailShipmentTrackingNumberPreference() {
	    return this.emailShipmentTrackingNumberPreference;
	}
	
	/**
	 * public setter
	 *
     * 
     * Flag that controls whether the shipment's tracking number is sent by Email
     * from the seller to the buyer. 
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setEmailShipmentTrackingNumberPreference(Boolean emailShipmentTrackingNumberPreference) {
	    this.emailShipmentTrackingNumberPreference = emailShipmentTrackingNumberPreference;
	}
	/**
     * public getter
     *
     * 
     * Flag that controls whether the buyer is required to provide a shipping phone
     * number upon checkout. Some shipping carriers require the receiver's phone
     * number.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getRequiredShipPhoneNumberPreference() {
	    return this.requiredShipPhoneNumberPreference;
	}
	
	/**
	 * public setter
	 *
     * 
     * Flag that controls whether the buyer is required to provide a shipping phone
     * number upon checkout. Some shipping carriers require the receiver's phone
     * number.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setRequiredShipPhoneNumberPreference(Boolean requiredShipPhoneNumberPreference) {
	    this.requiredShipPhoneNumberPreference = requiredShipPhoneNumberPreference;
	}
	/**
     * public getter
     *
     * 
     * Container consisting of a seller's Unpaid Item Assistant preferences. The
     * Unpaid Item Assistant automatically opens an Unpaid Item dispute on the
     * behalf of the seller. One or more preferences may be set or modified under
     * this field.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.UnpaidItemAssistancePreferencesType
	 */
	public UnpaidItemAssistancePreferencesType getUnpaidItemAssistancePreferences() {
	    return this.unpaidItemAssistancePreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of a seller's Unpaid Item Assistant preferences. The
     * Unpaid Item Assistant automatically opens an Unpaid Item dispute on the
     * behalf of the seller. One or more preferences may be set or modified under
     * this field.
     * 
     *
     * @param ebay.apis.eblbasecomponents.UnpaidItemAssistancePreferencesType
	 */
	public void setUnpaidItemAssistancePreferences(UnpaidItemAssistancePreferencesType unpaidItemAssistancePreferences) {
	    this.unpaidItemAssistancePreferences = unpaidItemAssistancePreferences;
	}
	/**
     * public getter
     *
     * 
     * Container consisting of a seller's preference for sending a purchase
     * reminder email to buyers. 
     * 
     *
     * @returns ebay.apis.eblbasecomponents.PurchaseReminderEmailPreferencesType
	 */
	public PurchaseReminderEmailPreferencesType getPurchaseReminderEmailPreferences() {
	    return this.purchaseReminderEmailPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of a seller's preference for sending a purchase
     * reminder email to buyers. 
     * 
     *
     * @param ebay.apis.eblbasecomponents.PurchaseReminderEmailPreferencesType
	 */
	public void setPurchaseReminderEmailPreferences(PurchaseReminderEmailPreferencesType purchaseReminderEmailPreferences) {
	    this.purchaseReminderEmailPreferences = purchaseReminderEmailPreferences;
	}
	/**
     * public getter
     *
     * 
     * A flag used to disable the use of a third-party application to handle the
     * checkout flow for a seller. If set to true, Third-Party Checkout is disabled
     * and any checkout flow initiated on the seller's application is redirected to
     * the eBay checkout flow. 
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getSellerThirdPartyCheckoutDisabled() {
	    return this.sellerThirdPartyCheckoutDisabled;
	}
	
	/**
	 * public setter
	 *
     * 
     * A flag used to disable the use of a third-party application to handle the
     * checkout flow for a seller. If set to true, Third-Party Checkout is disabled
     * and any checkout flow initiated on the seller's application is redirected to
     * the eBay checkout flow. 
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setSellerThirdPartyCheckoutDisabled(Boolean sellerThirdPartyCheckoutDisabled) {
	    this.sellerThirdPartyCheckoutDisabled = sellerThirdPartyCheckoutDisabled;
	}

}