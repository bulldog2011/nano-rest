// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import com.leansoft.nano.custom.types.Duration;
import java.util.List;
import java.util.Date;

/**
 * 
 * Contains the data defining one item. A seller populates an object of
 * this type at listing time with the definition of a new item. A seller
 * also uses an object of this type to relist or revise an item. Calls
 * that retrieve item data (such as the GetSellerList call) return an object of
 * this type, filled with the item's data. Some fields are applicable both
 * to eBay listings and Half.com listings. Some fields are only applicable to eBay listings,
 * and others are only applicable to Half.com listings.
 * 
 */
public class ItemType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "ApplicationData")
	private String applicationData;
	
	@Element(name = "AttributeSetArray")
	private AttributeSetArrayType attributeSetArray;
	
	@Element(name = "AttributeArray")
	private AttributeArrayType attributeArray;
	
	@Element(name = "LookupAttributeArray")
	private LookupAttributeArrayType lookupAttributeArray;
	
	@Element(name = "AutoPay")
	private Boolean autoPay;
	
	@Element(name = "PaymentDetails")
	private PaymentDetailsType paymentDetails;
	
	@Element(name = "BiddingDetails")
	private BiddingDetailsType biddingDetails;
	
	@Element(name = "MotorsGermanySearchable")
	private Boolean motorsGermanySearchable;
	
	@Element(name = "BuyerProtection")
	private BuyerProtectionCodeType buyerProtection;
	
	@Element(name = "BuyItNowPrice")
	private AmountType buyItNowPrice;
	
	@Element(name = "CategoryMappingAllowed")
	private Boolean categoryMappingAllowed;
	
	@Element(name = "Charity")
	private CharityType charity;
	
	@Element(name = "Country")
	private CountryCodeType country;
	
	@Element(name = "CrossPromotion")
	private CrossPromotionsType crossPromotion;
	
	@Element(name = "Currency")
	private CurrencyCodeType currency;
	
	@Element(name = "Description")
	private String description;
	
	@Element(name = "DescriptionReviseMode")
	private DescriptionReviseModeCodeType descriptionReviseMode;
	
	@Element(name = "Distance")
	private DistanceType distance;
	
	@Element(name = "GiftIcon")
	private Integer giftIcon;
	
	@Element(name = "GiftServices")
	private List<GiftServicesCodeType> giftServices;
	
	@Element(name = "HitCounter")
	private HitCounterCodeType hitCounter;
	
	@Element(name = "ItemID")
	private String itemID;
	
	@Element(name = "ListingDetails")
	private ListingDetailsType listingDetails;
	
	@Element(name = "ListingDesigner")
	private ListingDesignerType listingDesigner;
	
	@Element(name = "ListingDuration")
	private String listingDuration;
	
	@Element(name = "ListingEnhancement")
	private List<ListingEnhancementsCodeType> listingEnhancement;
	
	@Element(name = "ListingType")
	private ListingTypeCodeType listingType;
	
	@Element(name = "Location")
	private String location;
	
	@Element(name = "LotSize")
	private Integer lotSize;
	
	@Element(name = "PartnerCode")
	private String partnerCode;
	
	@Element(name = "PartnerName")
	private String partnerName;
	
	@Element(name = "PaymentMethods")
	private List<BuyerPaymentMethodCodeType> paymentMethods;
	
	@Element(name = "PayPalEmailAddress")
	private String payPalEmailAddress;
	
	@Element(name = "PrimaryCategory")
	private CategoryType primaryCategory;
	
	@Element(name = "PrivateListing")
	private Boolean privateListing;
	
	@Element(name = "ProductListingDetails")
	private ProductListingDetailsType productListingDetails;
	
	@Element(name = "Quantity")
	private Integer quantity;
	
	@Element(name = "PrivateNotes")
	private String privateNotes;
	
	@Element(name = "RegionID")
	private String regionID;
	
	@Element(name = "RelistLink")
	private Boolean relistLink;
	
	@Element(name = "ReservePrice")
	private AmountType reservePrice;
	
	@Element(name = "ReviseStatus")
	private ReviseStatusType reviseStatus;
	
	@Element(name = "ScheduleTime")
	private Date scheduleTime;
	
	@Element(name = "SecondaryCategory")
	private CategoryType secondaryCategory;
	
	@Element(name = "FreeAddedCategory")
	private CategoryType freeAddedCategory;
	
	@Element(name = "Seller")
	private UserType seller;
	
	@Element(name = "SellingStatus")
	private SellingStatusType sellingStatus;
	
	@Element(name = "ShippingDetails")
	private ShippingDetailsType shippingDetails;
	
	@Element(name = "ShipToLocations")
	private List<String> shipToLocations;
	
	@Element(name = "Site")
	private SiteCodeType site;
	
	@Element(name = "StartPrice")
	private AmountType startPrice;
	
	@Element(name = "Storefront")
	private StorefrontType storefront;
	
	@Element(name = "SubTitle")
	private String subTitle;
	
	@Element(name = "TimeLeft")
	private Duration timeLeft;
	
	@Element(name = "Title")
	private String title;
	
	@Element(name = "UUID")
	private String uuid;
	
	@Element(name = "VATDetails")
	private VATDetailsType vatDetails;
	
	@Element(name = "SellerVacationNote")
	private String sellerVacationNote;
	
	@Element(name = "WatchCount")
	private Long watchCount;
	
	@Element(name = "HitCount")
	private Long hitCount;
	
	@Element(name = "DisableBuyerRequirements")
	private Boolean disableBuyerRequirements;
	
	@Element(name = "BestOfferDetails")
	private BestOfferDetailsType bestOfferDetails;
	
	@Element(name = "LocationDefaulted")
	private Boolean locationDefaulted;
	
	@Element(name = "ThirdPartyCheckout")
	private Boolean thirdPartyCheckout;
	
	@Element(name = "UseTaxTable")
	private Boolean useTaxTable;
	
	@Element(name = "GetItFast")
	private Boolean getItFast;
	
	@Element(name = "BuyerResponsibleForShipping")
	private Boolean buyerResponsibleForShipping;
	
	@Element(name = "LimitedWarrantyEligible")
	private Boolean limitedWarrantyEligible;
	
	@Element
	private String eBayNotes;
	
	@Element(name = "QuestionCount")
	private Long questionCount;
	
	@Element(name = "Relisted")
	private Boolean relisted;
	
	@Element(name = "QuantityAvailable")
	private Integer quantityAvailable;
	
	@Element(name = "SKU")
	private String sku;
	
	@Element(name = "CategoryBasedAttributesPrefill")
	private Boolean categoryBasedAttributesPrefill;
	
	@Element(name = "SearchDetails")
	private SearchDetailsType searchDetails;
	
	@Element(name = "PostalCode")
	private String postalCode;
	
	@Element(name = "ShippingTermsInDescription")
	private Boolean shippingTermsInDescription;
	
	@Element(name = "ExternalProductID")
	private ExternalProductIDType externalProductID;
	
	@Element(name = "SellerInventoryID")
	private String sellerInventoryID;
	
	@Element(name = "PictureDetails")
	private PictureDetailsType pictureDetails;
	
	@Element(name = "DispatchTimeMax")
	private Integer dispatchTimeMax;
	
	@Element(name = "SkypeEnabled")
	private Boolean skypeEnabled;
	
	@Element(name = "SkypeID")
	private String skypeID;
	
	@Element(name = "SkypeContactOption")
	private List<SkypeContactOptionCodeType> skypeContactOption;
	
	@Element(name = "BestOfferEnabled")
	private Boolean bestOfferEnabled;
	
	@Element(name = "LocalListing")
	private Boolean localListing;
	
	@Element(name = "ThirdPartyCheckoutIntegration")
	private Boolean thirdPartyCheckoutIntegration;
	
	@Element(name = "ListingCheckoutRedirectPreference")
	private ListingCheckoutRedirectPreferenceType listingCheckoutRedirectPreference;
	
	@Element(name = "SellerContactDetails")
	private AddressType sellerContactDetails;
	
	@Element(name = "TotalQuestionCount")
	private Long totalQuestionCount;
	
	@Element(name = "ProxyItem")
	private Boolean proxyItem;
	
	@Element(name = "ExtendedSellerContactDetails")
	private ExtendedContactDetailsType extendedSellerContactDetails;
	
	@Element(name = "LeadCount")
	private Integer leadCount;
	
	@Element(name = "NewLeadCount")
	private Integer newLeadCount;
	
	@Element(name = "ItemSpecifics")
	private NameValueListArrayType itemSpecifics;
	
	@Element(name = "GroupCategoryID")
	private String groupCategoryID;
	
	@Element(name = "ClassifiedAdPayPerLeadFee")
	private AmountType classifiedAdPayPerLeadFee;
	
	@Element(name = "BidGroupItem")
	private Boolean bidGroupItem;
	
	@Element(name = "ApplyBuyerProtection")
	private BuyerProtectionDetailsType applyBuyerProtection;
	
	@Element(name = "ListingSubtype2")
	private ListingSubtypeCodeType listingSubtype2;
	
	@Element(name = "MechanicalCheckAccepted")
	private Boolean mechanicalCheckAccepted;
	
	@Element(name = "UpdateSellerInfo")
	private Boolean updateSellerInfo;
	
	@Element(name = "UpdateReturnPolicy")
	private Boolean updateReturnPolicy;
	
	@Element(name = "ItemPolicyViolation")
	private ItemPolicyViolationType itemPolicyViolation;
	
	@Element(name = "CrossBorderTrade")
	private List<String> crossBorderTrade;
	
	@Element(name = "BusinessSellerDetails")
	private BusinessSellerDetailsType businessSellerDetails;
	
	@Element(name = "BuyerGuaranteePrice")
	private AmountType buyerGuaranteePrice;
	
	@Element(name = "BuyerRequirementDetails")
	private BuyerRequirementDetailsType buyerRequirementDetails;
	
	@Element(name = "ReturnPolicy")
	private ReturnPolicyType returnPolicy;
	
	@Element(name = "PaymentAllowedSite")
	private List<SiteCodeType> paymentAllowedSite;
	
	@Element(name = "InventoryTrackingMethod")
	private InventoryTrackingMethodCodeType inventoryTrackingMethod;
	
	@Element(name = "IntegratedMerchantCreditCardEnabled")
	private Boolean integratedMerchantCreditCardEnabled;
	
	@Element(name = "Variations")
	private VariationsType variations;
	
	@Element(name = "ItemCompatibilityList")
	private ItemCompatibilityListType itemCompatibilityList;
	
	@Element(name = "ItemCompatibilityCount")
	private Integer itemCompatibilityCount;
	
	@Element(name = "ConditionID")
	private Integer conditionID;
	
	@Element(name = "ConditionDescription")
	private String conditionDescription;
	
	@Element(name = "ConditionDisplayName")
	private String conditionDisplayName;
	
	@Element(name = "TaxCategory")
	private String taxCategory;
	
	@Element(name = "QuantityAvailableHint")
	private QuantityAvailableHintCodeType quantityAvailableHint;
	
	@Element(name = "QuantityThreshold")
	private Integer quantityThreshold;
	
	@Element(name = "PostCheckoutExperienceEnabled")
	private Boolean postCheckoutExperienceEnabled;
	
	@Element(name = "DiscountPriceInfo")
	private DiscountPriceInfoType discountPriceInfo;
	
	@Element(name = "UseRecommendedProduct")
	private Boolean useRecommendedProduct;
	
	@Element(name = "SellerProvidedTitle")
	private String sellerProvidedTitle;
	
	@Element(name = "VIN")
	private String vin;
	
	@Element(name = "VINLink")
	private String vinLink;
	
	@Element(name = "VRM")
	private String vrm;
	
	@Element(name = "VRMLink")
	private String vrmLink;
	
	@Element(name = "QuantityInfo")
	private QuantityInfoType quantityInfo;
	
	@Element(name = "SellerProfiles")
	private SellerProfilesType sellerProfiles;
	
	@Element(name = "ShippingPackageDetails")
	private ShipPackageDetailsType shippingPackageDetails;
	
	@Element(name = "TopRatedListing")
	private Boolean topRatedListing;
	
	@Element(name = "FloorPrice")
	private AmountType floorPrice;
	
	@Element(name = "CeilingPrice")
	private AmountType ceilingPrice;
	
	@Element(name = "QuantityRestrictionPerBuyer")
	private QuantityRestrictionPerBuyerInfoType quantityRestrictionPerBuyer;
	
	@Element(name = "IsIntermediatedShippingEligible")
	private Boolean isIntermediatedShippingEligible;
	
	@Element(name = "UnitInfo")
	private UnitInfoType unitInfo;
	
	@Element(name = "RelistParentID")
	private Long relistParentID;
	
	@Element(name = "ConditionDefinition")
	private String conditionDefinition;
	
	@Element(name = "HideFromSearch")
	private Boolean hideFromSearch;
	
	@Element(name = "ReasonHideFromSearch")
	private ReasonHideFromSearchCodeType reasonHideFromSearch;
	
    
	/**
     * public getter
     *
     * 
     * Returns custom, application-specific data associated with the item.
     * The data you specify is stored by eBay with the item for your own
     * reference, but it is not used by eBay in any way. Use
     * ApplicationData to store special information for yourself, such as
     * a part number. For a SKU in an eBay.com listing, use the SKU
     * element instead. To remove this value when revising or relisting an
     * item, use DeletedField.
     * <br>
     * <br>
     * Not applicable to Half.com, use SellerInventoryID instead.
     * 
     *
     * @returns java.lang.String
	 */
	public String getApplicationData() {
	    return this.applicationData;
	}
	
	/**
	 * public setter
	 *
     * 
     * Returns custom, application-specific data associated with the item.
     * The data you specify is stored by eBay with the item for your own
     * reference, but it is not used by eBay in any way. Use
     * ApplicationData to store special information for yourself, such as
     * a part number. For a SKU in an eBay.com listing, use the SKU
     * element instead. To remove this value when revising or relisting an
     * item, use DeletedField.
     * <br>
     * <br>
     * Not applicable to Half.com, use SellerInventoryID instead.
     * 
     *
     * @param java.lang.String
	 */
	public void setApplicationData(String applicationData) {
	    this.applicationData = applicationData;
	}
	/**
     * public getter
     *
     * 
     * No longer applicable to any categories.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AttributeSetArrayType
	 */
	public AttributeSetArrayType getAttributeSetArray() {
	    return this.attributeSetArray;
	}
	
	/**
	 * public setter
	 *
     * 
     * No longer applicable to any categories.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AttributeSetArrayType
	 */
	public void setAttributeSetArray(AttributeSetArrayType attributeSetArray) {
	    this.attributeSetArray = attributeSetArray;
	}
	/**
     * public getter
     *
     * 
     * This container is used to specify one or more item attributes for a Half.com listing. This
     * container is not applicable for eBay fixed-price or auction listings.
     * <br><br>
     * You can use <b>ReviseItem</b> to modify attribute values for Half.com
     * listings.
     * <br><br>
     * Half.com listing attributes are not returned in <b>GetItem</b>.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AttributeArrayType
	 */
	public AttributeArrayType getAttributeArray() {
	    return this.attributeArray;
	}
	
	/**
	 * public setter
	 *
     * 
     * This container is used to specify one or more item attributes for a Half.com listing. This
     * container is not applicable for eBay fixed-price or auction listings.
     * <br><br>
     * You can use <b>ReviseItem</b> to modify attribute values for Half.com
     * listings.
     * <br><br>
     * Half.com listing attributes are not returned in <b>GetItem</b>.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AttributeArrayType
	 */
	public void setAttributeArray(AttributeArrayType attributeArray) {
	    this.attributeArray = attributeArray;
	}
	/**
     * public getter
     *
     * 
     * No longer applicable to any category. Use ConditionID instead.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.LookupAttributeArrayType
	 */
	public LookupAttributeArrayType getLookupAttributeArray() {
	    return this.lookupAttributeArray;
	}
	
	/**
	 * public setter
	 *
     * 
     * No longer applicable to any category. Use ConditionID instead.
     * 
     *
     * @param ebay.apis.eblbasecomponents.LookupAttributeArrayType
	 */
	public void setLookupAttributeArray(LookupAttributeArrayType lookupAttributeArray) {
	    this.lookupAttributeArray = lookupAttributeArray;
	}
	/**
     * public getter
     *
     * 
     * To create an immediate payment listing, <b>AutoPay</b> must be included and
     * set to 'true' for the Add/Revise/Relist API calls. If the seller does not want to create an
     * immediate payment item, this field is either omitted, or included and set to 'false'.
     * <br>
     * <br>
     * In the Trading API calls that return the <b>AutoPay</b> field, be aware that
     * the field's appearance in the output does not necessarily indicate that the listing
     * contains an immediate payment item, but only that the seller attempted to enable (by
     * including and setting <b>AutoPay</b> to 'true' in the request) the immediate
     * payment option.
     * <br>
     * <br>
     * In order for a seller to apply an immediate payment policy for an item, the following must
     * be true:
     * <ul>
     * <li>seller must have a Premier or Business PayPal account;</li>
     * <li>seller must provide a valid <b>Item.PayPalEmailAddress</b> value;</li>
     * <li>seller must offer 'PayPal' as the only <b>Item.PaymentMethod</b> value;</li>
     * <li>the listing site supports PayPal payments;</li>
     * <li>the category supports PayPal payments;</li>
     * <li>the listing type is fixed-price or auction (with Buy It Now option)</li>
     * </ul>
     * <br>
     *  To discover if a category supports immediate payment for an item, use
     *  <b>GetCategories</b> and look for the appearance of
     *  the <b>AutoPayEnabled</b> boolean field in the output for that category
     *  (identified by <b>CategoryID</b>). <b>AutoPayEnabled</b> is
     * returned as an empty element if the category supports immediate payment, and is
     * not returned at all if the category does not support immediate payment.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getAutoPay() {
	    return this.autoPay;
	}
	
	/**
	 * public setter
	 *
     * 
     * To create an immediate payment listing, <b>AutoPay</b> must be included and
     * set to 'true' for the Add/Revise/Relist API calls. If the seller does not want to create an
     * immediate payment item, this field is either omitted, or included and set to 'false'.
     * <br>
     * <br>
     * In the Trading API calls that return the <b>AutoPay</b> field, be aware that
     * the field's appearance in the output does not necessarily indicate that the listing
     * contains an immediate payment item, but only that the seller attempted to enable (by
     * including and setting <b>AutoPay</b> to 'true' in the request) the immediate
     * payment option.
     * <br>
     * <br>
     * In order for a seller to apply an immediate payment policy for an item, the following must
     * be true:
     * <ul>
     * <li>seller must have a Premier or Business PayPal account;</li>
     * <li>seller must provide a valid <b>Item.PayPalEmailAddress</b> value;</li>
     * <li>seller must offer 'PayPal' as the only <b>Item.PaymentMethod</b> value;</li>
     * <li>the listing site supports PayPal payments;</li>
     * <li>the category supports PayPal payments;</li>
     * <li>the listing type is fixed-price or auction (with Buy It Now option)</li>
     * </ul>
     * <br>
     *  To discover if a category supports immediate payment for an item, use
     *  <b>GetCategories</b> and look for the appearance of
     *  the <b>AutoPayEnabled</b> boolean field in the output for that category
     *  (identified by <b>CategoryID</b>). <b>AutoPayEnabled</b> is
     * returned as an empty element if the category supports immediate payment, and is
     * not returned at all if the category does not support immediate payment.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setAutoPay(Boolean autoPay) {
	    this.autoPay = autoPay;
	}
	/**
     * public getter
     *
     * 
     * This container is used by the seller to specify amounts and due dates for deposits and
     * full payment on motor vehicle listings.
     * <br>
     * <br>
     * The PaymentDetails container and its child fields are only applicable to vehicle listings
     * on eBay Motors (US and CA).
     * 
     *
     * @returns ebay.apis.eblbasecomponents.PaymentDetailsType
	 */
	public PaymentDetailsType getPaymentDetails() {
	    return this.paymentDetails;
	}
	
	/**
	 * public setter
	 *
     * 
     * This container is used by the seller to specify amounts and due dates for deposits and
     * full payment on motor vehicle listings.
     * <br>
     * <br>
     * The PaymentDetails container and its child fields are only applicable to vehicle listings
     * on eBay Motors (US and CA).
     * 
     *
     * @param ebay.apis.eblbasecomponents.PaymentDetailsType
	 */
	public void setPaymentDetails(PaymentDetailsType paymentDetails) {
	    this.paymentDetails = paymentDetails;
	}
	/**
     * public getter
     *
     * 
     * Detailed information about a bid. For GetMyeBayBuying, returned as
     * a self-closed element if no bids meet the request criteria.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.BiddingDetailsType
	 */
	public BiddingDetailsType getBiddingDetails() {
	    return this.biddingDetails;
	}
	
	/**
	 * public setter
	 *
     * 
     * Detailed information about a bid. For GetMyeBayBuying, returned as
     * a self-closed element if no bids meet the request criteria.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.BiddingDetailsType
	 */
	public void setBiddingDetails(BiddingDetailsType biddingDetails) {
	    this.biddingDetails = biddingDetails;
	}
	/**
     * public getter
     *
     * 
     * Listing upgrade that features the item in eBay search results on
     * the mobile.de partner site. Applicable to eBay Germany.
     * <br>
     * <br>
     * If 'true' in listing requests and responses, the seller is purchasing
     * or has purchased cross-promotional placement on the mobile.de site.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getMotorsGermanySearchable() {
	    return this.motorsGermanySearchable;
	}
	
	/**
	 * public setter
	 *
     * 
     * Listing upgrade that features the item in eBay search results on
     * the mobile.de partner site. Applicable to eBay Germany.
     * <br>
     * <br>
     * If 'true' in listing requests and responses, the seller is purchasing
     * or has purchased cross-promotional placement on the mobile.de site.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setMotorsGermanySearchable(Boolean motorsGermanySearchable) {
	    this.motorsGermanySearchable = motorsGermanySearchable;
	}
	/**
     * public getter
     *
     * 
     * Flag to indicate an item's eligibility for the PayPal Buyer Protection
     * program. This field is only returned if 'true'. If this field is not returned, the item is not eligible for PayPal Buyer Protection. For more information on
     * items that are eligible for PayPal Buyer Protection, see the
     * <a href="http://pages.ebay.com/help/buy/paypal-buyer-protection.html#paypal">PayPal Buyer Protection</a> help page.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.BuyerProtectionCodeType
	 */
	public BuyerProtectionCodeType getBuyerProtection() {
	    return this.buyerProtection;
	}
	
	/**
	 * public setter
	 *
     * 
     * Flag to indicate an item's eligibility for the PayPal Buyer Protection
     * program. This field is only returned if 'true'. If this field is not returned, the item is not eligible for PayPal Buyer Protection. For more information on
     * items that are eligible for PayPal Buyer Protection, see the
     * <a href="http://pages.ebay.com/help/buy/paypal-buyer-protection.html#paypal">PayPal Buyer Protection</a> help page.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.BuyerProtectionCodeType
	 */
	public void setBuyerProtection(BuyerProtectionCodeType buyerProtection) {
	    this.buyerProtection = buyerProtection;
	}
	/**
     * public getter
     *
     * 
     * For auction listings, the Buy It Now feature allows a user to purchase the item at a Buy
     * It Now price and end the auction immediately. Use this field to specify the Buy It Now
     * price. Including and specifying a <b>BuyItNowPrice</b> value enables the
     * Buy It Now feature for the auction listing.
     * <br><br>
     * There is a minimum percentage value that the Buy It Now price must be set above
     * the Start Price. This minimum percentage value varies by site. To see the valid values
     * for your site, call <b>GeteBayDetails</b> with <b>DetailName</b> set to <b>ListingStartPriceDetails</b>,
     * and then look for the ListingStartPriceDetails.MinBuyItNowPricePercent field in the response.
     * If this value is 40.0 (percent), that means that your Buy It Now price on your auction listing must exceed the Start Price by 40 percent to be valid.<br><br>
     * <br><br>
     * This feature is not applicable to fixed-price listings, Ad Format listings, or Half.com
     * listings.
     * <br><br>
     * Once an auction has bids (and the high bid exceeds the Reserve Price,
     * if specified), the listing is no longer eligible for Buy It Now (with some
     * exceptions noted below). However, calls like GetItem
     * still return the <b>BuyItNowPrice</b> that the seller originally set for the
     * listing. Use the <b>GetItem</b> call and look for the inclusion of the
     * <b>Item.ListingDetails.BuyItNowAvailable</b> flag in the output to determine
     * whether the item can still be purchased using Buy It Now. You can also view the
     * <b>Item.SellingStatus.BidCount</b> value in other item retrieval
     * calls to determine whether an auction with Buy It Now has bids or not.
     * <br><br>
     * There might be price limits imposed for Buy It Now items, subject to the
     * seller's PayPal account or the payment method used. Such limits cannot be
     * determined via the eBay API and are not covered in eBay's API documentation
     * because they can vary for each user.
     * <br><br>
     * To remove this value when revising or relisting an item, use <b>DeletedField</b>.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getBuyItNowPrice() {
	    return this.buyItNowPrice;
	}
	
	/**
	 * public setter
	 *
     * 
     * For auction listings, the Buy It Now feature allows a user to purchase the item at a Buy
     * It Now price and end the auction immediately. Use this field to specify the Buy It Now
     * price. Including and specifying a <b>BuyItNowPrice</b> value enables the
     * Buy It Now feature for the auction listing.
     * <br><br>
     * There is a minimum percentage value that the Buy It Now price must be set above
     * the Start Price. This minimum percentage value varies by site. To see the valid values
     * for your site, call <b>GeteBayDetails</b> with <b>DetailName</b> set to <b>ListingStartPriceDetails</b>,
     * and then look for the ListingStartPriceDetails.MinBuyItNowPricePercent field in the response.
     * If this value is 40.0 (percent), that means that your Buy It Now price on your auction listing must exceed the Start Price by 40 percent to be valid.<br><br>
     * <br><br>
     * This feature is not applicable to fixed-price listings, Ad Format listings, or Half.com
     * listings.
     * <br><br>
     * Once an auction has bids (and the high bid exceeds the Reserve Price,
     * if specified), the listing is no longer eligible for Buy It Now (with some
     * exceptions noted below). However, calls like GetItem
     * still return the <b>BuyItNowPrice</b> that the seller originally set for the
     * listing. Use the <b>GetItem</b> call and look for the inclusion of the
     * <b>Item.ListingDetails.BuyItNowAvailable</b> flag in the output to determine
     * whether the item can still be purchased using Buy It Now. You can also view the
     * <b>Item.SellingStatus.BidCount</b> value in other item retrieval
     * calls to determine whether an auction with Buy It Now has bids or not.
     * <br><br>
     * There might be price limits imposed for Buy It Now items, subject to the
     * seller's PayPal account or the payment method used. Such limits cannot be
     * determined via the eBay API and are not covered in eBay's API documentation
     * because they can vary for each user.
     * <br><br>
     * To remove this value when revising or relisting an item, use <b>DeletedField</b>.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setBuyItNowPrice(AmountType buyItNowPrice) {
	    this.buyItNowPrice = buyItNowPrice;
	}
	/**
     * public getter
     *
     * 
     * Controls how eBay handles cases in which an ID specified in
     * <b>PrimaryCategory</b> and/or <b>SecondaryCategory</b> no longer
     * exists in the current category structure: If you pass a value of 'true' in
     * <b>CategoryMappingAllowed</b>, eBay will look up the current category ID that
     * is mapped to the same category and use the new category ID for the listing (if any). The
     * new category ID will be returned in the response as <b>CategoryID</b> (for
     * the primary category) or <b>Category2ID</b> (for the secondary category). If
     * <b>CategoryMappingAllowed</b> is not set or contains a value of 'false' (the
     * default), an error will be returned if a selected category ID no longer exists.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getCategoryMappingAllowed() {
	    return this.categoryMappingAllowed;
	}
	
	/**
	 * public setter
	 *
     * 
     * Controls how eBay handles cases in which an ID specified in
     * <b>PrimaryCategory</b> and/or <b>SecondaryCategory</b> no longer
     * exists in the current category structure: If you pass a value of 'true' in
     * <b>CategoryMappingAllowed</b>, eBay will look up the current category ID that
     * is mapped to the same category and use the new category ID for the listing (if any). The
     * new category ID will be returned in the response as <b>CategoryID</b> (for
     * the primary category) or <b>Category2ID</b> (for the secondary category). If
     * <b>CategoryMappingAllowed</b> is not set or contains a value of 'false' (the
     * default), an error will be returned if a selected category ID no longer exists.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setCategoryMappingAllowed(Boolean categoryMappingAllowed) {
	    this.categoryMappingAllowed = categoryMappingAllowed;
	}
	/**
     * public getter
     *
     * 
     * Identifies a Giving Works listing and the benefiting nonprofit charity
     * organization selected by the charity seller (if any). If specified, the
     * seller must also accept PayPal as a payment method for the item (see
     * <b>Item.PaymentMethods</b>).
     * <br><br>
     * When you revise an item, you can add a charity to a non-charity listing, but
     * you cannot remove or change the charity designation. The rules for adding a
     * charity to a listing depend on the listing type. For an auction listing, you
     * can revise an item to add a charity if there are more than 12 hours left for
     * the listing (whether or not the item has bids). For a fixed-price listing,
     * you can revise an item to add a charity if there are more than 12 hours left
     * for the listing, and the item has not been sold.
     * <br><br>
     * When you relist an item, use <b>DeletedField</b> to remove charity
     * information.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.CharityType
	 */
	public CharityType getCharity() {
	    return this.charity;
	}
	
	/**
	 * public setter
	 *
     * 
     * Identifies a Giving Works listing and the benefiting nonprofit charity
     * organization selected by the charity seller (if any). If specified, the
     * seller must also accept PayPal as a payment method for the item (see
     * <b>Item.PaymentMethods</b>).
     * <br><br>
     * When you revise an item, you can add a charity to a non-charity listing, but
     * you cannot remove or change the charity designation. The rules for adding a
     * charity to a listing depend on the listing type. For an auction listing, you
     * can revise an item to add a charity if there are more than 12 hours left for
     * the listing (whether or not the item has bids). For a fixed-price listing,
     * you can revise an item to add a charity if there are more than 12 hours left
     * for the listing, and the item has not been sold.
     * <br><br>
     * When you relist an item, use <b>DeletedField</b> to remove charity
     * information.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.CharityType
	 */
	public void setCharity(CharityType charity) {
	    this.charity = charity;
	}
	/**
     * public getter
     *
     * 
     * Defines the 2-letter country code set.
     * <br><br>
     * To see the list of currently supported country
     * codes, and the English names associated with each code (e.g., KY="Cayman Islands"),
     * call <b>GeteBayDetails</b> with <b>DetailName</b> set to <b>CountryDetails</b>,
     * and then look for CountryDetails.Country fields in the response.
     * <br><br>
     * Most of the codes that eBay uses conform to the ISO 3166 standard, but some of the
     * codes in the ISO 3166 standard are not used by eBay. Plus, there are some non-ISO
     * codes in the eBay list. (Additional codes appear at the end of this code list and
     * are noted as non-ISO.)
     * <br><br>
     *   Also applicable as input to <b>AddItem</b> and related calls when you list
     * items to Half.com (specify 'US').
     * 
     *
     * @returns ebay.apis.eblbasecomponents.CountryCodeType
	 */
	public CountryCodeType getCountry() {
	    return this.country;
	}
	
	/**
	 * public setter
	 *
     * 
     * Defines the 2-letter country code set.
     * <br><br>
     * To see the list of currently supported country
     * codes, and the English names associated with each code (e.g., KY="Cayman Islands"),
     * call <b>GeteBayDetails</b> with <b>DetailName</b> set to <b>CountryDetails</b>,
     * and then look for CountryDetails.Country fields in the response.
     * <br><br>
     * Most of the codes that eBay uses conform to the ISO 3166 standard, but some of the
     * codes in the ISO 3166 standard are not used by eBay. Plus, there are some non-ISO
     * codes in the eBay list. (Additional codes appear at the end of this code list and
     * are noted as non-ISO.)
     * <br><br>
     *   Also applicable as input to <b>AddItem</b> and related calls when you list
     * items to Half.com (specify 'US').
     * 
     *
     * @param ebay.apis.eblbasecomponents.CountryCodeType
	 */
	public void setCountry(CountryCodeType country) {
	    this.country = country;
	}
	/**
     * public getter
     *
     * 
     * This container is no longer supported as eBay Store Cross Promotions are no
     * longer supported by the Trading API.
     * <br><br>
     * Container for cross-promoted items related to a specific item ID.
     * The items are either upsell or cross-sell, according to the promotion
     * method passed in the request.
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.CrossPromotionsType
	 */
	public CrossPromotionsType getCrossPromotion() {
	    return this.crossPromotion;
	}
	
	/**
	 * public setter
	 *
     * 
     * This container is no longer supported as eBay Store Cross Promotions are no
     * longer supported by the Trading API.
     * <br><br>
     * Container for cross-promoted items related to a specific item ID.
     * The items are either upsell or cross-sell, according to the promotion
     * method passed in the request.
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.CrossPromotionsType
	 */
	public void setCrossPromotion(CrossPromotionsType crossPromotion) {
	    this.crossPromotion = crossPromotion;
	}
	/**
     * public getter
     *
     * 
     * Currency associated with the item's price information. 3-letter ISO 4217
     * currency code that corresponds to the site specified in the listing
     * request. Also applicable as input to <b>AddItem</b> and related calls when you list
     * items to Half.com (specify USD). You cannot modify a listing's currency when
     * you revise or relist an item.
     * <br><br>
     * To see the list of currently supported currency codes, call <b>GeteBayDetails</b>
     * with <b>DetailName</b> set to <b>CurrencyDetails</b>, and then look
     * for the CurrencyDetails.Currency fields in the response.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.CurrencyCodeType
	 */
	public CurrencyCodeType getCurrency() {
	    return this.currency;
	}
	
	/**
	 * public setter
	 *
     * 
     * Currency associated with the item's price information. 3-letter ISO 4217
     * currency code that corresponds to the site specified in the listing
     * request. Also applicable as input to <b>AddItem</b> and related calls when you list
     * items to Half.com (specify USD). You cannot modify a listing's currency when
     * you revise or relist an item.
     * <br><br>
     * To see the list of currently supported currency codes, call <b>GeteBayDetails</b>
     * with <b>DetailName</b> set to <b>CurrencyDetails</b>, and then look
     * for the CurrencyDetails.Currency fields in the response.
     * 
     *
     * @param ebay.apis.eblbasecomponents.CurrencyCodeType
	 */
	public void setCurrency(CurrencyCodeType currency) {
	    this.currency = currency;
	}
	/**
     * public getter
     *
     * 
     * The seller's description of the item. 
     *         
     * In listing requests, you can submit your description
     * using CDATA if you want to use HTML or XML-reserved characters in the
     * description. An error is returned if this contains malicious JavaScript
     * content. (For more information on eBay's HTML and JavaScript policy, see the
     * <a href="http://pages.ebay.com/help/policies/listing-javascript.html">HTML and JavaScript policy</a>
     * help topic.)
     * <br><br>
     * If you embed pictures in the description (by using IMG tags) instead of using
     * <b>PictureURL</b>, but you want a camera icon to appear in search and listing pages,
     * specify the following null-image URL in PictureURL:
     * http://pics.ebay.com/aw/pics/dot_clear.gif. See "Including Pictures in an Item
     * Listing" in the Trading API Guide.
     * <br><br>
     * Required for all listings, except listings that include eBay catalog product details. Optional when you list with product details and Item.ProductListingDetails.IncludePrefilledItemInformation is true.
     * <br><br>
     * <span class="tablenote"><b>Note:</b>
     * In addition to including notes on flaws or wear and tear on an used item in the
     * <b>Item.Description</b>, and including a <b>ConditionID</b>
     * value, you can provide additional information about the condition of your used item
     * through the <b>Item.ConditionDescription</b> string field.
     * </span>
     * <br>
     * <b>For GetItem</b>: Item.Description
     * can be empty when IncludePrefilledItemInformation is true and
     * the seller did not write their own description. Item.Description doesn't return pre-filled descriptions from catalogs.
     * The eBay site shows the catalog product description (if any) in the
     * product details section of a listing.
     * To retrieve a URL for the catalog product details page,
     * see DetailsURL in FindProducts in the
     * Shopping API.
     * <br><br>
     * Not applicable to Half.com. (For Half.com, use AttributeArray.Attribute with
     * attributeLabel="Notes" to specify a brief description or note to the buyer.)
     * 
     *
     * @returns java.lang.String
	 */
	public String getDescription() {
	    return this.description;
	}
	
	/**
	 * public setter
	 *
     * 
     * The seller's description of the item. 
     *         
     * In listing requests, you can submit your description
     * using CDATA if you want to use HTML or XML-reserved characters in the
     * description. An error is returned if this contains malicious JavaScript
     * content. (For more information on eBay's HTML and JavaScript policy, see the
     * <a href="http://pages.ebay.com/help/policies/listing-javascript.html">HTML and JavaScript policy</a>
     * help topic.)
     * <br><br>
     * If you embed pictures in the description (by using IMG tags) instead of using
     * <b>PictureURL</b>, but you want a camera icon to appear in search and listing pages,
     * specify the following null-image URL in PictureURL:
     * http://pics.ebay.com/aw/pics/dot_clear.gif. See "Including Pictures in an Item
     * Listing" in the Trading API Guide.
     * <br><br>
     * Required for all listings, except listings that include eBay catalog product details. Optional when you list with product details and Item.ProductListingDetails.IncludePrefilledItemInformation is true.
     * <br><br>
     * <span class="tablenote"><b>Note:</b>
     * In addition to including notes on flaws or wear and tear on an used item in the
     * <b>Item.Description</b>, and including a <b>ConditionID</b>
     * value, you can provide additional information about the condition of your used item
     * through the <b>Item.ConditionDescription</b> string field.
     * </span>
     * <br>
     * <b>For GetItem</b>: Item.Description
     * can be empty when IncludePrefilledItemInformation is true and
     * the seller did not write their own description. Item.Description doesn't return pre-filled descriptions from catalogs.
     * The eBay site shows the catalog product description (if any) in the
     * product details section of a listing.
     * To retrieve a URL for the catalog product details page,
     * see DetailsURL in FindProducts in the
     * Shopping API.
     * <br><br>
     * Not applicable to Half.com. (For Half.com, use AttributeArray.Attribute with
     * attributeLabel="Notes" to specify a brief description or note to the buyer.)
     * 
     *
     * @param java.lang.String
	 */
	public void setDescription(String description) {
	    this.description = description;
	}
	/**
     * public getter
     *
     * 
     * This field is applicable if you are modifying the item description. The value
     * selected for this field will determine if the new text entered into the <b>
     * Item.Description</b> field is added before (Prepend) or after (Append) the
     * current text in the item description, or if the new text completely replaces the
     * current text in the item description.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.DescriptionReviseModeCodeType
	 */
	public DescriptionReviseModeCodeType getDescriptionReviseMode() {
	    return this.descriptionReviseMode;
	}
	
	/**
	 * public setter
	 *
     * 
     * This field is applicable if you are modifying the item description. The value
     * selected for this field will determine if the new text entered into the <b>
     * Item.Description</b> field is added before (Prepend) or after (Append) the
     * current text in the item description, or if the new text completely replaces the
     * current text in the item description.
     * 
     *
     * @param ebay.apis.eblbasecomponents.DescriptionReviseModeCodeType
	 */
	public void setDescriptionReviseMode(DescriptionReviseModeCodeType descriptionReviseMode) {
	    this.descriptionReviseMode = descriptionReviseMode;
	}
	/**
     * public getter
     *
     * 
     * The distance used in a proximity search distance calculation.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.DistanceType
	 */
	public DistanceType getDistance() {
	    return this.distance;
	}
	
	/**
	 * public setter
	 *
     * 
     * The distance used in a proximity search distance calculation.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.DistanceType
	 */
	public void setDistance(DistanceType distance) {
	    this.distance = distance;
	}
	/**
     * public getter
     *
     * 
     * If turned on at listing time, this flag allows the seller to offer one or more gift
     * services to buyers, and a generic gift icon displays next to the listing's title in Search
     * and View Item pages. <b>GiftIcon</b> must be included at listing time and
     * set to '1' to be able to use one or more <b>GiftServices</b>
     * options. The value of '1' indicates that this feature is on, and the value of '0'
     * indicates that the feature is off.
     * <br><br>
     * Gift Services are only available on the following eBay sites:
     * <ul>
     * <li>Belgium (Dutch)</li>
     * <li>Belgium (French)</li>
     * <li>France</li>
     * <li>Italy</li>
     * <li>Netherlands</li>
     * <li>Poland</li>
     * <li>Spain</li>
     * </ul>
     * <br><br>
     * To verify if Gift Services are enabled for an eBay site, call , call <b>GeteBayDetails</b>
     * with <b>DetailName</b> set to <b>ListingFeatureDetails</b>.
     * Then look for GiftIcon=Enabled under the ListingFeatureDetails container in the response.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getGiftIcon() {
	    return this.giftIcon;
	}
	
	/**
	 * public setter
	 *
     * 
     * If turned on at listing time, this flag allows the seller to offer one or more gift
     * services to buyers, and a generic gift icon displays next to the listing's title in Search
     * and View Item pages. <b>GiftIcon</b> must be included at listing time and
     * set to '1' to be able to use one or more <b>GiftServices</b>
     * options. The value of '1' indicates that this feature is on, and the value of '0'
     * indicates that the feature is off.
     * <br><br>
     * Gift Services are only available on the following eBay sites:
     * <ul>
     * <li>Belgium (Dutch)</li>
     * <li>Belgium (French)</li>
     * <li>France</li>
     * <li>Italy</li>
     * <li>Netherlands</li>
     * <li>Poland</li>
     * <li>Spain</li>
     * </ul>
     * <br><br>
     * To verify if Gift Services are enabled for an eBay site, call , call <b>GeteBayDetails</b>
     * with <b>DetailName</b> set to <b>ListingFeatureDetails</b>.
     * Then look for GiftIcon=Enabled under the ListingFeatureDetails container in the response.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setGiftIcon(Integer giftIcon) {
	    this.giftIcon = giftIcon;
	}
	/**
     * public getter
     *
     * 
     * This field allows the seller to offer optional gift services to the buyer. To offer
     * one or more gift services to the buyer through an Add/Revise/Relist API call, the seller
     * must also include the GiftIcon field and set that flag to 'true'.
     * <br><br>
     * Gift Services are only available on the following eBay sites:
     * <ul>
     * <li>Belgium (Dutch)</li>
     * <li>Belgium (French)</li>
     * <li>France</li>
     * <li>Italy</li>
     * <li>Netherlands</li>
     * <li>Poland</li>
     * <li>Spain</li>
     * </ul>
     * <br><br>
     * This field is only returned in GetItem (and other calls that retrieve Item object)
     * if it is set for the listing.
     * <br><br>
     * To verify if Gift Services are enabled for an eBay site, call <b>GeteBayDetails</b>
     * with <b>DetailName</b> set to <b>ListingFeatureDetails</b>.
     * Then look for GiftIcon=Enabled under the
     * ListingFeatureDetails container in the response.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.GiftServicesCodeType>
	 */
	public List<GiftServicesCodeType> getGiftServices() {
	    return this.giftServices;
	}
	
	/**
	 * public setter
	 *
     * 
     * This field allows the seller to offer optional gift services to the buyer. To offer
     * one or more gift services to the buyer through an Add/Revise/Relist API call, the seller
     * must also include the GiftIcon field and set that flag to 'true'.
     * <br><br>
     * Gift Services are only available on the following eBay sites:
     * <ul>
     * <li>Belgium (Dutch)</li>
     * <li>Belgium (French)</li>
     * <li>France</li>
     * <li>Italy</li>
     * <li>Netherlands</li>
     * <li>Poland</li>
     * <li>Spain</li>
     * </ul>
     * <br><br>
     * This field is only returned in GetItem (and other calls that retrieve Item object)
     * if it is set for the listing.
     * <br><br>
     * To verify if Gift Services are enabled for an eBay site, call <b>GeteBayDetails</b>
     * with <b>DetailName</b> set to <b>ListingFeatureDetails</b>.
     * Then look for GiftIcon=Enabled under the
     * ListingFeatureDetails container in the response.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.GiftServicesCodeType>
	 */
	public void setGiftServices(List<GiftServicesCodeType> giftServices) {
	    this.giftServices = giftServices;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether an optional hit counter is displayed on the item's listing
     * page and, if so, what type. See HitCounterCodeType for specific values.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.HitCounterCodeType
	 */
	public HitCounterCodeType getHitCounter() {
	    return this.hitCounter;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether an optional hit counter is displayed on the item's listing
     * page and, if so, what type. See HitCounterCodeType for specific values.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.HitCounterCodeType
	 */
	public void setHitCounter(HitCounterCodeType hitCounter) {
	    this.hitCounter = hitCounter;
	}
	/**
     * public getter
     *
     * 
     * The ID that uniquely identifies the item listing. The ID is generated
     * by eBay after an item is listed. You cannot choose or revise this
     * value.<br>
     * <br>
     * Also applicable to Half.com. For Half.com, you can specify either ItemID or
     * SellerInventoryID in a ReviseItem request to uniquely identify the
     * listing.<br>
     * <br>
     * In order retrieval calls (such as, GetOrders), use the OrderLineItemID (which is a concatenation of ItemID and
     * TransactionID to uniquely identify an order line item. With multi-quantity listings, a single ItemID can be associated
     * with more than one TransactionID. (For single-quantity listings, the TransactionID is 0.)<br>
     * <br>
     * In GetItemRecommendations, the item ID is required when the value of
     * ListingFlow is ReviseItem or RelistItem, but it is not applicable when the
     * value of ListingFlow is AddItem.<br>
     * <span class="tablenote"><b>Note:</b> Although we represent
     * item IDs as strings in the schema, we recommend you store them as 64-bit
     * signed integers. If you choose to store item IDs as strings, allocate at
     * least 19 characters (assuming decimal digits are used) to hold them. eBay
     * will increase the size of IDs over time. Your code should be prepared to
     * handle IDs of up to 19 digits. For more information about item IDs, see <a
     * href="http://ebay.custhelp.com/cgi-bin/ebay.cfg/php/enduser/std_adp.php?p_faqid=468">Common
     * FAQs on eBay Item IDs and other eBay IDs</a> in the Knowledge Base.</span>
     * 
     *
     * @returns java.lang.String
	 */
	public String getItemID() {
	    return this.itemID;
	}
	
	/**
	 * public setter
	 *
     * 
     * The ID that uniquely identifies the item listing. The ID is generated
     * by eBay after an item is listed. You cannot choose or revise this
     * value.<br>
     * <br>
     * Also applicable to Half.com. For Half.com, you can specify either ItemID or
     * SellerInventoryID in a ReviseItem request to uniquely identify the
     * listing.<br>
     * <br>
     * In order retrieval calls (such as, GetOrders), use the OrderLineItemID (which is a concatenation of ItemID and
     * TransactionID to uniquely identify an order line item. With multi-quantity listings, a single ItemID can be associated
     * with more than one TransactionID. (For single-quantity listings, the TransactionID is 0.)<br>
     * <br>
     * In GetItemRecommendations, the item ID is required when the value of
     * ListingFlow is ReviseItem or RelistItem, but it is not applicable when the
     * value of ListingFlow is AddItem.<br>
     * <span class="tablenote"><b>Note:</b> Although we represent
     * item IDs as strings in the schema, we recommend you store them as 64-bit
     * signed integers. If you choose to store item IDs as strings, allocate at
     * least 19 characters (assuming decimal digits are used) to hold them. eBay
     * will increase the size of IDs over time. Your code should be prepared to
     * handle IDs of up to 19 digits. For more information about item IDs, see <a
     * href="http://ebay.custhelp.com/cgi-bin/ebay.cfg/php/enduser/std_adp.php?p_faqid=468">Common
     * FAQs on eBay Item IDs and other eBay IDs</a> in the Knowledge Base.</span>
     * 
     *
     * @param java.lang.String
	 */
	public void setItemID(String itemID) {
	    this.itemID = itemID;
	}
	/**
     * public getter
     *
     * 
     * Various details about a listing, some of which are calculated or
     * derived after the item is listed. These include the start and end
     * time, converted (localized) prices, and certain flags that indicate
     * whether the seller specified fields whose values are not visible to
     * the requesting user. For GetMyeBayBuying, returned as a self-closed
     * element if no listings meet the request criteria.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ListingDetailsType
	 */
	public ListingDetailsType getListingDetails() {
	    return this.listingDetails;
	}
	
	/**
	 * public setter
	 *
     * 
     * Various details about a listing, some of which are calculated or
     * derived after the item is listed. These include the start and end
     * time, converted (localized) prices, and certain flags that indicate
     * whether the seller specified fields whose values are not visible to
     * the requesting user. For GetMyeBayBuying, returned as a self-closed
     * element if no listings meet the request criteria.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ListingDetailsType
	 */
	public void setListingDetails(ListingDetailsType listingDetails) {
	    this.listingDetails = listingDetails;
	}
	/**
     * public getter
     *
     * 
     * Contains the detail data for the Listing Designer theme and template (if either
     * are used), which can optionally be used to enhance the appearance of the
     * description area of an item's description. See ListingDesignerType for its
     * child elements.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ListingDesignerType
	 */
	public ListingDesignerType getListingDesigner() {
	    return this.listingDesigner;
	}
	
	/**
	 * public setter
	 *
     * 
     * Contains the detail data for the Listing Designer theme and template (if either
     * are used), which can optionally be used to enhance the appearance of the
     * description area of an item's description. See ListingDesignerType for its
     * child elements.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ListingDesignerType
	 */
	public void setListingDesigner(ListingDesignerType listingDesigner) {
	    this.listingDesigner = listingDesigner;
	}
	/**
     * public getter
     *
     * 
     * Describes the number of days the seller wants the listing to be active (available
     * for bidding/buying). The duration specifies the seller's initial intent at listing
     * time. The end time for a listing is calculated by adding the duration to the item's
     * start time. If the listing ends early, the value of the listing duration does not
     * change. When a listing's duration is changed, any related fees (e.g., 10-day fee)
     * may be debited or credited (as applicable).
     * <br><br>
     * The valid choice of values depends on the listing format (see Item.ListingType). For
     * a list of valid values, call GetCategoryFeatures with DetailLevel set to ReturnAll
     * and look for ListingDurations information. To set a duration of 1 day, the seller
     * must have a Feedback score of at least 10.
     * <br><br>
     * When you revise a listing, the duration cannot be reduced if it will result in
     * ending the listing within 24 hours of the current date-time. You are only allowed to
     * increase the duration of the listing if fewer than 2 hours have passed since you
     * initially listed the item and the listing has no bids. You can decrease the value of
     * this field only if the listing has no bids (or no items have sold) and the listing
     * does not end within 12 hours.
     * <br><br>
     * Required for Half.com (but only specify GTC).
     * 
     *
     * @returns java.lang.String
	 */
	public String getListingDuration() {
	    return this.listingDuration;
	}
	
	/**
	 * public setter
	 *
     * 
     * Describes the number of days the seller wants the listing to be active (available
     * for bidding/buying). The duration specifies the seller's initial intent at listing
     * time. The end time for a listing is calculated by adding the duration to the item's
     * start time. If the listing ends early, the value of the listing duration does not
     * change. When a listing's duration is changed, any related fees (e.g., 10-day fee)
     * may be debited or credited (as applicable).
     * <br><br>
     * The valid choice of values depends on the listing format (see Item.ListingType). For
     * a list of valid values, call GetCategoryFeatures with DetailLevel set to ReturnAll
     * and look for ListingDurations information. To set a duration of 1 day, the seller
     * must have a Feedback score of at least 10.
     * <br><br>
     * When you revise a listing, the duration cannot be reduced if it will result in
     * ending the listing within 24 hours of the current date-time. You are only allowed to
     * increase the duration of the listing if fewer than 2 hours have passed since you
     * initially listed the item and the listing has no bids. You can decrease the value of
     * this field only if the listing has no bids (or no items have sold) and the listing
     * does not end within 12 hours.
     * <br><br>
     * Required for Half.com (but only specify GTC).
     * 
     *
     * @param java.lang.String
	 */
	public void setListingDuration(String listingDuration) {
	    this.listingDuration = listingDuration;
	}
	/**
     * public getter
     *
     * 
     * This field can be used by the seller to activate one or more listing upgrades for a
     * listing, such as a Bold Title, a Subtitle, or a Value Pack bundle. A ListingEnhancement
     * field is required for each listing upgrade that the seller wants to activate.
     * There is a small fee associated with each listing upgrade.
     * See the
     * <a href="http://pages.ebay.com/help/sell/ia/promoting_your_item.html">Listing Upgrades</a> help page
     * for more information on the available listing upgrades.
     * <br><br>
     * The listing upgrades that are available vary by site and by the seller's account
     * status. To discover which listing upgrades are available, call <b>GeteBayDetails</b>
     * with <b>DetailName</b> set to <b>ListingFeatureDetails</b>
     * and pass in the appropriate SiteID value. Then look for the ListingFeatureDetails
     * container in the response. Listing upgrades will either be listed as 'Enabled' or
     * 'Disabled'.
     * <br><br>
     * GetItem (and other calls that retrieve Items) will only return this field if one
     * or more listing upgrades are set for the listing.
     * <br><br>
     * You cannot remove listing upgrades when you revise a listing. When you
     * relist an item, use DeletedField to remove a listing upgrade.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.ListingEnhancementsCodeType>
	 */
	public List<ListingEnhancementsCodeType> getListingEnhancement() {
	    return this.listingEnhancement;
	}
	
	/**
	 * public setter
	 *
     * 
     * This field can be used by the seller to activate one or more listing upgrades for a
     * listing, such as a Bold Title, a Subtitle, or a Value Pack bundle. A ListingEnhancement
     * field is required for each listing upgrade that the seller wants to activate.
     * There is a small fee associated with each listing upgrade.
     * See the
     * <a href="http://pages.ebay.com/help/sell/ia/promoting_your_item.html">Listing Upgrades</a> help page
     * for more information on the available listing upgrades.
     * <br><br>
     * The listing upgrades that are available vary by site and by the seller's account
     * status. To discover which listing upgrades are available, call <b>GeteBayDetails</b>
     * with <b>DetailName</b> set to <b>ListingFeatureDetails</b>
     * and pass in the appropriate SiteID value. Then look for the ListingFeatureDetails
     * container in the response. Listing upgrades will either be listed as 'Enabled' or
     * 'Disabled'.
     * <br><br>
     * GetItem (and other calls that retrieve Items) will only return this field if one
     * or more listing upgrades are set for the listing.
     * <br><br>
     * You cannot remove listing upgrades when you revise a listing. When you
     * relist an item, use DeletedField to remove a listing upgrade.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.ListingEnhancementsCodeType>
	 */
	public void setListingEnhancement(List<ListingEnhancementsCodeType> listingEnhancement) {
	    this.listingEnhancement = listingEnhancement;
	}
	/**
     * public getter
     *
     * 
     * The format of the listing the seller wants to use, such as auction style
     * or fixed price.<br>
     * <br>
     * Optional for eBay.com listings (defaults to auction style) in AddItem and
     * VerifyAddItem. Do not specify ListingType for eBay.com listings in
     * ReviseItem. (You can't modify the listing type of an active eBay
     * listing.<br>
     * <br>
     * Required for Half.com listings (and the value must be Half) in AddItem,
     * VerifyAddItem, and ReviseItem. If you don't specify Half when revising
     * Half.com listings, ReviseItem won't use the correct logic and you may
     * get strange errors (or unwanted side effects in the listing, even if no
     * errors are returned).
     * <br><br>
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ListingTypeCodeType
	 */
	public ListingTypeCodeType getListingType() {
	    return this.listingType;
	}
	
	/**
	 * public setter
	 *
     * 
     * The format of the listing the seller wants to use, such as auction style
     * or fixed price.<br>
     * <br>
     * Optional for eBay.com listings (defaults to auction style) in AddItem and
     * VerifyAddItem. Do not specify ListingType for eBay.com listings in
     * ReviseItem. (You can't modify the listing type of an active eBay
     * listing.<br>
     * <br>
     * Required for Half.com listings (and the value must be Half) in AddItem,
     * VerifyAddItem, and ReviseItem. If you don't specify Half when revising
     * Half.com listings, ReviseItem won't use the correct logic and you may
     * get strange errors (or unwanted side effects in the listing, even if no
     * errors are returned).
     * <br><br>
     * 
     *
     * @param ebay.apis.eblbasecomponents.ListingTypeCodeType
	 */
	public void setListingType(ListingTypeCodeType listingType) {
	    this.listingType = listingType;
	}
	/**
     * public getter
     *
     * 
     * Indicates the geographical location of the item (along with Country).
     * When you revise a listing, you can add or change this value only if the
     * listing has no bids (or no items have sold) and it does not end within
     * 12 hours.
     * <br><br>
     * If you do not specify Location, you must specify Item.PostalCode. If you
     * specify a postal code, but do not specify a location, then the location is
     * given a default value derived from the postal code.
     * <br><br>
     * For the Classified Ad format for eBay Motors vehicles, the value
     * provided in the Location is used as item location only if the
     * SellerContactDetails.Street and the SellerContactDetails.Street2 are empty.
     * Else, the SellerContactDetails.Street and the SellerContactDetails.Street2
     * will be used for item location.
     * <br><br>
     * Also applicable as input to AddItem and related calls when you list items
     * to Half.com.
     * 
     *
     * @returns java.lang.String
	 */
	public String getLocation() {
	    return this.location;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates the geographical location of the item (along with Country).
     * When you revise a listing, you can add or change this value only if the
     * listing has no bids (or no items have sold) and it does not end within
     * 12 hours.
     * <br><br>
     * If you do not specify Location, you must specify Item.PostalCode. If you
     * specify a postal code, but do not specify a location, then the location is
     * given a default value derived from the postal code.
     * <br><br>
     * For the Classified Ad format for eBay Motors vehicles, the value
     * provided in the Location is used as item location only if the
     * SellerContactDetails.Street and the SellerContactDetails.Street2 are empty.
     * Else, the SellerContactDetails.Street and the SellerContactDetails.Street2
     * will be used for item location.
     * <br><br>
     * Also applicable as input to AddItem and related calls when you list items
     * to Half.com.
     * 
     *
     * @param java.lang.String
	 */
	public void setLocation(String location) {
	    this.location = location;
	}
	/**
     * public getter
     *
     * 
     * A lot is a set of two or more similar items included in a single listing that must be
     * purchased together in a single order line item. The Item.LotSize value is the number of
     * items in the lot. This field is required if two or more items are including in one listing.
     * <br><br>
     * Lots can be used for auction and fixed price listings. Lot items can be listed
     * only in lot-enabled categories. Call GetCategories to determine if a category supports
     * lots. If the returned CategoryArray.Category.LSD (LotSize Disabled) value is true,
     * the category does not support lots.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getLotSize() {
	    return this.lotSize;
	}
	
	/**
	 * public setter
	 *
     * 
     * A lot is a set of two or more similar items included in a single listing that must be
     * purchased together in a single order line item. The Item.LotSize value is the number of
     * items in the lot. This field is required if two or more items are including in one listing.
     * <br><br>
     * Lots can be used for auction and fixed price listings. Lot items can be listed
     * only in lot-enabled categories. Call GetCategories to determine if a category supports
     * lots. If the returned CategoryArray.Category.LSD (LotSize Disabled) value is true,
     * the category does not support lots.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setLotSize(Integer lotSize) {
	    this.lotSize = lotSize;
	}
	/**
     * public getter
     *
     * 
     * Not currently operational.
     * 
     *
     * @returns java.lang.String
	 */
	public String getPartnerCode() {
	    return this.partnerCode;
	}
	
	/**
	 * public setter
	 *
     * 
     * Not currently operational.
     * 
     *
     * @param java.lang.String
	 */
	public void setPartnerCode(String partnerCode) {
	    this.partnerCode = partnerCode;
	}
	/**
     * public getter
     *
     * 
     * Not currently operational.
     * 
     *
     * @returns java.lang.String
	 */
	public String getPartnerName() {
	    return this.partnerName;
	}
	
	/**
	 * public setter
	 *
     * 
     * Not currently operational.
     * 
     *
     * @param java.lang.String
	 */
	public void setPartnerName(String partnerName) {
	    this.partnerName = partnerName;
	}
	/**
     * public getter
     *
     * 
     * Identifies the payment method (such as PayPal) that the seller will accept
     * when the buyer pays for the item. For the AddItem family of calls, at least
     * one payment method is required.
     * <br><br>
     * Use GetCategoryFeatures to determine the payment methods that are allowed for a
     * category on a site. For example, the response data of GetCategoryFeatures will
     * show that on the US site, most categories only allow electronic payments. Also
     * use GetCategoryFeatures to determine the default payment method for a site (see
     * SiteDefaults.PaymentMethod). If a seller does not include at least one payment
     * method in a Add/Revise/RelistItem API call, the default payment method is used
     * for the listing.
     * <br><br>
     * Do not use <b>GeteBayDetails</b> to determine the payment methods for a site.
     * <br><br>
     * For a DE or AT seller's items that are subject to the new eBay payment process,
     * only one <b>PaymentMethod</b> field will be returned, and the value
     * will always be 'StandardPayment'.
     * <br><br>
     * If you specify multiple PaymentMethods fields, the repeating fields must be
     * contiguous. For example, you can specify PayPalEmailAddress after a list of
     * repeating PaymentMethods fields, but not between them:<br>
     * <br>
     * &lt;PaymentMethods&gt;VisaMC&lt;/PaymentMethods&gt;<br>
     * &lt;PaymentMethods&gt;PayPal&lt;/PaymentMethods&gt;<br>
     * &lt;PayPalEmailAddress&gt;mypaypalemail@ebay.com&lt;/PayPalEmailAddress&gt;<br><br>
     * In general, if you separate repeating instances of a field, the results will
     * be unpredictable. This rule applies to all repeating fields
     * (maxOccurs="unbounded" or greater than 1) in the schema. See "Overview of the
     * Schema" in the Trading API Guide.<br>
     * <br>
     * This field is not applicable to eBay Real Estate Ad format,
     * Classified Ad format, or Half.com listings.
     * <br>
     * <br>
     * <b>For ReviseItem and RelistItem only:</b>
     * A listing must have at least one valid payment method.
     * When you revise or relist an item and you specify a payment method
     * that is invalid for the target site, eBay ignores the
     * invalid payment method, applies the other valid
     * changes, and returns a warning to indicate that the
     * invalid payment method was ignored. If multiple payment methods were
     * invalid, the warning indicates that they were all ignored.
     * If you modify the listing so that it includes no valid
     * payment methods, an error is returned. This situation could occur when
     * the seller removes all valid payment methods or when all
     * the payment methods specified for the item are no longer valid
     * on the target site.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.BuyerPaymentMethodCodeType>
	 */
	public List<BuyerPaymentMethodCodeType> getPaymentMethods() {
	    return this.paymentMethods;
	}
	
	/**
	 * public setter
	 *
     * 
     * Identifies the payment method (such as PayPal) that the seller will accept
     * when the buyer pays for the item. For the AddItem family of calls, at least
     * one payment method is required.
     * <br><br>
     * Use GetCategoryFeatures to determine the payment methods that are allowed for a
     * category on a site. For example, the response data of GetCategoryFeatures will
     * show that on the US site, most categories only allow electronic payments. Also
     * use GetCategoryFeatures to determine the default payment method for a site (see
     * SiteDefaults.PaymentMethod). If a seller does not include at least one payment
     * method in a Add/Revise/RelistItem API call, the default payment method is used
     * for the listing.
     * <br><br>
     * Do not use <b>GeteBayDetails</b> to determine the payment methods for a site.
     * <br><br>
     * For a DE or AT seller's items that are subject to the new eBay payment process,
     * only one <b>PaymentMethod</b> field will be returned, and the value
     * will always be 'StandardPayment'.
     * <br><br>
     * If you specify multiple PaymentMethods fields, the repeating fields must be
     * contiguous. For example, you can specify PayPalEmailAddress after a list of
     * repeating PaymentMethods fields, but not between them:<br>
     * <br>
     * &lt;PaymentMethods&gt;VisaMC&lt;/PaymentMethods&gt;<br>
     * &lt;PaymentMethods&gt;PayPal&lt;/PaymentMethods&gt;<br>
     * &lt;PayPalEmailAddress&gt;mypaypalemail@ebay.com&lt;/PayPalEmailAddress&gt;<br><br>
     * In general, if you separate repeating instances of a field, the results will
     * be unpredictable. This rule applies to all repeating fields
     * (maxOccurs="unbounded" or greater than 1) in the schema. See "Overview of the
     * Schema" in the Trading API Guide.<br>
     * <br>
     * This field is not applicable to eBay Real Estate Ad format,
     * Classified Ad format, or Half.com listings.
     * <br>
     * <br>
     * <b>For ReviseItem and RelistItem only:</b>
     * A listing must have at least one valid payment method.
     * When you revise or relist an item and you specify a payment method
     * that is invalid for the target site, eBay ignores the
     * invalid payment method, applies the other valid
     * changes, and returns a warning to indicate that the
     * invalid payment method was ignored. If multiple payment methods were
     * invalid, the warning indicates that they were all ignored.
     * If you modify the listing so that it includes no valid
     * payment methods, an error is returned. This situation could occur when
     * the seller removes all valid payment methods or when all
     * the payment methods specified for the item are no longer valid
     * on the target site.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.BuyerPaymentMethodCodeType>
	 */
	public void setPaymentMethods(List<BuyerPaymentMethodCodeType> paymentMethods) {
	    this.paymentMethods = paymentMethods;
	}
	/**
     * public getter
     *
     * 
     * Valid PayPal email address for the PayPal account that the seller will use
     * if they offer PayPal as a payment method for the listing. eBay uses this to
     * identify the correct PayPal account when the buyer pays via PayPal during
     * the checkout process. (As a seller can have more than one PayPal account,
     * you cannot necessarily rely on PayPal account data returned from GetUser for
     * details about the account associated with the PayPal email address that the
     * seller specifies.)<br>
     * <br>
     * Required if seller has chosen PayPal as a payment method (PaymentMethods)
     * for the listing.<br>
     * <br>
     * For digital listings, the seller needs to use an email address that is
     * associated with a PayPal Premier or PayPal business account. <br>
     * <br>
     * <b>For ReviseItem and RelistItem only:</b> To remove this value
     * when you revise or relist an item, use DeletedField. When you revise a
     * listing, if the listing has bids (or items have been sold) or it ends within
     * 12 hours, you can add PayPalEmailAddress, but you cannot remove
     * it.<br>
     * <br>
     * Not applicable to eBay Motors listings.
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.String
	 */
	public String getPayPalEmailAddress() {
	    return this.payPalEmailAddress;
	}
	
	/**
	 * public setter
	 *
     * 
     * Valid PayPal email address for the PayPal account that the seller will use
     * if they offer PayPal as a payment method for the listing. eBay uses this to
     * identify the correct PayPal account when the buyer pays via PayPal during
     * the checkout process. (As a seller can have more than one PayPal account,
     * you cannot necessarily rely on PayPal account data returned from GetUser for
     * details about the account associated with the PayPal email address that the
     * seller specifies.)<br>
     * <br>
     * Required if seller has chosen PayPal as a payment method (PaymentMethods)
     * for the listing.<br>
     * <br>
     * For digital listings, the seller needs to use an email address that is
     * associated with a PayPal Premier or PayPal business account. <br>
     * <br>
     * <b>For ReviseItem and RelistItem only:</b> To remove this value
     * when you revise or relist an item, use DeletedField. When you revise a
     * listing, if the listing has bids (or items have been sold) or it ends within
     * 12 hours, you can add PayPalEmailAddress, but you cannot remove
     * it.<br>
     * <br>
     * Not applicable to eBay Motors listings.
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.String
	 */
	public void setPayPalEmailAddress(String payPalEmailAddress) {
	    this.payPalEmailAddress = payPalEmailAddress;
	}
	/**
     * public getter
     *
     * 
     * Category ID for the first (or only) category in which the item is
     * listed (or will be listed, if the item is new). A number of listing
     * features have dependencies on the primary category. We have pointed
     * out a few of the notable dependencies below. See the descriptions
     * of the fields you are using to determine whether the feature you're
     * supporting depends on the listing's primary category.<br>
     * <br>
     * <b>For the AddItem family of calls:</b>
     * Use calls like GetCategories and GetCategoryFeatures to determine valid
     * values for the site on which you are listing (see the eBay Web Services
     * Guide for information on working with categories). Also see
     * Item.CategoryMappingAllowed and
     * Item.CategoryBasedAttributesPrefill.<br>
     * <br>
     * There are a number of categories on some eBay sites that always add
     * the Gallery feature (for free) when you include a picture in
     * the listing and you don't specify the Gallery feature yourself.
     * See GalleryType for information about fees that could be charged
     * if you change the category in these cases.<br>
     * <br>
     * Coming soon: If you list with a catalog product, eBay may drop the
     * primary category you specify and use the category that is associated with the product instead, if different.<br>
     * <br>
     * Not applicable to Half.com.<br>
     * <br>
     * <b>For ReviseItem only:</b> When revising a listing,
     * you can change the primary category only if an item
     * has no bids (or no items have sold) and the listing does not end
     * within 12 hours. <br>
     * <br>
     * If you change the listing category, any Item Specifics (attributes) that
     * were previously specified may be dropped from the listing if they aren't
     * valid for the new category. See Item.AttributeSetArray. For the eBay US
     * site, we suggest that you avoid including a category ID when you list with an external product ID, such as ISBN. See the KB article listed below for details.<br>
     * <br>
     * You cannot change the meta-categories for vehicles (i.e., you cannot change
     * a truck to a motorcycle), but you can change the leaf category (e.g., change
     * one motorcycle subcategory to another motorcycle subcategory). See the eBay
     * Web Services Guide for additional rules. International sites (such as the
     * eBay Germany site) have similar rules for revising vehicle categories. <br>
     * <br>
     * When you list an event ticket on the US site, you must specify the
     * Event Tickets category as the primary category. Also, when revising
     * a listing, you cannot change the primary category from another
     * category to the Event Tickets category. (You need to specify the
     * Event Tickets category when you initially list the item.)<br>
     * <br>
     * <b>For GetItemRecommendations only:</b>
     * For GetItemRecommendations, use this value to control the category that
     * is searched for recommendations. Specify the category in which
     * the item will be listed. See <a href=
     * "http://developer.ebay.com/DevZone/XML/docs/WebHelp/wwhelp/wwhimpl/js/html/wwhelp.htm?context=eBay_XML_API&topic=EngineRecs"
     * >Getting Recommendations to Improve a Listing</a> in the eBay Web
     * Services guide for differences in validation rules depending on whether
     * you are using the Listing Analyzer engine, Product Pricing engine,
     * or Suggested Attribute engine.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.CategoryType
	 */
	public CategoryType getPrimaryCategory() {
	    return this.primaryCategory;
	}
	
	/**
	 * public setter
	 *
     * 
     * Category ID for the first (or only) category in which the item is
     * listed (or will be listed, if the item is new). A number of listing
     * features have dependencies on the primary category. We have pointed
     * out a few of the notable dependencies below. See the descriptions
     * of the fields you are using to determine whether the feature you're
     * supporting depends on the listing's primary category.<br>
     * <br>
     * <b>For the AddItem family of calls:</b>
     * Use calls like GetCategories and GetCategoryFeatures to determine valid
     * values for the site on which you are listing (see the eBay Web Services
     * Guide for information on working with categories). Also see
     * Item.CategoryMappingAllowed and
     * Item.CategoryBasedAttributesPrefill.<br>
     * <br>
     * There are a number of categories on some eBay sites that always add
     * the Gallery feature (for free) when you include a picture in
     * the listing and you don't specify the Gallery feature yourself.
     * See GalleryType for information about fees that could be charged
     * if you change the category in these cases.<br>
     * <br>
     * Coming soon: If you list with a catalog product, eBay may drop the
     * primary category you specify and use the category that is associated with the product instead, if different.<br>
     * <br>
     * Not applicable to Half.com.<br>
     * <br>
     * <b>For ReviseItem only:</b> When revising a listing,
     * you can change the primary category only if an item
     * has no bids (or no items have sold) and the listing does not end
     * within 12 hours. <br>
     * <br>
     * If you change the listing category, any Item Specifics (attributes) that
     * were previously specified may be dropped from the listing if they aren't
     * valid for the new category. See Item.AttributeSetArray. For the eBay US
     * site, we suggest that you avoid including a category ID when you list with an external product ID, such as ISBN. See the KB article listed below for details.<br>
     * <br>
     * You cannot change the meta-categories for vehicles (i.e., you cannot change
     * a truck to a motorcycle), but you can change the leaf category (e.g., change
     * one motorcycle subcategory to another motorcycle subcategory). See the eBay
     * Web Services Guide for additional rules. International sites (such as the
     * eBay Germany site) have similar rules for revising vehicle categories. <br>
     * <br>
     * When you list an event ticket on the US site, you must specify the
     * Event Tickets category as the primary category. Also, when revising
     * a listing, you cannot change the primary category from another
     * category to the Event Tickets category. (You need to specify the
     * Event Tickets category when you initially list the item.)<br>
     * <br>
     * <b>For GetItemRecommendations only:</b>
     * For GetItemRecommendations, use this value to control the category that
     * is searched for recommendations. Specify the category in which
     * the item will be listed. See <a href=
     * "http://developer.ebay.com/DevZone/XML/docs/WebHelp/wwhelp/wwhimpl/js/html/wwhelp.htm?context=eBay_XML_API&topic=EngineRecs"
     * >Getting Recommendations to Improve a Listing</a> in the eBay Web
     * Services guide for differences in validation rules depending on whether
     * you are using the Listing Analyzer engine, Product Pricing engine,
     * or Suggested Attribute engine.
     * 
     *
     * @param ebay.apis.eblbasecomponents.CategoryType
	 */
	public void setPrimaryCategory(CategoryType primaryCategory) {
	    this.primaryCategory = primaryCategory;
	}
	/**
     * public getter
     *
     * 
     * The <b>PrivateListing</b> boolean field can be used by the seller in the
     * Add/Relist/Revise family of calls to obscure item title, item ID, and item price from
     * post-order Feedback comments left by buyers. Typically, it is not advisable that
     * sellers use the Private Listing feature, but using this feature may be appropriate for
     * sellers listing in Adults Only categories, or for high-priced and/or celebrity items.
     * <br>
     * <br>
     * For <b>GetItem</b>, order retrieval calls, and other calls that retrieve
     * the Item object, the <b>PrivateListing</b> field is only returned if
     * 'true'.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getPrivateListing() {
	    return this.privateListing;
	}
	
	/**
	 * public setter
	 *
     * 
     * The <b>PrivateListing</b> boolean field can be used by the seller in the
     * Add/Relist/Revise family of calls to obscure item title, item ID, and item price from
     * post-order Feedback comments left by buyers. Typically, it is not advisable that
     * sellers use the Private Listing feature, but using this feature may be appropriate for
     * sellers listing in Adults Only categories, or for high-priced and/or celebrity items.
     * <br>
     * <br>
     * For <b>GetItem</b>, order retrieval calls, and other calls that retrieve
     * the Item object, the <b>PrivateListing</b> field is only returned if
     * 'true'.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setPrivateListing(Boolean privateListing) {
	    this.privateListing = privateListing;
	}
	/**
     * public getter
     *
     * 
     * Specifies stock product information to include in a listing.
     * Only applicable when listing items with product details.
     * See the eBay Trading API Guide
     * for information on listing with product details.<br>
     * <br>
     * As ProductID and ProductReferenceID are defined by eBay, they
     * provide the most reliable means to identify a product.
     * If you use one of the other industry identifiers (e.g., UPC),
     * eBay attempts to find a matching product on your behalf and use
     * it in the listing. If no match is found, you can try using
     * FindProducts in the Shopping API to determine a ProductReferenceID.<br>
     * <br>
     * When you specify ProductListingDetails, you must specify at
     * least one of the available identifiers (e.g., UPC). If you specify
     * more than one (such as UPC and BrandMPN), eBay uses the first one
     * that matches a product in eBay's catalog system. (This may be useful
     * if you aren't sure which identifier is more likely to result in a
     * match.)<br>
     * <br>
     * When you specify TicketListingDetails, you must specify the
     * Event Tickets category as the primary category.
     * For other product identifiers: If you list in two categories and
     * the primary and secondary categories are both catalog-enabled,
     * this product identifier should correspond to the primary
     * category (not the secondary category).
     * If only one category is catalog-enabled, the product identifier
     * should correspond to the catalog-enabled category.
     * (If necessary, use GetCategory2CS to determine which categories are
     * catalog-enabled.)<br>
     * <br>
     * <span class="tablenote"><b>Note:</b>
     * As a general rule, the primary category is required.
     * However, if you have trouble finding a catalog-enabled
     * category, you may be able to omit the primary category (except for
     * event tickets). If you do, eBay will attempt to determine an
     * appropriate category based on the product ID (if we find a
     * matching product).
     * When you specify a category that corresponds to the product
     * (according to GetCategory2CS), your category is used.
     * </span>
     * If we don't find a match in our catalogs,
     * we will list the item in the primary category you specified,
     * without product details. We will not pre-fill the listing's
     * item specifics in this case, and the identifier won't be surfaced in
     * View Item or returned in GetItem. However, it will still be indexed
     * for search on eBay, and it will be searchable by more
     * third-party natural search engines. As this can help buyers find
     * your listing more easily, we strongly recommend that you always
     * use ProductListingDetails to pass in these values.
     * (This product indexing behavior
     * is only available if you use UPC, ISBN, EAN, or GTIN in
     * ProductListingDetails. It is not available if you use
     * ExternalProductID, and it may not be
     * available if you exclusively use Item Specifics.)<br>
     * <br>
     * Either Item.ExternalProductID or Item.ProductListingDetails can be
     * specified in an AddItem request, but not both.
     * (ExternalProductID is no longer recommended.) <br>
     * <br>
     * <b>For ReviseItem and RelistItem only:</b> If a
     * listing includes product details and you
     * change a category, the rules for continuing to include product details depend on whether or not the new category is mapped to a
     * characteristic set associated with the same product ID. When you revise a
     * listing, if it has bids or it ends within 12 hours, you cannot change the
     * product ID and you cannot remove existing product data. However, you can
     * change or add preferences such as IncludeStockPhotoURL,
     * UseStockPhotoURLAsGallery, and IncludePrefilledItemInformation. To delete all
     * catalog data when you revise or relist an item, specify
     * Item.ProductListingDetails in DeletedField and don't pass
     * ProductListingDetails in the request.<br>
     * <br>
     * <b>For GetMyeBayBuying only:</b> When products have been added to a buyer's Wish List, the product information is returned in ItemArray.Item.ProductListingDetails within the UserDefinedList node. Products can be added to a buyer's Wish List only. Does not apply to any other user-defined list. The ProductListingDetails node is not included for items in the Wish List.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ProductListingDetailsType
	 */
	public ProductListingDetailsType getProductListingDetails() {
	    return this.productListingDetails;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies stock product information to include in a listing.
     * Only applicable when listing items with product details.
     * See the eBay Trading API Guide
     * for information on listing with product details.<br>
     * <br>
     * As ProductID and ProductReferenceID are defined by eBay, they
     * provide the most reliable means to identify a product.
     * If you use one of the other industry identifiers (e.g., UPC),
     * eBay attempts to find a matching product on your behalf and use
     * it in the listing. If no match is found, you can try using
     * FindProducts in the Shopping API to determine a ProductReferenceID.<br>
     * <br>
     * When you specify ProductListingDetails, you must specify at
     * least one of the available identifiers (e.g., UPC). If you specify
     * more than one (such as UPC and BrandMPN), eBay uses the first one
     * that matches a product in eBay's catalog system. (This may be useful
     * if you aren't sure which identifier is more likely to result in a
     * match.)<br>
     * <br>
     * When you specify TicketListingDetails, you must specify the
     * Event Tickets category as the primary category.
     * For other product identifiers: If you list in two categories and
     * the primary and secondary categories are both catalog-enabled,
     * this product identifier should correspond to the primary
     * category (not the secondary category).
     * If only one category is catalog-enabled, the product identifier
     * should correspond to the catalog-enabled category.
     * (If necessary, use GetCategory2CS to determine which categories are
     * catalog-enabled.)<br>
     * <br>
     * <span class="tablenote"><b>Note:</b>
     * As a general rule, the primary category is required.
     * However, if you have trouble finding a catalog-enabled
     * category, you may be able to omit the primary category (except for
     * event tickets). If you do, eBay will attempt to determine an
     * appropriate category based on the product ID (if we find a
     * matching product).
     * When you specify a category that corresponds to the product
     * (according to GetCategory2CS), your category is used.
     * </span>
     * If we don't find a match in our catalogs,
     * we will list the item in the primary category you specified,
     * without product details. We will not pre-fill the listing's
     * item specifics in this case, and the identifier won't be surfaced in
     * View Item or returned in GetItem. However, it will still be indexed
     * for search on eBay, and it will be searchable by more
     * third-party natural search engines. As this can help buyers find
     * your listing more easily, we strongly recommend that you always
     * use ProductListingDetails to pass in these values.
     * (This product indexing behavior
     * is only available if you use UPC, ISBN, EAN, or GTIN in
     * ProductListingDetails. It is not available if you use
     * ExternalProductID, and it may not be
     * available if you exclusively use Item Specifics.)<br>
     * <br>
     * Either Item.ExternalProductID or Item.ProductListingDetails can be
     * specified in an AddItem request, but not both.
     * (ExternalProductID is no longer recommended.) <br>
     * <br>
     * <b>For ReviseItem and RelistItem only:</b> If a
     * listing includes product details and you
     * change a category, the rules for continuing to include product details depend on whether or not the new category is mapped to a
     * characteristic set associated with the same product ID. When you revise a
     * listing, if it has bids or it ends within 12 hours, you cannot change the
     * product ID and you cannot remove existing product data. However, you can
     * change or add preferences such as IncludeStockPhotoURL,
     * UseStockPhotoURLAsGallery, and IncludePrefilledItemInformation. To delete all
     * catalog data when you revise or relist an item, specify
     * Item.ProductListingDetails in DeletedField and don't pass
     * ProductListingDetails in the request.<br>
     * <br>
     * <b>For GetMyeBayBuying only:</b> When products have been added to a buyer's Wish List, the product information is returned in ItemArray.Item.ProductListingDetails within the UserDefinedList node. Products can be added to a buyer's Wish List only. Does not apply to any other user-defined list. The ProductListingDetails node is not included for items in the Wish List.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ProductListingDetailsType
	 */
	public void setProductListingDetails(ProductListingDetailsType productListingDetails) {
	    this.productListingDetails = productListingDetails;
	}
	/**
     * public getter
     *
     * 
     * The value indicates the quantity of items available for purchase in the listing.
     * This field is required for all auction listings and for non-variation, fixed-price
     * listings. For auction listings, this value is always '1'. For a non-variation,
     * fixed-price listing, the <b>Item.Quantity</b> value indicates the
     * number of identical items the seller has available for purchase in the listing.
     * <br><br>
     * <b>For AddFixedPriceItem, VerifyAddFixedPriceItem, RelistFixedPriceItem, and
     * ReviseFixedPriceItem:</b> in a multi-variation, fixed-price listing, the
     * <b>Item.Quantity</b> should not be used; instead, the quantity of
     * each variation is specified in the <b>Variation.Variation.Quantity</b>
     * field instead. See the <a href="
     * http://pages.ebay.com/help/sell/listing-variations.html">Creating a listing with
     * variations</a> eBay Help page for more information on variations.
     * <br><br>
     * <b>For RelistItem and RelistFixedPriceItem:</b>
     * Like most fields, when you use RelistItem or RelistFixedPriceItem,
     * Quantity retains its original value unless you specifically change
     * it. This means that the item is relisted with the value that was
     * already in Quantity, not with the remaining quantity available.
     * For example, if the original Quantity value was 10, and 3 items have been sold,
     * eBay sets the relisted item's Quantity to 10 by default, and not 7.
     * So, we strongly recommend that you always
     * set Quantity to the correct value (your actual quantity available)
     * in your relist requests.<br>
     * <br>
     * When eBay auto-renews a GTC listing (ListingDuration=GTC)
     * on your behalf, eBay relists with correct quantity available.
     * <br><br>
     * <span class="tablenote"><b>Note:</b>
     * There are seller limits on the US site for users who registered after October 2010.
     * Seller limits control the quantity of items and/or the total value
     * of the item(s) in the listing. (The <b>GetMyeBaySelling</b> call
     * returns the remaining item quantity and remaining total value under the limits for
     * the seller, if any such limits exist for the seller). If a call to add an item or
     * revise an item would result in the exceeding of these limits, the add item or
     * revise item call will fail. For auction listings, the total value limit applies to
     * the start price, not the final sale amount. For more information, see the link to
     * Seller Limits below.
     * </span>
     * <br>
     * <b>For GetSellerEvents:</b> Quantity is only returned
     * for listings where item quantity is greater than 1.
     * <br><br>
     * <b>For GetItem and related calls:</b>
     * This is the total of the number of items available for sale plus the quantity
     * already sold. To determine the number of items available, subtract
     * SellingStatus.QuantitySold from this value. Even for items that supported Dutch
     * auctions, where one of several items can be purchased during the auction, this
     * number does not change.
     * <br><br>
     * <b>For order line item calls with variations:</b>
     * In GetItemTransactions, Item.Quantity is the same as GetItem (the
     * total quantity across all variations). In GetSellerTransactions,
     * Transaction.Item.Quantity is the total quantity of the applicable
     * variation (quantity available plus quantity sold).
     * <br>
     * <br>
     * <b>For GetDispute:</b> Quantity is
     * the number of items being raised in the dispute.
     * <br>
     * <br>
     * For SetCart input, this is only required if the parent container is submitted.
     * <br><br>
     * Also applicable to Half.com (valid range 1 to 1000).
     * You can revise this field for Half.com listings.
     * <br>
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getQuantity() {
	    return this.quantity;
	}
	
	/**
	 * public setter
	 *
     * 
     * The value indicates the quantity of items available for purchase in the listing.
     * This field is required for all auction listings and for non-variation, fixed-price
     * listings. For auction listings, this value is always '1'. For a non-variation,
     * fixed-price listing, the <b>Item.Quantity</b> value indicates the
     * number of identical items the seller has available for purchase in the listing.
     * <br><br>
     * <b>For AddFixedPriceItem, VerifyAddFixedPriceItem, RelistFixedPriceItem, and
     * ReviseFixedPriceItem:</b> in a multi-variation, fixed-price listing, the
     * <b>Item.Quantity</b> should not be used; instead, the quantity of
     * each variation is specified in the <b>Variation.Variation.Quantity</b>
     * field instead. See the <a href="
     * http://pages.ebay.com/help/sell/listing-variations.html">Creating a listing with
     * variations</a> eBay Help page for more information on variations.
     * <br><br>
     * <b>For RelistItem and RelistFixedPriceItem:</b>
     * Like most fields, when you use RelistItem or RelistFixedPriceItem,
     * Quantity retains its original value unless you specifically change
     * it. This means that the item is relisted with the value that was
     * already in Quantity, not with the remaining quantity available.
     * For example, if the original Quantity value was 10, and 3 items have been sold,
     * eBay sets the relisted item's Quantity to 10 by default, and not 7.
     * So, we strongly recommend that you always
     * set Quantity to the correct value (your actual quantity available)
     * in your relist requests.<br>
     * <br>
     * When eBay auto-renews a GTC listing (ListingDuration=GTC)
     * on your behalf, eBay relists with correct quantity available.
     * <br><br>
     * <span class="tablenote"><b>Note:</b>
     * There are seller limits on the US site for users who registered after October 2010.
     * Seller limits control the quantity of items and/or the total value
     * of the item(s) in the listing. (The <b>GetMyeBaySelling</b> call
     * returns the remaining item quantity and remaining total value under the limits for
     * the seller, if any such limits exist for the seller). If a call to add an item or
     * revise an item would result in the exceeding of these limits, the add item or
     * revise item call will fail. For auction listings, the total value limit applies to
     * the start price, not the final sale amount. For more information, see the link to
     * Seller Limits below.
     * </span>
     * <br>
     * <b>For GetSellerEvents:</b> Quantity is only returned
     * for listings where item quantity is greater than 1.
     * <br><br>
     * <b>For GetItem and related calls:</b>
     * This is the total of the number of items available for sale plus the quantity
     * already sold. To determine the number of items available, subtract
     * SellingStatus.QuantitySold from this value. Even for items that supported Dutch
     * auctions, where one of several items can be purchased during the auction, this
     * number does not change.
     * <br><br>
     * <b>For order line item calls with variations:</b>
     * In GetItemTransactions, Item.Quantity is the same as GetItem (the
     * total quantity across all variations). In GetSellerTransactions,
     * Transaction.Item.Quantity is the total quantity of the applicable
     * variation (quantity available plus quantity sold).
     * <br>
     * <br>
     * <b>For GetDispute:</b> Quantity is
     * the number of items being raised in the dispute.
     * <br>
     * <br>
     * For SetCart input, this is only required if the parent container is submitted.
     * <br><br>
     * Also applicable to Half.com (valid range 1 to 1000).
     * You can revise this field for Half.com listings.
     * <br>
     * 
     *
     * @param java.lang.Integer
	 */
	public void setQuantity(Integer quantity) {
	    this.quantity = quantity;
	}
	/**
     * public getter
     *
     * 
     * A note a user makes on an item in their My eBay account. The note is prefaced with
     * the words My Note. For eBay.com, only GetMyeBayBuying and GetMyeBaySelling (not
     * GetItem) return this field, and only if you pass IncludeNotes in the request. Only
     * visible to the user who created the note.
     * <br><br>
     * Not supported as input in ReviseItem. Use SetUserNotes instead.
     * <br><br>
     * <b>For GetMyeBayBuying</b> In WatchList, notes for variations are only
     * returned at the Item level, not the variation level. They are only set if you
     * specified ItemID (if no purchases) or ItemID and VariationSpecifics (if there are
     * purchases) in SetUserNotes (or selected the equivalent in the My eBay UI on the
     * site).
     * <br><br>
     * In WonList, notes for variations are only returned at the Item level, not the
     * variation level. They are only set if you specified ItemID and TransactionID in
     * SetUserNotes (or selected the equivalent in the My eBay UI on the site).
     * <br><br>
     * Not applicable to Half.com (instead, use
     * Item.AttributeArray.Attribute.Value.ValueLiteral for Half.com notes.)
     * 
     *
     * @returns java.lang.String
	 */
	public String getPrivateNotes() {
	    return this.privateNotes;
	}
	
	/**
	 * public setter
	 *
     * 
     * A note a user makes on an item in their My eBay account. The note is prefaced with
     * the words My Note. For eBay.com, only GetMyeBayBuying and GetMyeBaySelling (not
     * GetItem) return this field, and only if you pass IncludeNotes in the request. Only
     * visible to the user who created the note.
     * <br><br>
     * Not supported as input in ReviseItem. Use SetUserNotes instead.
     * <br><br>
     * <b>For GetMyeBayBuying</b> In WatchList, notes for variations are only
     * returned at the Item level, not the variation level. They are only set if you
     * specified ItemID (if no purchases) or ItemID and VariationSpecifics (if there are
     * purchases) in SetUserNotes (or selected the equivalent in the My eBay UI on the
     * site).
     * <br><br>
     * In WonList, notes for variations are only returned at the Item level, not the
     * variation level. They are only set if you specified ItemID and TransactionID in
     * SetUserNotes (or selected the equivalent in the My eBay UI on the site).
     * <br><br>
     * Not applicable to Half.com (instead, use
     * Item.AttributeArray.Attribute.Value.ValueLiteral for Half.com notes.)
     * 
     *
     * @param java.lang.String
	 */
	public void setPrivateNotes(String privateNotes) {
	    this.privateNotes = privateNotes;
	}
	/**
     * public getter
     *
     * 
     * No longer used by any site.
     * 
     *
     * @returns java.lang.String
	 */
	public String getRegionID() {
	    return this.regionID;
	}
	
	/**
	 * public setter
	 *
     * 
     * No longer used by any site.
     * 
     *
     * @param java.lang.String
	 */
	public void setRegionID(String regionID) {
	    this.regionID = regionID;
	}
	/**
     * public getter
     *
     * 
     * Applicable only to re-listing an item. If true, creates a link in the item's
     * old listing for the item that points to the new relist page, which
     * accommodates users who might still look for the item under its old item ID.
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getRelistLink() {
	    return this.relistLink;
	}
	
	/**
	 * public setter
	 *
     * 
     * Applicable only to re-listing an item. If true, creates a link in the item's
     * old listing for the item that points to the new relist page, which
     * accommodates users who might still look for the item under its old item ID.
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setRelistLink(Boolean relistLink) {
	    this.relistLink = relistLink;
	}
	/**
     * public getter
     *
     * 
     * The lowest price at which the seller is willing to sell the item. (StartPrice
     * must be lower than ReservePrice.) Not all categories support a reserve price.
     * See GetCategories and "Determining Whether a Category Supports Reserve Prices"
     * in the Trading API Guide. In calls that retrieve item data, ReservePrice
     * only has a non-zero value for listings with a reserve price and where the user
     * requesting the item data is also the item's seller. Not applicable to fixed-
     * price items or ad format listings.<br>
     * <br>
     * You can remove the reserve price of a US eBay Motors listing if the category allows
     * it, the current reserve price has not been met, and the reserve price is at least
     * $2.00 more than the current high bid. In this case, if the item has bids, the reserve
     * price is set to $1.00 over the current high bid. The next bid meets the reserve and
     * wins. See the Fees Overview on the eBay Web site for information about fee credits
     * that may be available when the reserve price is removed for a Motors listing. See the
     * Trading API Guide for validation rules when revising US Motors
     * listings.<br>
     * <br>
     * The relisted item cannot have a reserve price if the original listing didn't have one. If
     * the original listing had a reserve price, the relisted item's reserve price can't be
     * greater than that of the original listing.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getReservePrice() {
	    return this.reservePrice;
	}
	
	/**
	 * public setter
	 *
     * 
     * The lowest price at which the seller is willing to sell the item. (StartPrice
     * must be lower than ReservePrice.) Not all categories support a reserve price.
     * See GetCategories and "Determining Whether a Category Supports Reserve Prices"
     * in the Trading API Guide. In calls that retrieve item data, ReservePrice
     * only has a non-zero value for listings with a reserve price and where the user
     * requesting the item data is also the item's seller. Not applicable to fixed-
     * price items or ad format listings.<br>
     * <br>
     * You can remove the reserve price of a US eBay Motors listing if the category allows
     * it, the current reserve price has not been met, and the reserve price is at least
     * $2.00 more than the current high bid. In this case, if the item has bids, the reserve
     * price is set to $1.00 over the current high bid. The next bid meets the reserve and
     * wins. See the Fees Overview on the eBay Web site for information about fee credits
     * that may be available when the reserve price is removed for a Motors listing. See the
     * Trading API Guide for validation rules when revising US Motors
     * listings.<br>
     * <br>
     * The relisted item cannot have a reserve price if the original listing didn't have one. If
     * the original listing had a reserve price, the relisted item's reserve price can't be
     * greater than that of the original listing.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setReservePrice(AmountType reservePrice) {
	    this.reservePrice = reservePrice;
	}
	/**
     * public getter
     *
     * 
     * An output value only, indicates whether an item has been revised
     * since the listing became active and, if so, which among a subset of
     * properties have been changed by the revision.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ReviseStatusType
	 */
	public ReviseStatusType getReviseStatus() {
	    return this.reviseStatus;
	}
	
	/**
	 * public setter
	 *
     * 
     * An output value only, indicates whether an item has been revised
     * since the listing became active and, if so, which among a subset of
     * properties have been changed by the revision.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ReviseStatusType
	 */
	public void setReviseStatus(ReviseStatusType reviseStatus) {
	    this.reviseStatus = reviseStatus;
	}
	/**
     * public getter
     *
     * 
     * Allows the user to specify the time that the listing becomes active on eBay.
     * To schedule the listing start time, specify a time in the future in GMT
     * format. In GetItem and related calls, the scheduled time is returned in
     * StartTime. For ReviseItem, you can modify this value if the currently
     * scheduled start time is in the future.
     * <br><br>
     * When you schedule a start time, the start time is randomized within 15-minute
     * intervals. Randomized start times applies to the following sites:
     * <br>
     * <code>AT, BEFR, BENL, CH, DE, ES, FR, IE, IT, NL, PL, UK</code>
     * <br><br>
     * Also see the following article in the Knowledge Base: <a href=
     * "http://ebay.custhelp.com/cgi-bin/ebay.cfg/php/enduser/std_adp.php?p_faqid=1473"
     * >Why scheduled time is sometimes getting reset</a>.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getScheduleTime() {
	    return this.scheduleTime;
	}
	
	/**
	 * public setter
	 *
     * 
     * Allows the user to specify the time that the listing becomes active on eBay.
     * To schedule the listing start time, specify a time in the future in GMT
     * format. In GetItem and related calls, the scheduled time is returned in
     * StartTime. For ReviseItem, you can modify this value if the currently
     * scheduled start time is in the future.
     * <br><br>
     * When you schedule a start time, the start time is randomized within 15-minute
     * intervals. Randomized start times applies to the following sites:
     * <br>
     * <code>AT, BEFR, BENL, CH, DE, ES, FR, IE, IT, NL, PL, UK</code>
     * <br><br>
     * Also see the following article in the Knowledge Base: <a href=
     * "http://ebay.custhelp.com/cgi-bin/ebay.cfg/php/enduser/std_adp.php?p_faqid=1473"
     * >Why scheduled time is sometimes getting reset</a>.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.util.Date
	 */
	public void setScheduleTime(Date scheduleTime) {
	    this.scheduleTime = scheduleTime;
	}
	/**
     * public getter
     *
     * 
     * ID for second category in which the item is listed (also see
     * Item.PrimaryCategory).
     * <br><br>
     * <b>For the AddItem family of calls:</b> Listing an item in
     * a second category is optional. Also see Item.CategoryMappingAllowed
     * and Item.CategoryBasedAttributesPrefill. <br>
     * <br>
     * Not applicable to Half.com. <br>
     * <br>
     * On the eBay UK, Ireland, Germany, Austria, Switzerland, and Italy
     * sites you can list Store Inventory listings in two categories.
     * On the eBay US and other sites, you cannot list Store Inventory
     * listings in two categories.<br>
     * <br>
     * You cannot list US eBay Motors vehicles in two categories. However, you can
     * list Parts & Accessories in two categories. The Final Value Fee is based
     * on the primary category in which the item is listed. Furthermore, you can
     * list the same item in an eBay Motors Parts & Accessories category and in
     * an eligible eBay category, as long as the primary category is associated
     * with the site on which you are listing. That is, the two categories can be a
     * mix of Motors Parts & Accessories and eBay site categories. (Real
     * Estate, Mature Audience (adult), and Business & Industrial categories
     * are not eligible for listing in two categories in this manner.) For example,
     * if you list on Motors, the primary category could be 6750 (eBay Motors >
     * Parts & Accessories > Apparel & Merchandise > Motorcycle >
     * Jackets & Leathers), and the secondary category could be 57988 (eBay
     * > Clothing, Shoes > Accessories > Men's Clothing > Outerwear).
     * If you list on the main eBay site, the primary category could be 57988 and
     * the secondary category could be 6750. <br>
     * <br>
     * If eBay has designated a category as a value category
     * (see ValueCategory in GetCategoryFeatures), items in that category
     * cannot be listed in two categories.
     * For example, if your AddItem request
     * includes a primary or secondary category that is a value category, then eBay drops SecondaryCategory and lists
     * the item with only the PrimaryCategory you selected.
     * Also, if the listing request includes item specifics
     * (in ItemSpecifics or AttributeSetArray) that are associated with SecondaryCategory, eBay drops those values when we drop SecondaryCategory. (The same logic is used if you revise an existing
     * listing to add a secondary category or to change one of the categories: If either the primary or secondary category is a value category, eBay drops the secondary category from your request.)<br>
     * <br>
     * To remove this value when relisting an item, use DeletedField.
     * <br><br>
     * <b>For ReviseItem only:</b> When revising a listing, you
     * can add or change the secondary category only if the listing has no
     * bids (or no items have sold) and it does not end within 12 hours. If you
     * change the secondary category, any corresponding Item Specifics (attributes)
     * that were previously specified may be dropped from the listing if they
     * aren't valid for the category. See Item.AttributeSetArray.<br>
     * <br>
     * When you revise an item, you can change the secondary category from a Motors
     * Parts & Accessories category to an eBay category or vice versa if the
     * listing has no bids (or no items have sold) and it does not end within 12
     * hours. <br>
     * <br>
     * <b>For GetItemRecommendations only:</b>
     * For GetItemRecommendations, use this to control the category that will be
     * searched for recommendations. Specify the category in which the item will be
     * listed. See the Trading API Guide for differences in validation rules
     * depending on whether you are using the Listing Analyzer engine, Product
     * Pricing engine, or Suggested Attributes engine.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.CategoryType
	 */
	public CategoryType getSecondaryCategory() {
	    return this.secondaryCategory;
	}
	
	/**
	 * public setter
	 *
     * 
     * ID for second category in which the item is listed (also see
     * Item.PrimaryCategory).
     * <br><br>
     * <b>For the AddItem family of calls:</b> Listing an item in
     * a second category is optional. Also see Item.CategoryMappingAllowed
     * and Item.CategoryBasedAttributesPrefill. <br>
     * <br>
     * Not applicable to Half.com. <br>
     * <br>
     * On the eBay UK, Ireland, Germany, Austria, Switzerland, and Italy
     * sites you can list Store Inventory listings in two categories.
     * On the eBay US and other sites, you cannot list Store Inventory
     * listings in two categories.<br>
     * <br>
     * You cannot list US eBay Motors vehicles in two categories. However, you can
     * list Parts & Accessories in two categories. The Final Value Fee is based
     * on the primary category in which the item is listed. Furthermore, you can
     * list the same item in an eBay Motors Parts & Accessories category and in
     * an eligible eBay category, as long as the primary category is associated
     * with the site on which you are listing. That is, the two categories can be a
     * mix of Motors Parts & Accessories and eBay site categories. (Real
     * Estate, Mature Audience (adult), and Business & Industrial categories
     * are not eligible for listing in two categories in this manner.) For example,
     * if you list on Motors, the primary category could be 6750 (eBay Motors >
     * Parts & Accessories > Apparel & Merchandise > Motorcycle >
     * Jackets & Leathers), and the secondary category could be 57988 (eBay
     * > Clothing, Shoes > Accessories > Men's Clothing > Outerwear).
     * If you list on the main eBay site, the primary category could be 57988 and
     * the secondary category could be 6750. <br>
     * <br>
     * If eBay has designated a category as a value category
     * (see ValueCategory in GetCategoryFeatures), items in that category
     * cannot be listed in two categories.
     * For example, if your AddItem request
     * includes a primary or secondary category that is a value category, then eBay drops SecondaryCategory and lists
     * the item with only the PrimaryCategory you selected.
     * Also, if the listing request includes item specifics
     * (in ItemSpecifics or AttributeSetArray) that are associated with SecondaryCategory, eBay drops those values when we drop SecondaryCategory. (The same logic is used if you revise an existing
     * listing to add a secondary category or to change one of the categories: If either the primary or secondary category is a value category, eBay drops the secondary category from your request.)<br>
     * <br>
     * To remove this value when relisting an item, use DeletedField.
     * <br><br>
     * <b>For ReviseItem only:</b> When revising a listing, you
     * can add or change the secondary category only if the listing has no
     * bids (or no items have sold) and it does not end within 12 hours. If you
     * change the secondary category, any corresponding Item Specifics (attributes)
     * that were previously specified may be dropped from the listing if they
     * aren't valid for the category. See Item.AttributeSetArray.<br>
     * <br>
     * When you revise an item, you can change the secondary category from a Motors
     * Parts & Accessories category to an eBay category or vice versa if the
     * listing has no bids (or no items have sold) and it does not end within 12
     * hours. <br>
     * <br>
     * <b>For GetItemRecommendations only:</b>
     * For GetItemRecommendations, use this to control the category that will be
     * searched for recommendations. Specify the category in which the item will be
     * listed. See the Trading API Guide for differences in validation rules
     * depending on whether you are using the Listing Analyzer engine, Product
     * Pricing engine, or Suggested Attributes engine.
     * 
     *
     * @param ebay.apis.eblbasecomponents.CategoryType
	 */
	public void setSecondaryCategory(CategoryType secondaryCategory) {
	    this.secondaryCategory = secondaryCategory;
	}
	/**
     * public getter
     *
     * 
     * ID for a second category that eBay added as a free promotion. You cannot add
     * this yourself. Only returned if the item was listed in a single category and
     * eBay added a free second category.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.CategoryType
	 */
	public CategoryType getFreeAddedCategory() {
	    return this.freeAddedCategory;
	}
	
	/**
	 * public setter
	 *
     * 
     * ID for a second category that eBay added as a free promotion. You cannot add
     * this yourself. Only returned if the item was listed in a single category and
     * eBay added a free second category.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.CategoryType
	 */
	public void setFreeAddedCategory(CategoryType freeAddedCategory) {
	    this.freeAddedCategory = freeAddedCategory;
	}
	/**
     * public getter
     *
     * 
     * Container for information about this listing's seller.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * <br><br>
     * Returned by GetItemsAwaitingFeedback if Buyer is making the request.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.UserType
	 */
	public UserType getSeller() {
	    return this.seller;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container for information about this listing's seller.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * <br><br>
     * Returned by GetItemsAwaitingFeedback if Buyer is making the request.
     * 
     *
     * @param ebay.apis.eblbasecomponents.UserType
	 */
	public void setSeller(UserType seller) {
	    this.seller = seller;
	}
	/**
     * public getter
     *
     * 
     * Various details about the current status of the listing, such as the current
     * number of bids and the current high bidder.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SellingStatusType
	 */
	public SellingStatusType getSellingStatus() {
	    return this.sellingStatus;
	}
	
	/**
	 * public setter
	 *
     * 
     * Various details about the current status of the listing, such as the current
     * number of bids and the current high bidder.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.SellingStatusType
	 */
	public void setSellingStatus(SellingStatusType sellingStatus) {
	    this.sellingStatus = sellingStatus;
	}
	/**
     * public getter
     *
     * 
     * The shipping-related details for an order, including flat and
     * calculated shipping costs and shipping insurance costs.<br>
     * <br>
     * New users who list their first items in selected categories on the US site
     * must specify at least one domestic shipping service. This applies to a
     * category if GetCategoryFeatures returns true for
     * Category.ShippingTermsRequired.<br>
     * <br>
     * For multi-quantity Store Inventory Format listings and for multi-quantity
     * Fixed Price listings, a seller can revise all shipping details of the
     * listing (except for sales tax and for shipping type of Freight) for all
     * unsold items. This applies to both domestic and international shipping.
     * Checkout is not affected for those who bought items prior to the seller's
     * shipping changes--the shipping details that were in effect at the time of
     * purchase are used for that buyer at the time of checkout.<br/>
     * <br/>
     *                   <span class="tablenote">
     *                   <strong>IMPORTANT:</strong> To avoid loss of shipping details when revising a listing, you must include all <strong>ShippingDetails</strong> fields that were originally provided. Do not omit any tag, even if its value does not change. Omitting a shipping field when revising an item will remove that detail from the listing.
     *                   </span>
     * <br>
     * Shipping details are not applicable to Real Estate listings and Half.com.
     * <br><br>
     * <b>GetMyeBayBuying, GetMyeBaySelling</b>: ShippingDetails is not returned
     * (with a request version 677 or higher) if (a) the item is marked as
     * local pickup only with a cost of 0 or (b) ShipToLocation is None. (With a
     * request version lower than 677, ShippingDetails is returned.)
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ShippingDetailsType
	 */
	public ShippingDetailsType getShippingDetails() {
	    return this.shippingDetails;
	}
	
	/**
	 * public setter
	 *
     * 
     * The shipping-related details for an order, including flat and
     * calculated shipping costs and shipping insurance costs.<br>
     * <br>
     * New users who list their first items in selected categories on the US site
     * must specify at least one domestic shipping service. This applies to a
     * category if GetCategoryFeatures returns true for
     * Category.ShippingTermsRequired.<br>
     * <br>
     * For multi-quantity Store Inventory Format listings and for multi-quantity
     * Fixed Price listings, a seller can revise all shipping details of the
     * listing (except for sales tax and for shipping type of Freight) for all
     * unsold items. This applies to both domestic and international shipping.
     * Checkout is not affected for those who bought items prior to the seller's
     * shipping changes--the shipping details that were in effect at the time of
     * purchase are used for that buyer at the time of checkout.<br/>
     * <br/>
     *                   <span class="tablenote">
     *                   <strong>IMPORTANT:</strong> To avoid loss of shipping details when revising a listing, you must include all <strong>ShippingDetails</strong> fields that were originally provided. Do not omit any tag, even if its value does not change. Omitting a shipping field when revising an item will remove that detail from the listing.
     *                   </span>
     * <br>
     * Shipping details are not applicable to Real Estate listings and Half.com.
     * <br><br>
     * <b>GetMyeBayBuying, GetMyeBaySelling</b>: ShippingDetails is not returned
     * (with a request version 677 or higher) if (a) the item is marked as
     * local pickup only with a cost of 0 or (b) ShipToLocation is None. (With a
     * request version lower than 677, ShippingDetails is returned.)
     * 
     *
     * @param ebay.apis.eblbasecomponents.ShippingDetailsType
	 */
	public void setShippingDetails(ShippingDetailsType shippingDetails) {
	    this.shippingDetails = shippingDetails;
	}
	/**
     * public getter
     *
     * 
     * An international location or region to which the seller is willing to ship,
     * regardless of shipping service. The country of the listing site is added by
     * eBay. Use <b>GeteBayDetails</b>
     * with <b>DetailName</b> set to <b>ShippingLocationDetails</b>
     * to determine which international locations are valid for the site. In the
     * GeteBayDetails response, look for the ShippingLocationDetails.ShippingLocation fields.
     * <br><br>
     * Omit ShipToLocations if you want to ship only within the country of the listing site.
     * To state that you do not wish to ship at all, set ShipToLocations to None.
     * ReviseItem can add a ShipToLocations. On output, ShipToLocations is the
     * collection of all input item-level ShipToLocations plus international shipping
     * service-level ShipToLocation values.
     * <br><br>
     * If you have specified a region to which you will ship (such as Asia), you can
     * use ExcludeShipToLocation to exclude certain countries within that region to
     * where you will not ship (such as Afghanistan).
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.util.List<java.lang.String>
	 */
	public List<String> getShipToLocations() {
	    return this.shipToLocations;
	}
	
	/**
	 * public setter
	 *
     * 
     * An international location or region to which the seller is willing to ship,
     * regardless of shipping service. The country of the listing site is added by
     * eBay. Use <b>GeteBayDetails</b>
     * with <b>DetailName</b> set to <b>ShippingLocationDetails</b>
     * to determine which international locations are valid for the site. In the
     * GeteBayDetails response, look for the ShippingLocationDetails.ShippingLocation fields.
     * <br><br>
     * Omit ShipToLocations if you want to ship only within the country of the listing site.
     * To state that you do not wish to ship at all, set ShipToLocations to None.
     * ReviseItem can add a ShipToLocations. On output, ShipToLocations is the
     * collection of all input item-level ShipToLocations plus international shipping
     * service-level ShipToLocation values.
     * <br><br>
     * If you have specified a region to which you will ship (such as Asia), you can
     * use ExcludeShipToLocation to exclude certain countries within that region to
     * where you will not ship (such as Afghanistan).
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.util.List<java.lang.String>
	 */
	public void setShipToLocations(List<String> shipToLocations) {
	    this.shipToLocations = shipToLocations;
	}
	/**
     * public getter
     *
     * 
     * The name of the site on which the item is listed. The listing site affects
     * the business logic and validation rules that are applied to the request,
     * which in turn affect the values that are returned in the response, as well
     * as values that appear on the eBay Web site. For example, the listing site
     * can affect the validation of Category in listing requests, international
     * business seller requirements, the values of converted (localized) prices in
     * responses, the item-related time stamps that are displayed on the eBay Web
     * site, the visibility of the item in some types of searches, and other
     * information. In some cases, the rules are determined by a combination of
     * the site, the user's registration address, and other information. You
     * cannot change the site when you revise a listing.<br>
     * <br>
     * When you specify Item.Site in AddItem or AddFixedPriceItem, it must be consistent with the
     * numeric site ID that you specify in the request URL (for the SOAP API) or
     * the X-EBAY- API-SITEID header (for the XML API).<br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SiteCodeType
	 */
	public SiteCodeType getSite() {
	    return this.site;
	}
	
	/**
	 * public setter
	 *
     * 
     * The name of the site on which the item is listed. The listing site affects
     * the business logic and validation rules that are applied to the request,
     * which in turn affect the values that are returned in the response, as well
     * as values that appear on the eBay Web site. For example, the listing site
     * can affect the validation of Category in listing requests, international
     * business seller requirements, the values of converted (localized) prices in
     * responses, the item-related time stamps that are displayed on the eBay Web
     * site, the visibility of the item in some types of searches, and other
     * information. In some cases, the rules are determined by a combination of
     * the site, the user's registration address, and other information. You
     * cannot change the site when you revise a listing.<br>
     * <br>
     * When you specify Item.Site in AddItem or AddFixedPriceItem, it must be consistent with the
     * numeric site ID that you specify in the request URL (for the SOAP API) or
     * the X-EBAY- API-SITEID header (for the XML API).<br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.SiteCodeType
	 */
	public void setSite(SiteCodeType site) {
	    this.site = site;
	}
	/**
     * public getter
     *
     * 
     * This value indicates the starting price of the item when it is listed for the
     * first time, or when it is revised or relisted.
     * <br><br>
     * <b>For auction listings:</b> competitive bidding starts at this
     * value. Once at least one bid has been placed, StartPrice remains the same but
     * CurrentPrice is increased to the amount of the current highest bid. If ReservePrice
     * is also specified, the value of StartPrice must be lower than the value of
     * ReservePrice.
     * <br><br>
     * <b>For fixed-price listings: </b>
     * This is the fixed-price at which a buyer may purchase the item.
     * <br><br>
     * <span class="tablenote"><b>Note:</b>
     * There are seller limits on the US site for users who registered after October 2010.
     * Seller limits control the quantity of items and/or the total value
     * of the item(s) in the listing. (The <b>GetMyeBaySelling</b> call
     * returns the remaining item quantity and remaining total value under the limits for
     * the seller, if any such limits exist for the seller). If a call to add an item or
     * revise an item would result in the exceeding of these limits, the add item or
     * revise item call will fail. For auction listings, the total value limit applies to
     * the start price, not the final sale amount. For more information, see the link to
     * Seller Limits below.
     * </span>
     * <b>GetMyeBaySelling</b> does not return Item.StartPrice
     * for fixed price items--it returns Item.SellingStatus.CurrentPrice.
     * <br><br>
     * <b>For AddFixedPriceItem and VerifyAddFixedPriceItem:</b>
     * Required when no variations are specified. If variations are specified,
     * use Variation.StartPrice for each variation instead.
     * <br>
     * <br>
     * Also applicable to Half.com (valid range 0.75 to 9999.99). You can revise
     * this field for Half.com listings.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getStartPrice() {
	    return this.startPrice;
	}
	
	/**
	 * public setter
	 *
     * 
     * This value indicates the starting price of the item when it is listed for the
     * first time, or when it is revised or relisted.
     * <br><br>
     * <b>For auction listings:</b> competitive bidding starts at this
     * value. Once at least one bid has been placed, StartPrice remains the same but
     * CurrentPrice is increased to the amount of the current highest bid. If ReservePrice
     * is also specified, the value of StartPrice must be lower than the value of
     * ReservePrice.
     * <br><br>
     * <b>For fixed-price listings: </b>
     * This is the fixed-price at which a buyer may purchase the item.
     * <br><br>
     * <span class="tablenote"><b>Note:</b>
     * There are seller limits on the US site for users who registered after October 2010.
     * Seller limits control the quantity of items and/or the total value
     * of the item(s) in the listing. (The <b>GetMyeBaySelling</b> call
     * returns the remaining item quantity and remaining total value under the limits for
     * the seller, if any such limits exist for the seller). If a call to add an item or
     * revise an item would result in the exceeding of these limits, the add item or
     * revise item call will fail. For auction listings, the total value limit applies to
     * the start price, not the final sale amount. For more information, see the link to
     * Seller Limits below.
     * </span>
     * <b>GetMyeBaySelling</b> does not return Item.StartPrice
     * for fixed price items--it returns Item.SellingStatus.CurrentPrice.
     * <br><br>
     * <b>For AddFixedPriceItem and VerifyAddFixedPriceItem:</b>
     * Required when no variations are specified. If variations are specified,
     * use Variation.StartPrice for each variation instead.
     * <br>
     * <br>
     * Also applicable to Half.com (valid range 0.75 to 9999.99). You can revise
     * this field for Half.com listings.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setStartPrice(AmountType startPrice) {
	    this.startPrice = startPrice;
	}
	/**
     * public getter
     *
     * 
     * Contains information related to the item in the context of a seller's eBay
     * Store. Applicable for auction and fixed-price listings listed by eBay Stores sellers.<br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.StorefrontType
	 */
	public StorefrontType getStorefront() {
	    return this.storefront;
	}
	
	/**
	 * public setter
	 *
     * 
     * Contains information related to the item in the context of a seller's eBay
     * Store. Applicable for auction and fixed-price listings listed by eBay Stores sellers.<br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.StorefrontType
	 */
	public void setStorefront(StorefrontType storefront) {
	    this.storefront = storefront;
	}
	/**
     * public getter
     *
     * 
     * Subtitle to use in addition to the title. Provides more keywords when buyers
     * search in titles and descriptions. You cannot use HTML in the Subtitle. (HTML
     * characters will be interpreted literally as plain text.) If you pass any
     * value, this feature is applied (with applicable fees).<br>
     * <br>
     * Not applicable to listings in US eBay Motors passenger vehicle, motorcycle,
     * and "other vehicle" categories or to listings in CA eBay Motors passenger
     * vehicle and motorcycle categories. For eBay Motors categories that do
     * not support this field, use Item Specifics (AttributeSetArray) to specify the
     * vehicle subtitle.<br>
     * <br>
     * When you revise a item, you can add, change, or remove the
     * subtitle.<br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.String
	 */
	public String getSubTitle() {
	    return this.subTitle;
	}
	
	/**
	 * public setter
	 *
     * 
     * Subtitle to use in addition to the title. Provides more keywords when buyers
     * search in titles and descriptions. You cannot use HTML in the Subtitle. (HTML
     * characters will be interpreted literally as plain text.) If you pass any
     * value, this feature is applied (with applicable fees).<br>
     * <br>
     * Not applicable to listings in US eBay Motors passenger vehicle, motorcycle,
     * and "other vehicle" categories or to listings in CA eBay Motors passenger
     * vehicle and motorcycle categories. For eBay Motors categories that do
     * not support this field, use Item Specifics (AttributeSetArray) to specify the
     * vehicle subtitle.<br>
     * <br>
     * When you revise a item, you can add, change, or remove the
     * subtitle.<br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.String
	 */
	public void setSubTitle(String subTitle) {
	    this.subTitle = subTitle;
	}
	/**
     * public getter
     *
     * 
     * Time left before the listing ends.
     * The duration is represented in the ISO 8601 duration format (PnYnMnDTnHnMnS).
     * See Data Types in the Trading API Guide for information about this format.
     * For ended listings, the time left is PT0S (zero seconds).
     * Not applicable to Half.com.
     * 
     *
     * @returns com.leansoft.nano.custom.types.Duration
	 */
	public Duration getTimeLeft() {
	    return this.timeLeft;
	}
	
	/**
	 * public setter
	 *
     * 
     * Time left before the listing ends.
     * The duration is represented in the ISO 8601 duration format (PnYnMnDTnHnMnS).
     * See Data Types in the Trading API Guide for information about this format.
     * For ended listings, the time left is PT0S (zero seconds).
     * Not applicable to Half.com.
     * 
     *
     * @param com.leansoft.nano.custom.types.Duration
	 */
	public void setTimeLeft(Duration timeLeft) {
	    this.timeLeft = timeLeft;
	}
	/**
     * public getter
     *
     * 
     * Name of the item as it appears in the listing or search results. Title is
     * required for most items. This field is only optional if you leverage Pre-filled
     * Item Information by using the Item.ProductListingDetails or
     * Item.ExternalProductID containers.
     * <br><br>
     * You cannot use HTML or JavaScript in the Title.
     * (HTML characters will be
     * interpreted literally as plain text.)
     * <br><br>
     * <b>For the AddItem family of calls</b>: Not applicable to Half.com. <br>
     * <br>
     * <b>For ReviseItem and ReviseFixedPriceItem</b>
     * You can only add or change the item title if the listing has no
     * bids (for auctions) or sales (for fixed-price listings) and
     * the listing does not end within 12 hours.<br>
     * <br>
     * <b>For GetItemRecommendations</b>: More keywords in the
     * title usually result in more relevant Listing Analyzer
     * recommendations.
     * 
     *
     * @returns java.lang.String
	 */
	public String getTitle() {
	    return this.title;
	}
	
	/**
	 * public setter
	 *
     * 
     * Name of the item as it appears in the listing or search results. Title is
     * required for most items. This field is only optional if you leverage Pre-filled
     * Item Information by using the Item.ProductListingDetails or
     * Item.ExternalProductID containers.
     * <br><br>
     * You cannot use HTML or JavaScript in the Title.
     * (HTML characters will be
     * interpreted literally as plain text.)
     * <br><br>
     * <b>For the AddItem family of calls</b>: Not applicable to Half.com. <br>
     * <br>
     * <b>For ReviseItem and ReviseFixedPriceItem</b>
     * You can only add or change the item title if the listing has no
     * bids (for auctions) or sales (for fixed-price listings) and
     * the listing does not end within 12 hours.<br>
     * <br>
     * <b>For GetItemRecommendations</b>: More keywords in the
     * title usually result in more relevant Listing Analyzer
     * recommendations.
     * 
     *
     * @param java.lang.String
	 */
	public void setTitle(String title) {
	    this.title = title;
	}
	/**
     * public getter
     *
     * 
     * Universally unique constraint tag. Use UUID to ensure that you only list a
     * particular item once, particularly if you are listing many items at once. If
     * you add an item and do not get a response, resend the request with the same
     * UUID. If the item was successfully listed the first time, you will receive
     * an error message for trying to use a UUID that you have already used. The
     * error will also include the item ID for the duplicated item and a boolean
     * value indicating whether the duplicate UUID was sent by the same application.
     * <br><br>
     * We recommend you use Item.UUID with calls that add item objects (for example, AddItem
     * and RelistItem). For calls that modify an existing item, such as ReviseItem, use
     * InvocationID instead.
     * <br><br>
     * The UUID can only contain digits from 0-9 and letters from A-F and must be
     * 32 characters long. The UUID value must be unique across all item listings
     * on all sites.
     * <br><br>
     * Also applicable as input to AddItem and related calls when you list
     * items to Half.com.
     * 
     *
     * @returns java.lang.String
	 */
	public String getUuid() {
	    return this.uuid;
	}
	
	/**
	 * public setter
	 *
     * 
     * Universally unique constraint tag. Use UUID to ensure that you only list a
     * particular item once, particularly if you are listing many items at once. If
     * you add an item and do not get a response, resend the request with the same
     * UUID. If the item was successfully listed the first time, you will receive
     * an error message for trying to use a UUID that you have already used. The
     * error will also include the item ID for the duplicated item and a boolean
     * value indicating whether the duplicate UUID was sent by the same application.
     * <br><br>
     * We recommend you use Item.UUID with calls that add item objects (for example, AddItem
     * and RelistItem). For calls that modify an existing item, such as ReviseItem, use
     * InvocationID instead.
     * <br><br>
     * The UUID can only contain digits from 0-9 and letters from A-F and must be
     * 32 characters long. The UUID value must be unique across all item listings
     * on all sites.
     * <br><br>
     * Also applicable as input to AddItem and related calls when you list
     * items to Half.com.
     * 
     *
     * @param java.lang.String
	 */
	public void setUuid(String uuid) {
	    this.uuid = uuid;
	}
	/**
     * public getter
     *
     * 
     * Container for eBay's VAT features. A business seller can choose to
     * offer an item exclusively to bidders and buyers that also represent businesses.
     * Only applicable when the item is listed in a B2B-enabled category (on a site
     * that supports B2B business features).<br>
     * <br>
     * <span class="tablenote"><strong>Note:</strong>
     * The India site (Global ID 203) does not accept VAT values in item listings. If you
     * submit an item to the India site with a VAT value, eBay generates a warning message
     * that indicates the listing was accepted, but the VAT value was removed. To include
     * the VAT, relist the item with a Price value that includes the VAT. Sellers are
     * solely responsible for compliance relating to tax legislation in India.
     * </span>
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.VATDetailsType
	 */
	public VATDetailsType getVatDetails() {
	    return this.vatDetails;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container for eBay's VAT features. A business seller can choose to
     * offer an item exclusively to bidders and buyers that also represent businesses.
     * Only applicable when the item is listed in a B2B-enabled category (on a site
     * that supports B2B business features).<br>
     * <br>
     * <span class="tablenote"><strong>Note:</strong>
     * The India site (Global ID 203) does not accept VAT values in item listings. If you
     * submit an item to the India site with a VAT value, eBay generates a warning message
     * that indicates the listing was accepted, but the VAT value was removed. To include
     * the VAT, relist the item with a Price value that includes the VAT. Sellers are
     * solely responsible for compliance relating to tax legislation in India.
     * </span>
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.VATDetailsType
	 */
	public void setVatDetails(VATDetailsType vatDetails) {
	    this.vatDetails = vatDetails;
	}
	/**
     * public getter
     *
     * 
     * The seller is on vacation (as determined by the seller's store preferences) in
     * two cases: i.) the item is a Store Inventory item and the seller has chosen to
     * hide Store Inventory items while on vacation, and ii.) the seller has chosen
     * to add a message to listed items while on vacation.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.String
	 */
	public String getSellerVacationNote() {
	    return this.sellerVacationNote;
	}
	
	/**
	 * public setter
	 *
     * 
     * The seller is on vacation (as determined by the seller's store preferences) in
     * two cases: i.) the item is a Store Inventory item and the seller has chosen to
     * hide Store Inventory items while on vacation, and ii.) the seller has chosen
     * to add a message to listed items while on vacation.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.String
	 */
	public void setSellerVacationNote(String sellerVacationNote) {
	    this.sellerVacationNote = sellerVacationNote;
	}
	/**
     * public getter
     *
     * 
     * The number of watches placed on this item from buyers' My eBay accounts.
     * Specify IncludeWatchCount as true in the request.
     * Returned by GetMyeBaySelling only if greater than 0.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.Long
	 */
	public Long getWatchCount() {
	    return this.watchCount;
	}
	
	/**
	 * public setter
	 *
     * 
     * The number of watches placed on this item from buyers' My eBay accounts.
     * Specify IncludeWatchCount as true in the request.
     * Returned by GetMyeBaySelling only if greater than 0.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.Long
	 */
	public void setWatchCount(Long watchCount) {
	    this.watchCount = watchCount;
	}
	/**
     * public getter
     *
     * 
     * The number of page views for the item. This number is calculated by eBay and
     * cannot be set via the API. Returned if the hit counter type is BasicStyle,
     * RetroStyle, or HiddenStyle. For HiddenStyle, HitCount is returned only if the
     * requestor is the item's seller.
     * 
     *
     * @returns java.lang.Long
	 */
	public Long getHitCount() {
	    return this.hitCount;
	}
	
	/**
	 * public setter
	 *
     * 
     * The number of page views for the item. This number is calculated by eBay and
     * cannot be set via the API. Returned if the hit counter type is BasicStyle,
     * RetroStyle, or HiddenStyle. For HiddenStyle, HitCount is returned only if the
     * requestor is the item's seller.
     * 
     *
     * @param java.lang.Long
	 */
	public void setHitCount(Long hitCount) {
	    this.hitCount = hitCount;
	}
	/**
     * public getter
     *
     * 
     * If true: all buyer requirements (from <b>Item.BuyerRequirementDetails</b>
     * or Buyer requirements preferences in My eBay) are ignored.
     * <br>
     * <br>
     * If false (or omitted): <b>Item.BuyerRequirementDetails</b> or Buyer
     * requirements preferences are used, with <b>Item.BuyerRequirementDetails</b>
     * having the higher precedence.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getDisableBuyerRequirements() {
	    return this.disableBuyerRequirements;
	}
	
	/**
	 * public setter
	 *
     * 
     * If true: all buyer requirements (from <b>Item.BuyerRequirementDetails</b>
     * or Buyer requirements preferences in My eBay) are ignored.
     * <br>
     * <br>
     * If false (or omitted): <b>Item.BuyerRequirementDetails</b> or Buyer
     * requirements preferences are used, with <b>Item.BuyerRequirementDetails</b>
     * having the higher precedence.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setDisableBuyerRequirements(Boolean disableBuyerRequirements) {
	    this.disableBuyerRequirements = disableBuyerRequirements;
	}
	/**
     * public getter
     *
     * 
     * Container for BestOffer properties associated with the item.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.BestOfferDetailsType
	 */
	public BestOfferDetailsType getBestOfferDetails() {
	    return this.bestOfferDetails;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container for BestOffer properties associated with the item.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.BestOfferDetailsType
	 */
	public void setBestOfferDetails(BestOfferDetailsType bestOfferDetails) {
	    this.bestOfferDetails = bestOfferDetails;
	}
	/**
     * public getter
     *
     * 
     * True if eBay provided a central location as a result of the user
     * not specifying a location. This typically occurs when the seller
     * specifies PostalCode without Location.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getLocationDefaulted() {
	    return this.locationDefaulted;
	}
	
	/**
	 * public setter
	 *
     * 
     * True if eBay provided a central location as a result of the user
     * not specifying a location. This typically occurs when the seller
     * specifies PostalCode without Location.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setLocationDefaulted(Boolean locationDefaulted) {
	    this.locationDefaulted = locationDefaulted;
	}
	/**
     * public getter
     *
     * 
     * As of July 1, 2011, third-party applications can no longer be used for
     * checkout. All purchased items must go through the eBay Checkout flow.
     * <br><br>
     * This field can no longer be passed into the Add Item family of calls.
     * <br><br>
     * This field will be returned in some calls (that return the Item container) if
     * it was set to True at listing time (for listings created before July 1, 2011).
     * If this field was set to True at listing time, the user must include this field
     * and set it to False in the Relist and Revise Item family of calls. Otherwise,
     * the caller may get an error.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getThirdPartyCheckout() {
	    return this.thirdPartyCheckout;
	}
	
	/**
	 * public setter
	 *
     * 
     * As of July 1, 2011, third-party applications can no longer be used for
     * checkout. All purchased items must go through the eBay Checkout flow.
     * <br><br>
     * This field can no longer be passed into the Add Item family of calls.
     * <br><br>
     * This field will be returned in some calls (that return the Item container) if
     * it was set to True at listing time (for listings created before July 1, 2011).
     * If this field was set to True at listing time, the user must include this field
     * and set it to False in the Relist and Revise Item family of calls. Otherwise,
     * the caller may get an error.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setThirdPartyCheckout(Boolean thirdPartyCheckout) {
	    this.thirdPartyCheckout = thirdPartyCheckout;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether the seller's tax table is to be used when applying and
     * calculating sales tax for an order line item. A sales tax table can be
     * created programmatically using the SetTaxTable call, or it can be created
     * manually in My eBay's Selling Preferences. If UseTaxTable is set to true,
     * the values contained in the seller's sales tax table will supersede the
     * values contained in the Item.ShippingDetails.SalesTax container (if
     * included in the request).<br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getUseTaxTable() {
	    return this.useTaxTable;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether the seller's tax table is to be used when applying and
     * calculating sales tax for an order line item. A sales tax table can be
     * created programmatically using the SetTaxTable call, or it can be created
     * manually in My eBay's Selling Preferences. If UseTaxTable is set to true,
     * the values contained in the seller's sales tax table will supersede the
     * values contained in the Item.ShippingDetails.SalesTax container (if
     * included in the request).<br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setUseTaxTable(Boolean useTaxTable) {
	    this.useTaxTable = useTaxTable;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether the seller has committed to the GetItFast
     * shipping rules for this listing. If the GetItFast field is set
     * to true, and the seller's first priority domestic shipping
     * service (the service that has the ShippingServicePriority
     * field set to 1) is an expedited shipping service, then every
     * shipping service offered for this listing is considered a GetItFast
     * service. Therefore, the seller commits to delivering the item to
     * the buyer-selected shipping service within one day.
     * <br>
     * <br>
     * Not supported for UK Store Inventory format items.
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getGetItFast() {
	    return this.getItFast;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether the seller has committed to the GetItFast
     * shipping rules for this listing. If the GetItFast field is set
     * to true, and the seller's first priority domestic shipping
     * service (the service that has the ShippingServicePriority
     * field set to 1) is an expedited shipping service, then every
     * shipping service offered for this listing is considered a GetItFast
     * service. Therefore, the seller commits to delivering the item to
     * the buyer-selected shipping service within one day.
     * <br>
     * <br>
     * Not supported for UK Store Inventory format items.
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setGetItFast(Boolean getItFast) {
	    this.getItFast = getItFast;
	}
	/**
     * public getter
     *
     * 
     * Applicable for listings in vehicle categories on the US eBay Motors site and
     * eBay Canada site. (No business effect if specified for other categories or
     * sites, as the Web site will not display the information to buyers.) If true,
     * the buyer is responsible for vehicle pickup or shipping. If false, specify
     * vehicle shipping arrangements in the item description. Default is true. (The
     * description can also include vehicle shipping arrangements when this value is
     * true.) If the item has bids or ends within 12 hours, you cannot modify this
     * flag. Do not specify ShippingDetails.ShippingServiceOptions
     * for vehicle listings.
     * <br><br>
     * If true and the listing is on the US eBay Motors site, and you want the
     * listing to be visible on the eBay Canada site, set Item.ShipToLocations to CA.
     * If true and the listing is on the eBay Canada site , and you want your listing
     * to be visible on the US eBay Motors site, set Item.ShipToLocations to US.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getBuyerResponsibleForShipping() {
	    return this.buyerResponsibleForShipping;
	}
	
	/**
	 * public setter
	 *
     * 
     * Applicable for listings in vehicle categories on the US eBay Motors site and
     * eBay Canada site. (No business effect if specified for other categories or
     * sites, as the Web site will not display the information to buyers.) If true,
     * the buyer is responsible for vehicle pickup or shipping. If false, specify
     * vehicle shipping arrangements in the item description. Default is true. (The
     * description can also include vehicle shipping arrangements when this value is
     * true.) If the item has bids or ends within 12 hours, you cannot modify this
     * flag. Do not specify ShippingDetails.ShippingServiceOptions
     * for vehicle listings.
     * <br><br>
     * If true and the listing is on the US eBay Motors site, and you want the
     * listing to be visible on the eBay Canada site, set Item.ShipToLocations to CA.
     * If true and the listing is on the eBay Canada site , and you want your listing
     * to be visible on the US eBay Motors site, set Item.ShipToLocations to US.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setBuyerResponsibleForShipping(Boolean buyerResponsibleForShipping) {
	    this.buyerResponsibleForShipping = buyerResponsibleForShipping;
	}
	/**
     * public getter
     *
     * 
     * This feature is no longer supported. This field will be removed
     * from the schema in an upcoming release.
     * Applicable to US eBay Motors vehicle listings
     * only. If false, the vehicle was not considered for a
     * limited warranty by eBay. If your application lists
     * Motors vehicles, you were required to provide the seller with an opportunity to indicate
     * whether the vehicle has not been modified and is not a special type (e.g.,
     * Corvette ZR1). If LimitedWarrantyEligible was passed in, it meant the
     * application presented the seller with checkboxes to indicate this
     * information. If true, the seller verified that the vehicle has not been
     * modified and is not a special type. If false, the seller verified that
     * vehicle has been modified or it is a special type. Passing a value of true
     * did not guarantee that eBay would offer a limited warranty. It only made the
     * listing eligible for consideration.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getLimitedWarrantyEligible() {
	    return this.limitedWarrantyEligible;
	}
	
	/**
	 * public setter
	 *
     * 
     * This feature is no longer supported. This field will be removed
     * from the schema in an upcoming release.
     * Applicable to US eBay Motors vehicle listings
     * only. If false, the vehicle was not considered for a
     * limited warranty by eBay. If your application lists
     * Motors vehicles, you were required to provide the seller with an opportunity to indicate
     * whether the vehicle has not been modified and is not a special type (e.g.,
     * Corvette ZR1). If LimitedWarrantyEligible was passed in, it meant the
     * application presented the seller with checkboxes to indicate this
     * information. If true, the seller verified that the vehicle has not been
     * modified and is not a special type. If false, the seller verified that
     * vehicle has been modified or it is a special type. Passing a value of true
     * did not guarantee that eBay would offer a limited warranty. It only made the
     * listing eligible for consideration.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setLimitedWarrantyEligible(Boolean limitedWarrantyEligible) {
	    this.limitedWarrantyEligible = limitedWarrantyEligible;
	}
	/**
     * public getter
     *
     * 
     * Returns a note from eBay displayed below items in the user's My
     * eBay account.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.String
	 */
	public String getEBayNotes() {
	    return this.eBayNotes;
	}
	
	/**
	 * public setter
	 *
     * 
     * Returns a note from eBay displayed below items in the user's My
     * eBay account.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.String
	 */
	public void setEBayNotes(String eBayNotes) {
	    this.eBayNotes = eBayNotes;
	}
	/**
     * public getter
     *
     * 
     * Specifies the number of questions buyers have posted about the
     * item. Returned only if greater than 0.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.Long
	 */
	public Long getQuestionCount() {
	    return this.questionCount;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the number of questions buyers have posted about the
     * item. Returned only if greater than 0.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.Long
	 */
	public void setQuestionCount(Long questionCount) {
	    this.questionCount = questionCount;
	}
	/**
     * public getter
     *
     * 
     * Whether or not the item is a relisted item. This value is
     * determined by eBay and cannot be set. Only returned if the
     * item was relisted.
     * <br><br>
     * Note that when an item is relisted and is given a new
     * ItemID, the original item shows Relisted = true, but the new
     * item does NOT show Relisted = true. In this context, the new
     * item is a new listing, not a "Relisted" one.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getRelisted() {
	    return this.relisted;
	}
	
	/**
	 * public setter
	 *
     * 
     * Whether or not the item is a relisted item. This value is
     * determined by eBay and cannot be set. Only returned if the
     * item was relisted.
     * <br><br>
     * Note that when an item is relisted and is given a new
     * ItemID, the original item shows Relisted = true, but the new
     * item does NOT show Relisted = true. In this context, the new
     * item is a new listing, not a "Relisted" one.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setRelisted(Boolean relisted) {
	    this.relisted = relisted;
	}
	/**
     * public getter
     *
     * 
     * Specifies how many of a certain item are available.<br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getQuantityAvailable() {
	    return this.quantityAvailable;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies how many of a certain item are available.<br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setQuantityAvailable(Integer quantityAvailable) {
	    this.quantityAvailable = quantityAvailable;
	}
	/**
     * public getter
     *
     * 
     * A SKU (stock keeping unit) is an identifier defined by a seller.
     * Some sellers use SKUs to track complex flows of products
     * and information on the client side.
     * A seller can specify a SKU when listing an item with AddItem
     * and related calls. eBay preserves the SKU on the item, enabling you
     * to obtain it before and after an order line item is created.
     * (SKU is recommended as an alternative to ApplicationData.)<br>
     * <br>
     * A SKU is not required to be unique, when you track listings by
     * their ItemID (the default tracking method). A seller can specify a
     * particular SKU on one item or on multiple items.
     * Different sellers can use the same SKUs.<br>
     * <br>
     * If you want to use SKU instead of ItemID as a unique identifier
     * (such as when retrieving items and orders), you can set
     * Item.InventoryTrackingMethod to SKU in AddFixedPriceItem and
     * related calls. In this case, the SKU must be
     * unique across your (the seller's) active listings.
     * Note that if you relist the item, you must reset
     * Item.InventoryTrackingMethod to SKU; otherwise the relisted
     * item will default to ItemID as the tracking method. <br>
     * <br>
     * If both ItemID and SKU are specified in item-retrieval and
     * order-retrieval calls that support the use of SKU as a unique
     * identifier, the ItemID value takes precedence and is used to
     * identify the listing.<br>
     * <br>
     * For multi-variation listings, the SKU can be used to uniquely identify a variation that is being revised or relisted.
     * If InventoryTrackingMethod is ItemID, an ItemID is also required.
     * When both SKU and VariationSpecifics are passed in the request, the variation specifics take precedence as the unique identifier. <br>
     * <br>
     * <span class="tablenote"><b>Note:</b>
     * The eBay Web site UI cannot identify listings by SKU. For example,
     * My eBay pages and Search pages all identify listings by item ID.
     * When a buyer contacts you via eBay's messaging functionality, eBay
     * uses the item ID as the identifier. Buyer-focused APIs (like the
     * Shopping API) also do not support SKU as an identifier.
     * </span>
     * <b>For revising and relisting only:</b>
     * To remove a SKU when you revise or relist an item, use DeletedField.
     * (You cannot remove a SKU when Item.InventoryTrackingMethod is set
     * to SKU.)<br>
     * <br>
     * For GetMyeBaySelling, this is only returned if set.
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.String
	 */
	public String getSku() {
	    return this.sku;
	}
	
	/**
	 * public setter
	 *
     * 
     * A SKU (stock keeping unit) is an identifier defined by a seller.
     * Some sellers use SKUs to track complex flows of products
     * and information on the client side.
     * A seller can specify a SKU when listing an item with AddItem
     * and related calls. eBay preserves the SKU on the item, enabling you
     * to obtain it before and after an order line item is created.
     * (SKU is recommended as an alternative to ApplicationData.)<br>
     * <br>
     * A SKU is not required to be unique, when you track listings by
     * their ItemID (the default tracking method). A seller can specify a
     * particular SKU on one item or on multiple items.
     * Different sellers can use the same SKUs.<br>
     * <br>
     * If you want to use SKU instead of ItemID as a unique identifier
     * (such as when retrieving items and orders), you can set
     * Item.InventoryTrackingMethod to SKU in AddFixedPriceItem and
     * related calls. In this case, the SKU must be
     * unique across your (the seller's) active listings.
     * Note that if you relist the item, you must reset
     * Item.InventoryTrackingMethod to SKU; otherwise the relisted
     * item will default to ItemID as the tracking method. <br>
     * <br>
     * If both ItemID and SKU are specified in item-retrieval and
     * order-retrieval calls that support the use of SKU as a unique
     * identifier, the ItemID value takes precedence and is used to
     * identify the listing.<br>
     * <br>
     * For multi-variation listings, the SKU can be used to uniquely identify a variation that is being revised or relisted.
     * If InventoryTrackingMethod is ItemID, an ItemID is also required.
     * When both SKU and VariationSpecifics are passed in the request, the variation specifics take precedence as the unique identifier. <br>
     * <br>
     * <span class="tablenote"><b>Note:</b>
     * The eBay Web site UI cannot identify listings by SKU. For example,
     * My eBay pages and Search pages all identify listings by item ID.
     * When a buyer contacts you via eBay's messaging functionality, eBay
     * uses the item ID as the identifier. Buyer-focused APIs (like the
     * Shopping API) also do not support SKU as an identifier.
     * </span>
     * <b>For revising and relisting only:</b>
     * To remove a SKU when you revise or relist an item, use DeletedField.
     * (You cannot remove a SKU when Item.InventoryTrackingMethod is set
     * to SKU.)<br>
     * <br>
     * For GetMyeBaySelling, this is only returned if set.
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.String
	 */
	public void setSku(String sku) {
	    this.sku = sku;
	}
	/**
     * public getter
     *
     * 
     * Allows eBay to auto-fill some of a listing's Item Specifics (attribute) values
     * based on the listing's category (or categories). Auto-filling attributes based
     * on a category is not the same as using Pre-filled Item Information based on a
     * catalog product (see ProductListingDetails). If true, also specify
     * Item.CategoryMappingAllowed with a value of true. See the Trading API Guide for more information.
     * Ignored if the category does not support auto-filling attributes.<br>
     * <br>
     * If you also pass in attributes in AttributeSetArray, your values will override
     * any auto-filled values for the same attributes. Once you have overridden the
     * value of an auto-filled attribute for a given listing, eBay will not auto-fill
     * it on subsequent ReviseItem requests (even if you remove the overridden
     * value). <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getCategoryBasedAttributesPrefill() {
	    return this.categoryBasedAttributesPrefill;
	}
	
	/**
	 * public setter
	 *
     * 
     * Allows eBay to auto-fill some of a listing's Item Specifics (attribute) values
     * based on the listing's category (or categories). Auto-filling attributes based
     * on a category is not the same as using Pre-filled Item Information based on a
     * catalog product (see ProductListingDetails). If true, also specify
     * Item.CategoryMappingAllowed with a value of true. See the Trading API Guide for more information.
     * Ignored if the category does not support auto-filling attributes.<br>
     * <br>
     * If you also pass in attributes in AttributeSetArray, your values will override
     * any auto-filled values for the same attributes. Once you have overridden the
     * value of an auto-filled attribute for a given listing, eBay will not auto-fill
     * it on subsequent ReviseItem requests (even if you remove the overridden
     * value). <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setCategoryBasedAttributesPrefill(Boolean categoryBasedAttributesPrefill) {
	    this.categoryBasedAttributesPrefill = categoryBasedAttributesPrefill;
	}
	/**
     * public getter
     *
     * 
     * Container for values that indicate whether a listing uses the Buy It Now feature,
     * whether a listing is no more than one day old, and whether a listing has an image
     * associated with it.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SearchDetailsType
	 */
	public SearchDetailsType getSearchDetails() {
	    return this.searchDetails;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container for values that indicate whether a listing uses the Buy It Now feature,
     * whether a listing is no more than one day old, and whether a listing has an image
     * associated with it.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.SearchDetailsType
	 */
	public void setSearchDetails(SearchDetailsType searchDetails) {
	    this.searchDetails = searchDetails;
	}
	/**
     * public getter
     *
     * 
     * Postal code of the place where the item is located. This value is used for
     * proximity searches. To remove this value when revising or relisting an item,
     * use DeletedField. If you do not specify PostalCode, you must specify
     * Item.Location. If you specify PostalCode, but do not specify Item.Location,
     * then Item.Location is given a default value derived from the postal code.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.String
	 */
	public String getPostalCode() {
	    return this.postalCode;
	}
	
	/**
	 * public setter
	 *
     * 
     * Postal code of the place where the item is located. This value is used for
     * proximity searches. To remove this value when revising or relisting an item,
     * use DeletedField. If you do not specify PostalCode, you must specify
     * Item.Location. If you specify PostalCode, but do not specify Item.Location,
     * then Item.Location is given a default value derived from the postal code.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.String
	 */
	public void setPostalCode(String postalCode) {
	    this.postalCode = postalCode;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether details about shipping costs and arrangements are
     * specified in the item description.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getShippingTermsInDescription() {
	    return this.shippingTermsInDescription;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether details about shipping costs and arrangements are
     * specified in the item description.
     * <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setShippingTermsInDescription(Boolean shippingTermsInDescription) {
	    this.shippingTermsInDescription = shippingTermsInDescription;
	}
	/**
     * public getter
     *
     * 
     * <b>This field will be removed in a future release.
     * </b> New applications should use ProductListingDetails instead.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ExternalProductIDType
	 */
	public ExternalProductIDType getExternalProductID() {
	    return this.externalProductID;
	}
	
	/**
	 * public setter
	 *
     * 
     * <b>This field will be removed in a future release.
     * </b> New applications should use ProductListingDetails instead.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ExternalProductIDType
	 */
	public void setExternalProductID(ExternalProductIDType externalProductID) {
	    this.externalProductID = externalProductID;
	}
	/**
     * public getter
     *
     * 
     * Unique identifier for a Half.com item. Must be an alphanumeric value (with no
     * symbols) that is unique across the seller's active (unsold) inventory on
     * Half.com. For Half.com, you can specify either ItemID or SellerInventoryID in
     * a ReviseItem request to uniquely identify the listing. Only returned from
     * GetOrders if the seller specified a value when the item was listed. You cannot
     * revise this field.
     * <br><br>
     * Not applicable to eBay.com listings.
     * 
     *
     * @returns java.lang.String
	 */
	public String getSellerInventoryID() {
	    return this.sellerInventoryID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Unique identifier for a Half.com item. Must be an alphanumeric value (with no
     * symbols) that is unique across the seller's active (unsold) inventory on
     * Half.com. For Half.com, you can specify either ItemID or SellerInventoryID in
     * a ReviseItem request to uniquely identify the listing. Only returned from
     * GetOrders if the seller specified a value when the item was listed. You cannot
     * revise this field.
     * <br><br>
     * Not applicable to eBay.com listings.
     * 
     *
     * @param java.lang.String
	 */
	public void setSellerInventoryID(String sellerInventoryID) {
	    this.sellerInventoryID = sellerInventoryID;
	}
	/**
     * public getter
     *
     * 
     * Contains the data for a picture associated with an item. With the exception of
     * eBay Motors vehicle listings, you can add up to 12 standard pictures free of
     * charge.<br>
     * <br>
     * <span class="tablenote"><b>Note:</b>
     * As of October 1, 2012, all listings must have at least one picture.
     * </span>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.PictureDetailsType
	 */
	public PictureDetailsType getPictureDetails() {
	    return this.pictureDetails;
	}
	
	/**
	 * public setter
	 *
     * 
     * Contains the data for a picture associated with an item. With the exception of
     * eBay Motors vehicle listings, you can add up to 12 standard pictures free of
     * charge.<br>
     * <br>
     * <span class="tablenote"><b>Note:</b>
     * As of October 1, 2012, all listings must have at least one picture.
     * </span>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.PictureDetailsType
	 */
	public void setPictureDetails(PictureDetailsType pictureDetails) {
	    this.pictureDetails = pictureDetails;
	}
	/**
     * public getter
     *
     * 
     * Specifies the maximum number of business days the seller
     * commits to for preparing an item to be shipped after receiving a
     * cleared payment. This time does not include the shipping time (the carrier's transit time).<br>
     * <br>
     * <b>For the AddItem family of calls:</b> Required for
     * listings in certain categories when certain shipping services
     * (with delivery) are offered. See HandlingTimeEnabled in
     * GetCategoryFeatures.
     * <br><br>
     * The seller sets this to a positive integer value corresponding to the number of days. For a list of allowed values on each eBay site, use <b>GeteBayDetails</b> with <b>DetailName</b> set to <b>DispatchTimeMaxDetails</b>. (Typical values are 1, 2, 3, 4, 5, 10, 15, or 20, but this can vary by site and these may change over time.)
     * <br><br>
     * Valid for flat and calculated shipping. Does not apply when there is no shipping, when it is local pickup only or it is freight shipping. For example, when ShippingService=Pickup or ShipToLocations=None, then DispatchTimeMax is not required.
     * <br/><br/>
     *                   <span class="tablenote">
     *                   <strong>Note:</strong> A dispatch time value of '<code>0</code>' is not valid for use on eBay sites. With Add, Relist, Revise and Verify calls, if you wish to indicate that a listing with flat or calculated shipping has no handling time commitment, submit <b>Item.DispatchTimeMax</b> as an empty field.
     *                   </span>
     * To add Get It Fast to listings (for domestic shipping), in addition to setting GetItFast to true,
     * DispatchTimeMax must be set to 1 and the seller must specify at least
     * one qualifying expedited shipping service. <br>
     * <br>
     * <span class="tablenote"><b>Note:</b>
     * To receive a Top-Rated Plus seal for their listing, Top-Rated Sellers must offer 1-day handling (<b>DispatchTimeMax=1</b>)
     * and accept returns (<b>ReturnPolicy.ReturnsAcceptedOption=ReturnsAccepted</b>).
     * Top-Rated listings qualify for the greatest average boost in Best
     * Match and the 20 percent Final Value Fee discount. For more information on changes to eBay's
     * Top-rated seller program, see the <a href="http://pages.ebay.com/sellerinformation/news/fallupdate2012/newetrsbadge.html">2012 Fall Seller Update</a> page.
     * </span>
     * <br>
     * <b>For ReviseItem only:</b>
     * If the listing has bids or sales and it ends within 12 hours, you can't change this value.
     * If the listing is a GTC listing that has sales or ends within 12 hours
     * (one or the other, but not both), you can add or change this value.
     * If the listing has no bids or sales and more than 12 hours remain before
     * the listing ends, you can add or change the dispatch (handling) time.<br>
     * <br>
     * <b>For GetItem:</b> GetItem returns DispatchTimeMax
     * only when shipping service options are specified for the item and
     * the seller specified a dispatch time.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getDispatchTimeMax() {
	    return this.dispatchTimeMax;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the maximum number of business days the seller
     * commits to for preparing an item to be shipped after receiving a
     * cleared payment. This time does not include the shipping time (the carrier's transit time).<br>
     * <br>
     * <b>For the AddItem family of calls:</b> Required for
     * listings in certain categories when certain shipping services
     * (with delivery) are offered. See HandlingTimeEnabled in
     * GetCategoryFeatures.
     * <br><br>
     * The seller sets this to a positive integer value corresponding to the number of days. For a list of allowed values on each eBay site, use <b>GeteBayDetails</b> with <b>DetailName</b> set to <b>DispatchTimeMaxDetails</b>. (Typical values are 1, 2, 3, 4, 5, 10, 15, or 20, but this can vary by site and these may change over time.)
     * <br><br>
     * Valid for flat and calculated shipping. Does not apply when there is no shipping, when it is local pickup only or it is freight shipping. For example, when ShippingService=Pickup or ShipToLocations=None, then DispatchTimeMax is not required.
     * <br/><br/>
     *                   <span class="tablenote">
     *                   <strong>Note:</strong> A dispatch time value of '<code>0</code>' is not valid for use on eBay sites. With Add, Relist, Revise and Verify calls, if you wish to indicate that a listing with flat or calculated shipping has no handling time commitment, submit <b>Item.DispatchTimeMax</b> as an empty field.
     *                   </span>
     * To add Get It Fast to listings (for domestic shipping), in addition to setting GetItFast to true,
     * DispatchTimeMax must be set to 1 and the seller must specify at least
     * one qualifying expedited shipping service. <br>
     * <br>
     * <span class="tablenote"><b>Note:</b>
     * To receive a Top-Rated Plus seal for their listing, Top-Rated Sellers must offer 1-day handling (<b>DispatchTimeMax=1</b>)
     * and accept returns (<b>ReturnPolicy.ReturnsAcceptedOption=ReturnsAccepted</b>).
     * Top-Rated listings qualify for the greatest average boost in Best
     * Match and the 20 percent Final Value Fee discount. For more information on changes to eBay's
     * Top-rated seller program, see the <a href="http://pages.ebay.com/sellerinformation/news/fallupdate2012/newetrsbadge.html">2012 Fall Seller Update</a> page.
     * </span>
     * <br>
     * <b>For ReviseItem only:</b>
     * If the listing has bids or sales and it ends within 12 hours, you can't change this value.
     * If the listing is a GTC listing that has sales or ends within 12 hours
     * (one or the other, but not both), you can add or change this value.
     * If the listing has no bids or sales and more than 12 hours remain before
     * the listing ends, you can add or change the dispatch (handling) time.<br>
     * <br>
     * <b>For GetItem:</b> GetItem returns DispatchTimeMax
     * only when shipping service options are specified for the item and
     * the seller specified a dispatch time.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setDispatchTimeMax(Integer dispatchTimeMax) {
	    this.dispatchTimeMax = dispatchTimeMax;
	}
	/**
     * public getter
     *
     * 
     * Specifies that Skype-related information is included with an item listing,
     * including, for example, Skype Voice. Skype-related information provides
     * buttons that enable potential buyers to contact sellers through Skype.
     * Information about Skype is available at www.Skype.com. If all of the
     * prerequisites for adding Skype buttons to listings are met (see the eBay Web
     * Services Guide), you can make communication through Skype available in
     * listings. SkypeEnabled must be true if SkypeID and SkypeContactOption are
     * specified.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getSkypeEnabled() {
	    return this.skypeEnabled;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies that Skype-related information is included with an item listing,
     * including, for example, Skype Voice. Skype-related information provides
     * buttons that enable potential buyers to contact sellers through Skype.
     * Information about Skype is available at www.Skype.com. If all of the
     * prerequisites for adding Skype buttons to listings are met (see the eBay Web
     * Services Guide), you can make communication through Skype available in
     * listings. SkypeEnabled must be true if SkypeID and SkypeContactOption are
     * specified.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setSkypeEnabled(Boolean skypeEnabled) {
	    this.skypeEnabled = skypeEnabled;
	}
	/**
     * public getter
     *
     * 
     * The Skype name of the seller. Requires that SkypeEnabled is set to true.
     * Available if the seller has a Skype account and has linked it (on the eBay
     * site) with his or her eBay account.
     * 
     *
     * @returns java.lang.String
	 */
	public String getSkypeID() {
	    return this.skypeID;
	}
	
	/**
	 * public setter
	 *
     * 
     * The Skype name of the seller. Requires that SkypeEnabled is set to true.
     * Available if the seller has a Skype account and has linked it (on the eBay
     * site) with his or her eBay account.
     * 
     *
     * @param java.lang.String
	 */
	public void setSkypeID(String skypeID) {
	    this.skypeID = skypeID;
	}
	/**
     * public getter
     *
     * 
     * Indicates the Skype contact option that the seller and buyer can use to communicate
     * about the listing. For Skype communication to be possible, the
     * <b>SkypeEnabled</b> flag must be included and set to 'true'.
     * The seller must also have a Skype account that is linked with his or her eBay
     * account.
     * <br><br>
     * More than one Skype contact option may be specified.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.SkypeContactOptionCodeType>
	 */
	public List<SkypeContactOptionCodeType> getSkypeContactOption() {
	    return this.skypeContactOption;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates the Skype contact option that the seller and buyer can use to communicate
     * about the listing. For Skype communication to be possible, the
     * <b>SkypeEnabled</b> flag must be included and set to 'true'.
     * The seller must also have a Skype account that is linked with his or her eBay
     * account.
     * <br><br>
     * More than one Skype contact option may be specified.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.SkypeContactOptionCodeType>
	 */
	public void setSkypeContactOption(List<SkypeContactOptionCodeType> skypeContactOption) {
	    this.skypeContactOption = skypeContactOption;
	}
	/**
     * public getter
     *
     * 
     * Indicates, when true, that an item is available by Best Offer.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getBestOfferEnabled() {
	    return this.bestOfferEnabled;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates, when true, that an item is available by Best Offer.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setBestOfferEnabled(Boolean bestOfferEnabled) {
	    this.bestOfferEnabled = bestOfferEnabled;
	}
	/**
     * public getter
     *
     * 
     * Indicates, when true, that an item is available locally.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getLocalListing() {
	    return this.localListing;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates, when true, that an item is available locally.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setLocalListing(Boolean localListing) {
	    this.localListing = localListing;
	}
	/**
     * public getter
     *
     * 
     * As of July 1, 2011, third-party applications can no longer be used for
     * checkout. All purchased items must go through the eBay Checkout flow.
     * <br><br>
     * This field can no longer be passed into the Add Item family of calls.
     * <br><br>
     * This field will be returned in some calls (that return the Item container) if
     * it was set to True at listing time (for listings created before July 1, 2011).
     * If this field was set to True at listing time, the user must include this field
     * and set it to False in the Relist and Revise Item family of calls. Otherwise,
     * the caller may get an error.
     * <br><br>
     * Be aware that you may need to use <b>SetNotificationPreferences</b>
     * to change the <b>ApplicationURL</b> value if you were formerly
     * having Checkout notifications sent to your third-party checkout application.
     * <br><br>
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getThirdPartyCheckoutIntegration() {
	    return this.thirdPartyCheckoutIntegration;
	}
	
	/**
	 * public setter
	 *
     * 
     * As of July 1, 2011, third-party applications can no longer be used for
     * checkout. All purchased items must go through the eBay Checkout flow.
     * <br><br>
     * This field can no longer be passed into the Add Item family of calls.
     * <br><br>
     * This field will be returned in some calls (that return the Item container) if
     * it was set to True at listing time (for listings created before July 1, 2011).
     * If this field was set to True at listing time, the user must include this field
     * and set it to False in the Relist and Revise Item family of calls. Otherwise,
     * the caller may get an error.
     * <br><br>
     * Be aware that you may need to use <b>SetNotificationPreferences</b>
     * to change the <b>ApplicationURL</b> value if you were formerly
     * having Checkout notifications sent to your third-party checkout application.
     * <br><br>
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setThirdPartyCheckoutIntegration(Boolean thirdPartyCheckoutIntegration) {
	    this.thirdPartyCheckoutIntegration = thirdPartyCheckoutIntegration;
	}
	/**
     * public getter
     *
     * 
     * Container consisting of the ProStores store name and user name.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ListingCheckoutRedirectPreferenceType
	 */
	public ListingCheckoutRedirectPreferenceType getListingCheckoutRedirectPreference() {
	    return this.listingCheckoutRedirectPreference;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of the ProStores store name and user name.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ListingCheckoutRedirectPreferenceType
	 */
	public void setListingCheckoutRedirectPreference(ListingCheckoutRedirectPreferenceType listingCheckoutRedirectPreference) {
	    this.listingCheckoutRedirectPreference = listingCheckoutRedirectPreference;
	}
	/**
     * public getter
     *
     * 
     * Contact information for sellers using the Classified Ad format for eBay
     * Motors vehicles categories. To remove seller contact information when
     * revising or relisting an item, use DeletedField. The seller contact details
     * for the primary and secondary phone numbers cannot be deleted
     * individually.
     * <br><br>
     * To provide City, State, and Zip code information in
     * SellerContactDetails use the following field:<br>
     * Item.SellerContactDetails.Street2
     * <br><br>
     * To delete the secondary phone number, for example, you must delete all of
     * the secondary phone fields:<br>
     * Item.SellerContactDetails.Phone2AreaOrCityCode<br>
     * Item.SellerContactDetails.Phone2CountryCode<br>
     * Item.SellerContactDetails.Phone2CountryPrefix<br>
     * Item.SellerContactDetails.Phone2LocalNumber
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AddressType
	 */
	public AddressType getSellerContactDetails() {
	    return this.sellerContactDetails;
	}
	
	/**
	 * public setter
	 *
     * 
     * Contact information for sellers using the Classified Ad format for eBay
     * Motors vehicles categories. To remove seller contact information when
     * revising or relisting an item, use DeletedField. The seller contact details
     * for the primary and secondary phone numbers cannot be deleted
     * individually.
     * <br><br>
     * To provide City, State, and Zip code information in
     * SellerContactDetails use the following field:<br>
     * Item.SellerContactDetails.Street2
     * <br><br>
     * To delete the secondary phone number, for example, you must delete all of
     * the secondary phone fields:<br>
     * Item.SellerContactDetails.Phone2AreaOrCityCode<br>
     * Item.SellerContactDetails.Phone2CountryCode<br>
     * Item.SellerContactDetails.Phone2CountryPrefix<br>
     * Item.SellerContactDetails.Phone2LocalNumber
     * 
     *
     * @param ebay.apis.eblbasecomponents.AddressType
	 */
	public void setSellerContactDetails(AddressType sellerContactDetails) {
	    this.sellerContactDetails = sellerContactDetails;
	}
	/**
     * public getter
     *
     * 
     * The number of questions asked about this item. Applies to eBay Motors Pro
     * applications only.
     * 
     *
     * @returns java.lang.Long
	 */
	public Long getTotalQuestionCount() {
	    return this.totalQuestionCount;
	}
	
	/**
	 * public setter
	 *
     * 
     * The number of questions asked about this item. Applies to eBay Motors Pro
     * applications only.
     * 
     *
     * @param java.lang.Long
	 */
	public void setTotalQuestionCount(Long totalQuestionCount) {
	    this.totalQuestionCount = totalQuestionCount;
	}
	/**
     * public getter
     *
     * 
     * Some listings on the eBay platform originate from eBay affiliates.
     * Depending on the relationship the affiliate has with eBay, there are times
     * when the affiliate retains ownership of the listing. When this occurs
     * the representation of the listing on eBay is considered a proxy item. Proxy
     * items can only be edited using API requests from the applications that
     * originally listed them.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getProxyItem() {
	    return this.proxyItem;
	}
	
	/**
	 * public setter
	 *
     * 
     * Some listings on the eBay platform originate from eBay affiliates.
     * Depending on the relationship the affiliate has with eBay, there are times
     * when the affiliate retains ownership of the listing. When this occurs
     * the representation of the listing on eBay is considered a proxy item. Proxy
     * items can only be edited using API requests from the applications that
     * originally listed them.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setProxyItem(Boolean proxyItem) {
	    this.proxyItem = proxyItem;
	}
	/**
     * public getter
     *
     * 
     * Extended contact information for sellers using the Classified Ad format.
     * Specifies the days and hours when the seller can be contacted.
     * To remove seller contact information when revising or relisting an item, use
     * DeletedField.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ExtendedContactDetailsType
	 */
	public ExtendedContactDetailsType getExtendedSellerContactDetails() {
	    return this.extendedSellerContactDetails;
	}
	
	/**
	 * public setter
	 *
     * 
     * Extended contact information for sellers using the Classified Ad format.
     * Specifies the days and hours when the seller can be contacted.
     * To remove seller contact information when revising or relisting an item, use
     * DeletedField.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ExtendedContactDetailsType
	 */
	public void setExtendedSellerContactDetails(ExtendedContactDetailsType extendedSellerContactDetails) {
	    this.extendedSellerContactDetails = extendedSellerContactDetails;
	}
	/**
     * public getter
     *
     * 
     * Specifies the number of leads (emails) buyers have posted about the item.
     * You must be the seller of the item to retrieve the lead count.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getLeadCount() {
	    return this.leadCount;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the number of leads (emails) buyers have posted about the item.
     * You must be the seller of the item to retrieve the lead count.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setLeadCount(Integer leadCount) {
	    this.leadCount = leadCount;
	}
	/**
     * public getter
     *
     * 
     * Specifies the number of new leads (unanswered emails) buyers have posted
     * about the item.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getNewLeadCount() {
	    return this.newLeadCount;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the number of new leads (unanswered emails) buyers have posted
     * about the item.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setNewLeadCount(Integer newLeadCount) {
	    this.newLeadCount = newLeadCount;
	}
	/**
     * public getter
     *
     * 
     * A list of Item Specific name and value pairs that the
     * seller specified for the item.<br>
     * <br>
     * Item Specifics describe well-known aspects of an
     * item or product in a standard way, to help buyers find that
     * type of item or product more easily.
     * or example, "Publication Year" is a typical aspect of books,
     * and "Megapixels" is a typical aspect of digital cameras.<br>
     * <br>
     * In the AddItem family of calls, use Item.ItemSpecifics to specify
     * custom Item Specifics.<br>
     * <br>
     * To determine which categories support custom Item Specifics, use
     * GetCategoryFeatures.<br>
     * <br>
     * To retrieve recommended Item Specifics, use GetCategorySpecifics.<br>
     * <br>
     * With GetItem, this is only returned when you specify
     * IncludeItemSpecifics in the request (and the seller included
     * custom Item Specifics in their listing).<br>
     * <br>
     * <b>For ReviseItem only:</b> When you revise a listing,
     * if the listing has bids and ends within 12 hours, you cannot change or
     * add Item Specifics. If the listing has bids but ends in more
     * than 12 hours, you cannot change existing Item Specifics, but you can
     * add Item Specifics that were not previously specified.<br>
     * <br>
     * To delete all Item Specifics when you revise or relist, specify
     * Item.ItemSpecifics in DeletedField and don't pass ItemSpecifics in the
     * request.<br>
     * <br>
     * <span class="tablenote"><b>Note:</b>
     * To specify an item's condition, use the ConditionID field
     * instead of a condition item specific.
     * Use GetCategoryFeatures to see which categories support
     * ConditionID and to get a list of valid condition IDs.
     * (If you specify ConditionID and you also specify
     * Condition as a custom item specific, eBay drops the condition
     * item specific.)
     * </span>
     * 
     *
     * @returns ebay.apis.eblbasecomponents.NameValueListArrayType
	 */
	public NameValueListArrayType getItemSpecifics() {
	    return this.itemSpecifics;
	}
	
	/**
	 * public setter
	 *
     * 
     * A list of Item Specific name and value pairs that the
     * seller specified for the item.<br>
     * <br>
     * Item Specifics describe well-known aspects of an
     * item or product in a standard way, to help buyers find that
     * type of item or product more easily.
     * or example, "Publication Year" is a typical aspect of books,
     * and "Megapixels" is a typical aspect of digital cameras.<br>
     * <br>
     * In the AddItem family of calls, use Item.ItemSpecifics to specify
     * custom Item Specifics.<br>
     * <br>
     * To determine which categories support custom Item Specifics, use
     * GetCategoryFeatures.<br>
     * <br>
     * To retrieve recommended Item Specifics, use GetCategorySpecifics.<br>
     * <br>
     * With GetItem, this is only returned when you specify
     * IncludeItemSpecifics in the request (and the seller included
     * custom Item Specifics in their listing).<br>
     * <br>
     * <b>For ReviseItem only:</b> When you revise a listing,
     * if the listing has bids and ends within 12 hours, you cannot change or
     * add Item Specifics. If the listing has bids but ends in more
     * than 12 hours, you cannot change existing Item Specifics, but you can
     * add Item Specifics that were not previously specified.<br>
     * <br>
     * To delete all Item Specifics when you revise or relist, specify
     * Item.ItemSpecifics in DeletedField and don't pass ItemSpecifics in the
     * request.<br>
     * <br>
     * <span class="tablenote"><b>Note:</b>
     * To specify an item's condition, use the ConditionID field
     * instead of a condition item specific.
     * Use GetCategoryFeatures to see which categories support
     * ConditionID and to get a list of valid condition IDs.
     * (If you specify ConditionID and you also specify
     * Condition as a custom item specific, eBay drops the condition
     * item specific.)
     * </span>
     * 
     *
     * @param ebay.apis.eblbasecomponents.NameValueListArrayType
	 */
	public void setItemSpecifics(NameValueListArrayType itemSpecifics) {
	    this.itemSpecifics = itemSpecifics;
	}
	/**
     * public getter
     *
     * 
     * GroupCategoryID is returned if there is a value of
     * BestMatchCategoryGroup in the Order field for the GetSearchResults
     * call. However, the results depend on the items and groups
     * requested.
     * <br>
     * <br>
     * The Best Match algorithm will try to evenly fit the items and
     * return groups of 'Best Matching' Categories. A 'category group' can
     * be a parent category that contains the best-matching items from
     * several of its subcategories. Within each category group, items
     * will be also sorted by best match. The only condition when you may
     * not get a GroupCategoryID returned at all is when the request is
     * for one group and there is more than one category that has matching
     * items. Very rarely, the same item will appear once in the group for
     * its primary category and once in another group for its secondary
     * category, in the same result set. Also very occasionally, a Store
     * Inventory Item can appear in the results before a regular listing.
     * 
     *
     * @returns java.lang.String
	 */
	public String getGroupCategoryID() {
	    return this.groupCategoryID;
	}
	
	/**
	 * public setter
	 *
     * 
     * GroupCategoryID is returned if there is a value of
     * BestMatchCategoryGroup in the Order field for the GetSearchResults
     * call. However, the results depend on the items and groups
     * requested.
     * <br>
     * <br>
     * The Best Match algorithm will try to evenly fit the items and
     * return groups of 'Best Matching' Categories. A 'category group' can
     * be a parent category that contains the best-matching items from
     * several of its subcategories. Within each category group, items
     * will be also sorted by best match. The only condition when you may
     * not get a GroupCategoryID returned at all is when the request is
     * for one group and there is more than one category that has matching
     * items. Very rarely, the same item will appear once in the group for
     * its primary category and once in another group for its secondary
     * category, in the same result set. Also very occasionally, a Store
     * Inventory Item can appear in the results before a regular listing.
     * 
     *
     * @param java.lang.String
	 */
	public void setGroupCategoryID(String groupCategoryID) {
	    this.groupCategoryID = groupCategoryID;
	}
	/**
     * public getter
     *
     * 
     * The pay-per-lead feature is no longer available, and this field is scheduled to
     * be removed from the WSDL.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getClassifiedAdPayPerLeadFee() {
	    return this.classifiedAdPayPerLeadFee;
	}
	
	/**
	 * public setter
	 *
     * 
     * The pay-per-lead feature is no longer available, and this field is scheduled to
     * be removed from the WSDL.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setClassifiedAdPayPerLeadFee(AmountType classifiedAdPayPerLeadFee) {
	    this.classifiedAdPayPerLeadFee = classifiedAdPayPerLeadFee;
	}
	/**
     * public getter
     *
     * 
     * This flag is set to true if a watched item belongs to a bid
     * group. It will only be returned for the Watch container.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getBidGroupItem() {
	    return this.bidGroupItem;
	}
	
	/**
	 * public setter
	 *
     * 
     * This flag is set to true if a watched item belongs to a bid
     * group. It will only be returned for the Watch container.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setBidGroupItem(Boolean bidGroupItem) {
	    this.bidGroupItem = bidGroupItem;
	}
	/**
     * public getter
     *
     * 
     * Container consisting of details related to whether or not the
     * item is eligible for buyer protection and which of the buyer protection
     * programs will cover the item. This container is not returned if the item is not
     * eligible for eBay or PayPal buyer protection.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.BuyerProtectionDetailsType
	 */
	public BuyerProtectionDetailsType getApplyBuyerProtection() {
	    return this.applyBuyerProtection;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of details related to whether or not the
     * item is eligible for buyer protection and which of the buyer protection
     * programs will cover the item. This container is not returned if the item is not
     * eligible for eBay or PayPal buyer protection.
     * 
     *
     * @param ebay.apis.eblbasecomponents.BuyerProtectionDetailsType
	 */
	public void setApplyBuyerProtection(BuyerProtectionDetailsType applyBuyerProtection) {
	    this.applyBuyerProtection = applyBuyerProtection;
	}
	/**
     * public getter
     *
     * 
     * Indicates a specific type of lead generation format listing, such as
     * classified ad or local market Best Offer listing. Only applicable when
     * ListingType=LeadGeneration.
     * <br><br>
     * <span class="tablenote"><b>Note:</b>
     * ListingSubtype2 replaces the deprecated ListingSubtype field.
     * If both are specified in a request, ListingSubtype2 takes precedence.
     * </span>
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ListingSubtypeCodeType
	 */
	public ListingSubtypeCodeType getListingSubtype2() {
	    return this.listingSubtype2;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates a specific type of lead generation format listing, such as
     * classified ad or local market Best Offer listing. Only applicable when
     * ListingType=LeadGeneration.
     * <br><br>
     * <span class="tablenote"><b>Note:</b>
     * ListingSubtype2 replaces the deprecated ListingSubtype field.
     * If both are specified in a request, ListingSubtype2 takes precedence.
     * </span>
     * 
     *
     * @param ebay.apis.eblbasecomponents.ListingSubtypeCodeType
	 */
	public void setListingSubtype2(ListingSubtypeCodeType listingSubtype2) {
	    this.listingSubtype2 = listingSubtype2;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether the seller allows the bidder to request mechanical
     * inspection services from RAC. For Car category listings on the UK site.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getMechanicalCheckAccepted() {
	    return this.mechanicalCheckAccepted;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether the seller allows the bidder to request mechanical
     * inspection services from RAC. For Car category listings on the UK site.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setMechanicalCheckAccepted(Boolean mechanicalCheckAccepted) {
	    this.mechanicalCheckAccepted = mechanicalCheckAccepted;
	}
	/**
     * public getter
     *
     * 
     * Specifies whether the following Business Seller fields have been updated for
     * the item specified in the request: First Name, Last Name, Fax, Email
     * Address, Additional Contact Information, Trade Registration Number, VAT
     * Identification Number.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getUpdateSellerInfo() {
	    return this.updateSellerInfo;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies whether the following Business Seller fields have been updated for
     * the item specified in the request: First Name, Last Name, Fax, Email
     * Address, Additional Contact Information, Trade Registration Number, VAT
     * Identification Number.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setUpdateSellerInfo(Boolean updateSellerInfo) {
	    this.updateSellerInfo = updateSellerInfo;
	}
	/**
     * public getter
     *
     * 
     * Flag to indicate whether the item's Return Policy has been updated
     * as part of the revised listing.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getUpdateReturnPolicy() {
	    return this.updateReturnPolicy;
	}
	
	/**
	 * public setter
	 *
     * 
     * Flag to indicate whether the item's Return Policy has been updated
     * as part of the revised listing.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setUpdateReturnPolicy(Boolean updateReturnPolicy) {
	    this.updateReturnPolicy = updateReturnPolicy;
	}
	/**
     * public getter
     *
     * 
     * Specifies the details of policy violations if the item was administratively
     * canceled.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ItemPolicyViolationType
	 */
	public ItemPolicyViolationType getItemPolicyViolation() {
	    return this.itemPolicyViolation;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the details of policy violations if the item was administratively
     * canceled.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ItemPolicyViolationType
	 */
	public void setItemPolicyViolation(ItemPolicyViolationType itemPolicyViolation) {
	    this.itemPolicyViolation = itemPolicyViolation;
	}
	/**
     * public getter
     *
     * 
     * This field is used by sellers who want their listing to be returned in the search
     * results for other eBay sites. This feature is currently only supported by the US, UK,
     * eBay Canada, and eBay Ireland sites. See <a href="
     * http://pages.ebay.com/help/sell/globalexposure.html">Getting exposure on
     * international sites</a> for full requirements on using this feature. There is a
     * small listing fee for each country specified as a Cross Border Trade country.
     * <br><br>
     * US listings that offer shipping to Canada, North America, or worldwide are
     * automatically returned on eBay.ca at no extra charge, so US listings that offer
     * shipping to these locations do not need to specify Canada as a Cross Border Trade
     * country.
     * 
     *
     * @returns java.util.List<java.lang.String>
	 */
	public List<String> getCrossBorderTrade() {
	    return this.crossBorderTrade;
	}
	
	/**
	 * public setter
	 *
     * 
     * This field is used by sellers who want their listing to be returned in the search
     * results for other eBay sites. This feature is currently only supported by the US, UK,
     * eBay Canada, and eBay Ireland sites. See <a href="
     * http://pages.ebay.com/help/sell/globalexposure.html">Getting exposure on
     * international sites</a> for full requirements on using this feature. There is a
     * small listing fee for each country specified as a Cross Border Trade country.
     * <br><br>
     * US listings that offer shipping to Canada, North America, or worldwide are
     * automatically returned on eBay.ca at no extra charge, so US listings that offer
     * shipping to these locations do not need to specify Canada as a Cross Border Trade
     * country.
     * 
     *
     * @param java.util.List<java.lang.String>
	 */
	public void setCrossBorderTrade(List<String> crossBorderTrade) {
	    this.crossBorderTrade = crossBorderTrade;
	}
	/**
     * public getter
     *
     * 
     * Returns the seller's information (in a business card format)
     * if the seller's SellerBusinessCodeType is set to 'Commercial'.
     * This is only applicable for sites where Business Seller options
     * are supported.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.BusinessSellerDetailsType
	 */
	public BusinessSellerDetailsType getBusinessSellerDetails() {
	    return this.businessSellerDetails;
	}
	
	/**
	 * public setter
	 *
     * 
     * Returns the seller's information (in a business card format)
     * if the seller's SellerBusinessCodeType is set to 'Commercial'.
     * This is only applicable for sites where Business Seller options
     * are supported.
     * 
     *
     * @param ebay.apis.eblbasecomponents.BusinessSellerDetailsType
	 */
	public void setBusinessSellerDetails(BusinessSellerDetailsType businessSellerDetails) {
	    this.businessSellerDetails = businessSellerDetails;
	}
	/**
     * public getter
     *
     * 
     * For the Australia site, BuyerGuaranteePrice is the PayPal Buyer Protection
     * coverage, offered for the item at the time of purchase. Details of coverage
     * are in the following sections of the View Item page: the Buy Safely section
     * and the Payment Details section.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getBuyerGuaranteePrice() {
	    return this.buyerGuaranteePrice;
	}
	
	/**
	 * public setter
	 *
     * 
     * For the Australia site, BuyerGuaranteePrice is the PayPal Buyer Protection
     * coverage, offered for the item at the time of purchase. Details of coverage
     * are in the following sections of the View Item page: the Buy Safely section
     * and the Payment Details section.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setBuyerGuaranteePrice(AmountType buyerGuaranteePrice) {
	    this.buyerGuaranteePrice = buyerGuaranteePrice;
	}
	/**
     * public getter
     *
     * 
     * When this container is present in an AddItem or AddFixedPriceItem call, all
     * buyer requirements for the resulting listing are set by this container.
     * Furthermore, individual buyer requirements cannot be modified or added when
     * including this container in a ReviseItem call. The ReviseItem call needs to
     * provide the entire set of buyer requirements to modify or add any of the
     * requirements. Unless otherwise specified, most buyer requirements are only
     * returned if the caller is the seller. All global My eBay Buyer Requirements
     * are overridden by the contents of this container. This means that buyer
     * requirements set in My eBay cannot be combined with buyer requirements
     * included in this container. <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.BuyerRequirementDetailsType
	 */
	public BuyerRequirementDetailsType getBuyerRequirementDetails() {
	    return this.buyerRequirementDetails;
	}
	
	/**
	 * public setter
	 *
     * 
     * When this container is present in an AddItem or AddFixedPriceItem call, all
     * buyer requirements for the resulting listing are set by this container.
     * Furthermore, individual buyer requirements cannot be modified or added when
     * including this container in a ReviseItem call. The ReviseItem call needs to
     * provide the entire set of buyer requirements to modify or add any of the
     * requirements. Unless otherwise specified, most buyer requirements are only
     * returned if the caller is the seller. All global My eBay Buyer Requirements
     * are overridden by the contents of this container. This means that buyer
     * requirements set in My eBay cannot be combined with buyer requirements
     * included in this container. <br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.BuyerRequirementDetailsType
	 */
	public void setBuyerRequirementDetails(BuyerRequirementDetailsType buyerRequirementDetails) {
	    this.buyerRequirementDetails = buyerRequirementDetails;
	}
	/**
     * public getter
     *
     * 
     * Container that describes the seller's return policy. Most categories on most
     * eBay sites require the seller to include a return policy through the
     * ReturnPolicy container.
     * <br>
     * <br>
     * <b>For the AddItem family of calls:</b> Required for
     * most categories on most sites. Use ReturnPolicyEnabled
     * in GetCategoryFeatures to determine which categories require this
     * field. To determine which ReturnPolicy fields can be used on each site, call <b>GeteBayDetails</b>
     * with <b>DetailName</b> set to <b>ReturnPolicyDetails</b>.
     * <br> <br>
     * eBay India (IN), Australia (AU), and US eBay Motors
     * Parts and Accessories categories typically support but do not
     * require a return policy. (However, we strongly recommend that
     * you specify a clear return policy whenever possible.)<br>
     * <br>
     * <b>For ReviseItem only:</b> If the listing has bids or
     * sales and it ends within 12 hours, you can't change the return policy
     * details. If the listing is a GTC listing that has sales or ends within 12
     * hours (one or the other, but not both), you can add a return policy to the
     * GTC listing (but you can't change return policy details if already present).
     * If the listing has no bids or sales and more than 12 hours remain before the
     * listing ends, you can add or change the return policy. When you revise your
     * return policy, you only need to specify the fields you want to add or
     * change. You don't need to specify all the other ReturnPolicy fields again.
     * The other fields will retain their existing settings.<br>
     * <br>
     * <b>For the GetItem family of calls:</b> Only returned if the
     * site you sent the request to supports the seller's return policy. Typically,
     * the return policy details are only returned when the request is sent to the
     * listing site.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ReturnPolicyType
	 */
	public ReturnPolicyType getReturnPolicy() {
	    return this.returnPolicy;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container that describes the seller's return policy. Most categories on most
     * eBay sites require the seller to include a return policy through the
     * ReturnPolicy container.
     * <br>
     * <br>
     * <b>For the AddItem family of calls:</b> Required for
     * most categories on most sites. Use ReturnPolicyEnabled
     * in GetCategoryFeatures to determine which categories require this
     * field. To determine which ReturnPolicy fields can be used on each site, call <b>GeteBayDetails</b>
     * with <b>DetailName</b> set to <b>ReturnPolicyDetails</b>.
     * <br> <br>
     * eBay India (IN), Australia (AU), and US eBay Motors
     * Parts and Accessories categories typically support but do not
     * require a return policy. (However, we strongly recommend that
     * you specify a clear return policy whenever possible.)<br>
     * <br>
     * <b>For ReviseItem only:</b> If the listing has bids or
     * sales and it ends within 12 hours, you can't change the return policy
     * details. If the listing is a GTC listing that has sales or ends within 12
     * hours (one or the other, but not both), you can add a return policy to the
     * GTC listing (but you can't change return policy details if already present).
     * If the listing has no bids or sales and more than 12 hours remain before the
     * listing ends, you can add or change the return policy. When you revise your
     * return policy, you only need to specify the fields you want to add or
     * change. You don't need to specify all the other ReturnPolicy fields again.
     * The other fields will retain their existing settings.<br>
     * <br>
     * <b>For the GetItem family of calls:</b> Only returned if the
     * site you sent the request to supports the seller's return policy. Typically,
     * the return policy details are only returned when the request is sent to the
     * listing site.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ReturnPolicyType
	 */
	public void setReturnPolicy(ReturnPolicyType returnPolicy) {
	    this.returnPolicy = returnPolicy;
	}
	/**
     * public getter
     *
     * 
     * Enables you to view the sites on which an item can be purchased,
     * based on the payment methods offered for the item.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.SiteCodeType>
	 */
	public List<SiteCodeType> getPaymentAllowedSite() {
	    return this.paymentAllowedSite;
	}
	
	/**
	 * public setter
	 *
     * 
     * Enables you to view the sites on which an item can be purchased,
     * based on the payment methods offered for the item.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.SiteCodeType>
	 */
	public void setPaymentAllowedSite(List<SiteCodeType> paymentAllowedSite) {
	    this.paymentAllowedSite = paymentAllowedSite;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether you prefer to track your eBay listings by
     * eBay Item ID or by your own SKU. <br>
     * <br>
     * If you want to use SKU instead of ItemID as a unique identifier
     * (such as when retrieving items and orders), you can set
     * Item.InventoryTrackingMethod to SKU in AddFixedPriceItem and
     * related calls. In this case, the SKU must be
     * unique across your (the seller's) active listings.
     * Note that if you relist the item, you must reset
     * Item.InventoryTrackingMethod to SKU; otherwise the relisted
     * item will default to ItemID as the tracking method. <br>
     * <br>
     * If both ItemID and SKU are specified in item-retrieval and
     * order-retrieval calls that support the use of SKU as a unique
     * identifier, the ItemID value takes precedence and is used to
     * identify the listing.<br>
     * <b>For GetItem and related calls</b>:
     * Only returned when the value is SKU; not returned when the value is ItemID.
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.InventoryTrackingMethodCodeType
	 */
	public InventoryTrackingMethodCodeType getInventoryTrackingMethod() {
	    return this.inventoryTrackingMethod;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether you prefer to track your eBay listings by
     * eBay Item ID or by your own SKU. <br>
     * <br>
     * If you want to use SKU instead of ItemID as a unique identifier
     * (such as when retrieving items and orders), you can set
     * Item.InventoryTrackingMethod to SKU in AddFixedPriceItem and
     * related calls. In this case, the SKU must be
     * unique across your (the seller's) active listings.
     * Note that if you relist the item, you must reset
     * Item.InventoryTrackingMethod to SKU; otherwise the relisted
     * item will default to ItemID as the tracking method. <br>
     * <br>
     * If both ItemID and SKU are specified in item-retrieval and
     * order-retrieval calls that support the use of SKU as a unique
     * identifier, the ItemID value takes precedence and is used to
     * identify the listing.<br>
     * <b>For GetItem and related calls</b>:
     * Only returned when the value is SKU; not returned when the value is ItemID.
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.InventoryTrackingMethodCodeType
	 */
	public void setInventoryTrackingMethod(InventoryTrackingMethodCodeType inventoryTrackingMethod) {
	    this.inventoryTrackingMethod = inventoryTrackingMethod;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether the item can be paid for through a payment gateway
     * (Payflow) account. If IntegratedMerchantCreditCardEnabled is true, then
     * integrated merchant credit card (IMCC) is enabled for credit cards because
     * the seller has a payment gateway account. Therefore, if
     * IntegratedMerchantCreditCardEnabled is true, and AmEx, Discover, or VisaMC
     * is returned for an item, then on checkout, an online credit-card payment is
     * processed through a payment gateway account. A payment gateway account is
     * used by sellers to accept online credit cards (Visa, MasterCard, American
     * Express, and Discover).
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getIntegratedMerchantCreditCardEnabled() {
	    return this.integratedMerchantCreditCardEnabled;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether the item can be paid for through a payment gateway
     * (Payflow) account. If IntegratedMerchantCreditCardEnabled is true, then
     * integrated merchant credit card (IMCC) is enabled for credit cards because
     * the seller has a payment gateway account. Therefore, if
     * IntegratedMerchantCreditCardEnabled is true, and AmEx, Discover, or VisaMC
     * is returned for an item, then on checkout, an online credit-card payment is
     * processed through a payment gateway account. A payment gateway account is
     * used by sellers to accept online credit cards (Visa, MasterCard, American
     * Express, and Discover).
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setIntegratedMerchantCreditCardEnabled(Boolean integratedMerchantCreditCardEnabled) {
	    this.integratedMerchantCreditCardEnabled = integratedMerchantCreditCardEnabled;
	}
	/**
     * public getter
     *
     * 
     * Variations are multiple similar (but not identical) items in a
     * single fixed-price listing. For example, a T-shirt listing
     * could contain multiple items of the same brand
     * that vary by color and size (like "Blue, Large" and
     * "Black, Medium"). Each variation specifies a combination of one of
     * these colors and sizes. Each variation can have a different
     * quantity and price. You can buy multiple items from one
     * variation at the same time. (That is, one order line item can contain
     * multiple items from a single variation.) <br>
     * <br>
     * If you list in two categories, both categories must support
     * listing with variations. See VariationsEnabled in
     * GetCategoryFeatures to determine applicable categories.<br>
     * <br>
     * <b>For ReviseFixedPriceItem and
     * RelistFixedPriceItem:</b> Once a listing has been submitted with variations,
     * you can't delete all the variations when you revise or relist the listing (because
     * it would be considered a different listing). However, you can delete or replace individual variations as needed to match your current inventory. If a variation has
     * no purchases, use the Variation.Delete field to delete the variation. If it has
     * inventory, set the Quantity to 0.<br>
     * <br>
     * As a best practice, if you want to revise multiple variations in
     * the same listing at the same time (i.e, within a very short period),
     * use a single ReviseFixedPriceItem request and include all the
     * variation revisions in the same request. If your application design
     * requires you to revise each variation individually, then avoid using
     * multiple parallel threads. Instead, use a serial, synchronous
     * process. That is, wait until each revision has been
     * processed by eBay before submitting the next revision request for
     * another variation in the same listing.<br>
     * <br>
     * <b>For GetItem and related calls</b> Only returned
     * when a listing has variations.
     * <br><br>
     * <b>For GetSellerList:</b> Only returned when a listing
     * has variations, IncludeVariations was set to true in the request,
     * the DetailLevel was set to ReturnAll, and an applicable pagination
     * value and time range were specified.<br>
     * <br>
     * <b>For GetItemTransactions</b> Only returned in Item
     * when a listing has variations and IncludeVariations was set to true
     * in the request. (Also see Variation returned in Transaction for
     * information about which variation was actually purchased.)
     * <br>
     * <br>
     * <b>For GetSellerEvents, GetMyeBayBuying, and GetMyeBaySelling:</b> Only returned
     * when a listing has variations and HideVariations was set to false
     * or not specified in the request.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.VariationsType
	 */
	public VariationsType getVariations() {
	    return this.variations;
	}
	
	/**
	 * public setter
	 *
     * 
     * Variations are multiple similar (but not identical) items in a
     * single fixed-price listing. For example, a T-shirt listing
     * could contain multiple items of the same brand
     * that vary by color and size (like "Blue, Large" and
     * "Black, Medium"). Each variation specifies a combination of one of
     * these colors and sizes. Each variation can have a different
     * quantity and price. You can buy multiple items from one
     * variation at the same time. (That is, one order line item can contain
     * multiple items from a single variation.) <br>
     * <br>
     * If you list in two categories, both categories must support
     * listing with variations. See VariationsEnabled in
     * GetCategoryFeatures to determine applicable categories.<br>
     * <br>
     * <b>For ReviseFixedPriceItem and
     * RelistFixedPriceItem:</b> Once a listing has been submitted with variations,
     * you can't delete all the variations when you revise or relist the listing (because
     * it would be considered a different listing). However, you can delete or replace individual variations as needed to match your current inventory. If a variation has
     * no purchases, use the Variation.Delete field to delete the variation. If it has
     * inventory, set the Quantity to 0.<br>
     * <br>
     * As a best practice, if you want to revise multiple variations in
     * the same listing at the same time (i.e, within a very short period),
     * use a single ReviseFixedPriceItem request and include all the
     * variation revisions in the same request. If your application design
     * requires you to revise each variation individually, then avoid using
     * multiple parallel threads. Instead, use a serial, synchronous
     * process. That is, wait until each revision has been
     * processed by eBay before submitting the next revision request for
     * another variation in the same listing.<br>
     * <br>
     * <b>For GetItem and related calls</b> Only returned
     * when a listing has variations.
     * <br><br>
     * <b>For GetSellerList:</b> Only returned when a listing
     * has variations, IncludeVariations was set to true in the request,
     * the DetailLevel was set to ReturnAll, and an applicable pagination
     * value and time range were specified.<br>
     * <br>
     * <b>For GetItemTransactions</b> Only returned in Item
     * when a listing has variations and IncludeVariations was set to true
     * in the request. (Also see Variation returned in Transaction for
     * information about which variation was actually purchased.)
     * <br>
     * <br>
     * <b>For GetSellerEvents, GetMyeBayBuying, and GetMyeBaySelling:</b> Only returned
     * when a listing has variations and HideVariations was set to false
     * or not specified in the request.
     * 
     *
     * @param ebay.apis.eblbasecomponents.VariationsType
	 */
	public void setVariations(VariationsType variations) {
	    this.variations = variations;
	}
	/**
     * public getter
     *
     * 
     * A list of parts compatibility information specified as name and value pairs.
     * Describes an assembly with which a part is compatible (i.e., compatibility by
     * application). For example, to specify a part's compatibility with a vehicle,
     * the name (search name) would map to standard vehicle characteristics (e.g.,
     * Year, Make, Model, Trim, and Engine). The values would desribe the specific
     * vehicle, such as a 2006 Honda Accord. Use the Product Metadata API to
     * retrieve valid search names and corresponding values.
     * <br><br>
     * <b>For the AddItem family of calls:</b> Use this for specifying
     * parts compatibility by application manually. This can only be used in
     * categories that support parts compatibility by application. Use <b
     * class="con">GetCategoryFeatures</b> with the "CompatibilityEnabled"
     * feature ID to determine which categories support parts compatibility by
     * application.
     * <br><br>
     * <span class="tablenote"><b>Note:</b>
     * Starting with release 687, invalid item compatibility combinations will not
     * cause the request to fail as long as <b
     * class="con">ItemCompatibilityList</b> contains at least one valid
     * item compatibility. Only valid compatibilities will be added to the listing.
     * Any invalid compatibility combinations will be reported in the long error
     * message in the response errors with a severity of Warning.</span>
     * <br>
     * <b>For ReviseFixedPriceItem and ReviseItem:</b> When you revise a
     * listing, if the listing has bids and/or ends within 12 hours, item
     * compatibilities cannot be deleted. You may add item compatibilities at any
     * time.
     * <br><br>
     * <b>For GetItem:</b> <b
     * class="con">ItemCompatibilityList</b> is only returned if the
     * seller included item compatibility in the listing and <b
     * class="con">IncludeItemCompatibilityList</b> is set to true in the
     * <b class="con">GetItem</b> request.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ItemCompatibilityListType
	 */
	public ItemCompatibilityListType getItemCompatibilityList() {
	    return this.itemCompatibilityList;
	}
	
	/**
	 * public setter
	 *
     * 
     * A list of parts compatibility information specified as name and value pairs.
     * Describes an assembly with which a part is compatible (i.e., compatibility by
     * application). For example, to specify a part's compatibility with a vehicle,
     * the name (search name) would map to standard vehicle characteristics (e.g.,
     * Year, Make, Model, Trim, and Engine). The values would desribe the specific
     * vehicle, such as a 2006 Honda Accord. Use the Product Metadata API to
     * retrieve valid search names and corresponding values.
     * <br><br>
     * <b>For the AddItem family of calls:</b> Use this for specifying
     * parts compatibility by application manually. This can only be used in
     * categories that support parts compatibility by application. Use <b
     * class="con">GetCategoryFeatures</b> with the "CompatibilityEnabled"
     * feature ID to determine which categories support parts compatibility by
     * application.
     * <br><br>
     * <span class="tablenote"><b>Note:</b>
     * Starting with release 687, invalid item compatibility combinations will not
     * cause the request to fail as long as <b
     * class="con">ItemCompatibilityList</b> contains at least one valid
     * item compatibility. Only valid compatibilities will be added to the listing.
     * Any invalid compatibility combinations will be reported in the long error
     * message in the response errors with a severity of Warning.</span>
     * <br>
     * <b>For ReviseFixedPriceItem and ReviseItem:</b> When you revise a
     * listing, if the listing has bids and/or ends within 12 hours, item
     * compatibilities cannot be deleted. You may add item compatibilities at any
     * time.
     * <br><br>
     * <b>For GetItem:</b> <b
     * class="con">ItemCompatibilityList</b> is only returned if the
     * seller included item compatibility in the listing and <b
     * class="con">IncludeItemCompatibilityList</b> is set to true in the
     * <b class="con">GetItem</b> request.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ItemCompatibilityListType
	 */
	public void setItemCompatibilityList(ItemCompatibilityListType itemCompatibilityList) {
	    this.itemCompatibilityList = itemCompatibilityList;
	}
	/**
     * public getter
     *
     * 
     * Indicates the number of compatible applications specified for the given item.
     * Applies to items listed with fitment by application only (either manually or
     * with a catalog product that supports compatibility).
     * <br><br>
     * Not returned if the item has no specified compatible applications. Not
     * returned if <b class="con">IncludeItemCompatibilityList</b> is
     * specified in the request.
     * <br><br>
     * To retrieve the list of compatibility information, set <b class="con">
     * IncludeItemCompatibilityList</b> to "true" in the request.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getItemCompatibilityCount() {
	    return this.itemCompatibilityCount;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates the number of compatible applications specified for the given item.
     * Applies to items listed with fitment by application only (either manually or
     * with a catalog product that supports compatibility).
     * <br><br>
     * Not returned if the item has no specified compatible applications. Not
     * returned if <b class="con">IncludeItemCompatibilityList</b> is
     * specified in the request.
     * <br><br>
     * To retrieve the list of compatibility information, set <b class="con">
     * IncludeItemCompatibilityList</b> to "true" in the request.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setItemCompatibilityCount(Integer itemCompatibilityCount) {
	    this.itemCompatibilityCount = itemCompatibilityCount;
	}
	/**
     * public getter
     *
     * 
     * The numeric ID (e.g., 1000) for the item condition.
     * Sellers should also clarify the item's condition in their
     * own item description.
     * <br><br>
     * <span class="tablenote"><b>Note:</b>
     * In addition to including notes on flaws or wear and tear on an used item in the
     * <b>Item.Description</b>, and including a <b>ConditionID</b>
     * value, you can provide additional information about the condition of your used item
     * through the <b>Item.ConditionDescription</b> string field.
     * </span>
     * <br>
     * <b>For the AddItem family of calls:</b>
     * Use GetCategoryFeatures for details about which categories support
     * (or require) ConditionID, plus policies and help on choosing the
     * right condition for the item (to reduce disputes). <br>
     * <br>
     * Please note the following behavior if you pass a ConditionID value
     * that is not valid for the category: If ConditionID is disabled
     * (or not applicable) for the category, the item is listed with no
     * condition. If ConditionID is enabled or required for the category, the listing
     * request fails.<br>
     * <br>
     * If you are listing in two categories, the primary category determines which
     * condition model (ConditionID or item specifics) and which condition values
     * can be used. <br>
     * <br>
     * US eBay Motors Parts & Accessories and vehicle categories require ConditionID for new
     * listings and re-listings.
     * <br>
     * <br>
     * Not applicable to Half.com in listing requests (e.g., AddItem).
     * However, ConditionID could be returned in responses for
     * Half.com listings that are available to or sold on the
     * eBay site (as appropriate for the corresponding eBay category).<br>
     * <br>
     * <b>For Revise/Relist calls:</b> In most cases, you can add or modify
     * ConditionID when you revise or relist.
     * If GetCategoryFeatures returns ConditionEnabled=Required for the
     * listing's category, you cannot remove ConditionID from the listing.<br>
     * <br>
     * If an auction has bids or ends within 12 hours, you cannot remove or
     * change its condition, and you cannot replace a condition
     * attribute or custom item specific with ConditionID. In this case,
     * you will still be able to modify other fields that are normally
     * editable, even if ConditionID is not present.<br>
     * <br>
     * In most cases, you can add or modify ConditionID for multi-quantity
     * fixed price listings. (If a multi-quantity fixed price listing has
     * revision restrictions imposed by other choices the seller has made
     * in the listing, you might not be able to remove or change the
     * condition.)<br>
     * <br>
     * If you revise or relist a GTC listing that only has a condition
     * attribute or custom item specific, you need to specify ConditionID
     * (if the category requires it). ReviseInventoryStatus also fails
     * if you attempt to revise listings that are missing ConditionID.
     * (This rule does not apply during auto-renewal of a GTC listing.
     * It only applies when you perform an action on the listing.) <br>
     * <br>
     * <b>For GetItem and GetSellerList:</b> Only returned when the seller
     * specified ConditionID in their listing. Also returns
     * a localized display name.<br>
     * <br>
     * <span class="tablenote"><b>Note:</b>
     * For most categories, eBay does not convert item condition data in
     * the older AttributeSetArray, LookupAttributeArray, or ItemSpecifics
     * format to this format in older listings or when you revise or
     * relist items.
     * This means GTC listings and older ended or sold listings
     * may still return the item condition in these other fields even after
     * new listings only support ConditionID.<br>
     * <br>
     * There are a few categories in which automatic mapping does occur,
     * where the old and newer conditions are identical. See the "Automatic Mapping"
     * tab in the Item Condition Look-up Table link below for details.<br>
     * <br>
     * Also, if you specified ConditionID but the category also supports
     * condition in item specifics, you may receive a
     * "Dropped condition from Item specifics" warning.
     * You can ignore this warning as long as you used ConditionID.
     * </span>
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getConditionID() {
	    return this.conditionID;
	}
	
	/**
	 * public setter
	 *
     * 
     * The numeric ID (e.g., 1000) for the item condition.
     * Sellers should also clarify the item's condition in their
     * own item description.
     * <br><br>
     * <span class="tablenote"><b>Note:</b>
     * In addition to including notes on flaws or wear and tear on an used item in the
     * <b>Item.Description</b>, and including a <b>ConditionID</b>
     * value, you can provide additional information about the condition of your used item
     * through the <b>Item.ConditionDescription</b> string field.
     * </span>
     * <br>
     * <b>For the AddItem family of calls:</b>
     * Use GetCategoryFeatures for details about which categories support
     * (or require) ConditionID, plus policies and help on choosing the
     * right condition for the item (to reduce disputes). <br>
     * <br>
     * Please note the following behavior if you pass a ConditionID value
     * that is not valid for the category: If ConditionID is disabled
     * (or not applicable) for the category, the item is listed with no
     * condition. If ConditionID is enabled or required for the category, the listing
     * request fails.<br>
     * <br>
     * If you are listing in two categories, the primary category determines which
     * condition model (ConditionID or item specifics) and which condition values
     * can be used. <br>
     * <br>
     * US eBay Motors Parts & Accessories and vehicle categories require ConditionID for new
     * listings and re-listings.
     * <br>
     * <br>
     * Not applicable to Half.com in listing requests (e.g., AddItem).
     * However, ConditionID could be returned in responses for
     * Half.com listings that are available to or sold on the
     * eBay site (as appropriate for the corresponding eBay category).<br>
     * <br>
     * <b>For Revise/Relist calls:</b> In most cases, you can add or modify
     * ConditionID when you revise or relist.
     * If GetCategoryFeatures returns ConditionEnabled=Required for the
     * listing's category, you cannot remove ConditionID from the listing.<br>
     * <br>
     * If an auction has bids or ends within 12 hours, you cannot remove or
     * change its condition, and you cannot replace a condition
     * attribute or custom item specific with ConditionID. In this case,
     * you will still be able to modify other fields that are normally
     * editable, even if ConditionID is not present.<br>
     * <br>
     * In most cases, you can add or modify ConditionID for multi-quantity
     * fixed price listings. (If a multi-quantity fixed price listing has
     * revision restrictions imposed by other choices the seller has made
     * in the listing, you might not be able to remove or change the
     * condition.)<br>
     * <br>
     * If you revise or relist a GTC listing that only has a condition
     * attribute or custom item specific, you need to specify ConditionID
     * (if the category requires it). ReviseInventoryStatus also fails
     * if you attempt to revise listings that are missing ConditionID.
     * (This rule does not apply during auto-renewal of a GTC listing.
     * It only applies when you perform an action on the listing.) <br>
     * <br>
     * <b>For GetItem and GetSellerList:</b> Only returned when the seller
     * specified ConditionID in their listing. Also returns
     * a localized display name.<br>
     * <br>
     * <span class="tablenote"><b>Note:</b>
     * For most categories, eBay does not convert item condition data in
     * the older AttributeSetArray, LookupAttributeArray, or ItemSpecifics
     * format to this format in older listings or when you revise or
     * relist items.
     * This means GTC listings and older ended or sold listings
     * may still return the item condition in these other fields even after
     * new listings only support ConditionID.<br>
     * <br>
     * There are a few categories in which automatic mapping does occur,
     * where the old and newer conditions are identical. See the "Automatic Mapping"
     * tab in the Item Condition Look-up Table link below for details.<br>
     * <br>
     * Also, if you specified ConditionID but the category also supports
     * condition in item specifics, you may receive a
     * "Dropped condition from Item specifics" warning.
     * You can ignore this warning as long as you used ConditionID.
     * </span>
     * 
     *
     * @param java.lang.Integer
	 */
	public void setConditionID(Integer conditionID) {
	    this.conditionID = conditionID;
	}
	/**
     * public getter
     *
     * 
     * This string field is used by the seller to more clearly describe the condition of
     * items that are not brand new.
     * <br><br>
     * The <b>ConditionDescription</b> field is available for all
     * categories, including categories where the condition type is not applicable
     * (e.g., Antiques). This field is applicable for all item conditions except
     * "New", "Brand New", "New with tags", and "New in box". If
     * <b>ConditionDescription</b> is used with these conditions (Condition
     * IDs 1000-1499), eBay will simply ignore this field if included, and eBay will
     * return a warning message to the user.
     * <br><br>
     * This field should only be used to further clarify the condition of the used item.
     * For example, "The right leg of the chair has a small scratch, and on the seat
     * back there is a light blue stain about the shape and size of a coin." It should
     * not be used for branding, promotions, shipping, returns, payment or other
     * information unrelated to the condition of the item. Make sure that the condition
     * type (<b>Item.ConditionID</b>), condition description, item description
     * (<b>Item.Description</b>), and the listing's pictures do not contradict
     * one another.
     * <br><br>
     * The <b>ConditionDescription</b> field is optional For Add/Revise/Relist
     * API calls. However, this field may become required in some categories starting
     * with the Spring 2013 Seller Release.
     * <br><br>
     * The <b>ConditionDescription</b> field is returned by <b>GetItem</b>
     * (and other related calls that return the Item object) if a condition description
     * is specified in the listing.
     * 
     *
     * @returns java.lang.String
	 */
	public String getConditionDescription() {
	    return this.conditionDescription;
	}
	
	/**
	 * public setter
	 *
     * 
     * This string field is used by the seller to more clearly describe the condition of
     * items that are not brand new.
     * <br><br>
     * The <b>ConditionDescription</b> field is available for all
     * categories, including categories where the condition type is not applicable
     * (e.g., Antiques). This field is applicable for all item conditions except
     * "New", "Brand New", "New with tags", and "New in box". If
     * <b>ConditionDescription</b> is used with these conditions (Condition
     * IDs 1000-1499), eBay will simply ignore this field if included, and eBay will
     * return a warning message to the user.
     * <br><br>
     * This field should only be used to further clarify the condition of the used item.
     * For example, "The right leg of the chair has a small scratch, and on the seat
     * back there is a light blue stain about the shape and size of a coin." It should
     * not be used for branding, promotions, shipping, returns, payment or other
     * information unrelated to the condition of the item. Make sure that the condition
     * type (<b>Item.ConditionID</b>), condition description, item description
     * (<b>Item.Description</b>), and the listing's pictures do not contradict
     * one another.
     * <br><br>
     * The <b>ConditionDescription</b> field is optional For Add/Revise/Relist
     * API calls. However, this field may become required in some categories starting
     * with the Spring 2013 Seller Release.
     * <br><br>
     * The <b>ConditionDescription</b> field is returned by <b>GetItem</b>
     * (and other related calls that return the Item object) if a condition description
     * is specified in the listing.
     * 
     *
     * @param java.lang.String
	 */
	public void setConditionDescription(String conditionDescription) {
	    this.conditionDescription = conditionDescription;
	}
	/**
     * public getter
     *
     * 
     * The human-readable label for the item condition.
     * Display names are localized for the site on
     * which they're listed (not necessarily the site on which
     * they're viewed).<br>
     * <br>
     * Most categories use the same display name for the
     * same condition ID. Some categories may override the display name
     * based on buyer expectations for items in the category.
     * For example, condition ID 1000 could be called
     * "New" in one category and "New with tags" in another.<br>
     * <br>
     * Behind the scenes, eBay's search engine uses the ID
     * (not the display name) to determine whether items are
     * new, used, or refurbished.<br>
     * <br>
     * Only returned when the seller specified ConditionID in their
     * listing.
     * 
     *
     * @returns java.lang.String
	 */
	public String getConditionDisplayName() {
	    return this.conditionDisplayName;
	}
	
	/**
	 * public setter
	 *
     * 
     * The human-readable label for the item condition.
     * Display names are localized for the site on
     * which they're listed (not necessarily the site on which
     * they're viewed).<br>
     * <br>
     * Most categories use the same display name for the
     * same condition ID. Some categories may override the display name
     * based on buyer expectations for items in the category.
     * For example, condition ID 1000 could be called
     * "New" in one category and "New with tags" in another.<br>
     * <br>
     * Behind the scenes, eBay's search engine uses the ID
     * (not the display name) to determine whether items are
     * new, used, or refurbished.<br>
     * <br>
     * Only returned when the seller specified ConditionID in their
     * listing.
     * 
     *
     * @param java.lang.String
	 */
	public void setConditionDisplayName(String conditionDisplayName) {
	    this.conditionDisplayName = conditionDisplayName;
	}
	/**
     * public getter
     *
     * 
     * Tax exception category code. This is to be used only
     * by sellers who have opted into sales tax being calculated
     * by a sales tax calculation vendor. If you are interested
     * in becoming a tax calculation vendor partner with eBay,
     * contact developer-relations@ebay.com.
     * 
     *
     * @returns java.lang.String
	 */
	public String getTaxCategory() {
	    return this.taxCategory;
	}
	
	/**
	 * public setter
	 *
     * 
     * Tax exception category code. This is to be used only
     * by sellers who have opted into sales tax being calculated
     * by a sales tax calculation vendor. If you are interested
     * in becoming a tax calculation vendor partner with eBay,
     * contact developer-relations@ebay.com.
     * 
     *
     * @param java.lang.String
	 */
	public void setTaxCategory(String taxCategory) {
	    this.taxCategory = taxCategory;
	}
	/**
     * public getter
     *
     * 
     * Indicates the type of message that will be returned describing the quantity
     * available for the item.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.QuantityAvailableHintCodeType
	 */
	public QuantityAvailableHintCodeType getQuantityAvailableHint() {
	    return this.quantityAvailableHint;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates the type of message that will be returned describing the quantity
     * available for the item.
     * 
     *
     * @param ebay.apis.eblbasecomponents.QuantityAvailableHintCodeType
	 */
	public void setQuantityAvailableHint(QuantityAvailableHintCodeType quantityAvailableHint) {
	    this.quantityAvailableHint = quantityAvailableHint;
	}
	/**
     * public getter
     *
     * 
     * The quantity threshold above which the seller prefers not to show the actual
     * quantity available. Returned when the quantity available is greater than the
     * value of quantity threshold. Currently, 10 is the only available value for
     * this threshold.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getQuantityThreshold() {
	    return this.quantityThreshold;
	}
	
	/**
	 * public setter
	 *
     * 
     * The quantity threshold above which the seller prefers not to show the actual
     * quantity available. Returned when the quantity available is greater than the
     * value of quantity threshold. Currently, 10 is the only available value for
     * this threshold.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setQuantityThreshold(Integer quantityThreshold) {
	    this.quantityThreshold = quantityThreshold;
	}
	/**
     * public getter
     *
     * 
     * Reserved for future use.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getPostCheckoutExperienceEnabled() {
	    return this.postCheckoutExperienceEnabled;
	}
	
	/**
	 * public setter
	 *
     * 
     * Reserved for future use.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setPostCheckoutExperienceEnabled(Boolean postCheckoutExperienceEnabled) {
	    this.postCheckoutExperienceEnabled = postCheckoutExperienceEnabled;
	}
	/**
     * public getter
     *
     * 
     * This container provides information for an item that has a Strikethrough Price (STP) or a Minimum Advertised Price
     * (MAP) discount pricing treatment. STP and MAP apply only to fixed-price listings and auction listings with the Buy
     * It Now opton. STP is available on the US, UK, and German (DE) sites, while MAP is available only on the US site.
     * <br /> <br />
     * Discount pricing is available to qualified sellers (and their associated developers) who
     * participate in the Discount Pricing Program. Once qualified, sellers receive a
     * "special account flag" (SAF) that allows them to apply Discount Pricing to both single-variation and multi-variation
     * items. Sellers should contact their account manager or Customer Service to
     * see if they qualify for the Strikethrough Pricing program.
     * <br><br>
     * As a seller listing Discount Price items, you are required to maintain records of your discount
     * pricing in the event you are called upon to substantiate your item pricing. The following
     * link details your legal obligations when you utilize Discount Pricing to sell items: <a href=
     * "http://pages.ebay.com/help/sell/strike-through.html">Strikethrough Pricing Requirements
     * </a>
     * <br><br>
     * <b>For AddFixedPriceItem, RelistFixedPriceItem, ReviseFixedPriceItem, and
     * VerifyAddFixedPriceItem:</b>
     * If you are listing variations (MSKU items), use Variation.DiscountPriceInfo for each variation.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.DiscountPriceInfoType
	 */
	public DiscountPriceInfoType getDiscountPriceInfo() {
	    return this.discountPriceInfo;
	}
	
	/**
	 * public setter
	 *
     * 
     * This container provides information for an item that has a Strikethrough Price (STP) or a Minimum Advertised Price
     * (MAP) discount pricing treatment. STP and MAP apply only to fixed-price listings and auction listings with the Buy
     * It Now opton. STP is available on the US, UK, and German (DE) sites, while MAP is available only on the US site.
     * <br /> <br />
     * Discount pricing is available to qualified sellers (and their associated developers) who
     * participate in the Discount Pricing Program. Once qualified, sellers receive a
     * "special account flag" (SAF) that allows them to apply Discount Pricing to both single-variation and multi-variation
     * items. Sellers should contact their account manager or Customer Service to
     * see if they qualify for the Strikethrough Pricing program.
     * <br><br>
     * As a seller listing Discount Price items, you are required to maintain records of your discount
     * pricing in the event you are called upon to substantiate your item pricing. The following
     * link details your legal obligations when you utilize Discount Pricing to sell items: <a href=
     * "http://pages.ebay.com/help/sell/strike-through.html">Strikethrough Pricing Requirements
     * </a>
     * <br><br>
     * <b>For AddFixedPriceItem, RelistFixedPriceItem, ReviseFixedPriceItem, and
     * VerifyAddFixedPriceItem:</b>
     * If you are listing variations (MSKU items), use Variation.DiscountPriceInfo for each variation.
     * 
     *
     * @param ebay.apis.eblbasecomponents.DiscountPriceInfoType
	 */
	public void setDiscountPriceInfo(DiscountPriceInfoType discountPriceInfo) {
	    this.discountPriceInfo = discountPriceInfo;
	}
	/**
     * public getter
     *
     * 
     * If true, and the item details in the request match a product in the eBay catalog, the matching product is used to list the item. This is like using ProductListingDetails to list an item. Applies only to catalog-enabled categories.
     * <br><br>
     * This feature is available to a small subset of eBay-selected sellers.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getUseRecommendedProduct() {
	    return this.useRecommendedProduct;
	}
	
	/**
	 * public setter
	 *
     * 
     * If true, and the item details in the request match a product in the eBay catalog, the matching product is used to list the item. This is like using ProductListingDetails to list an item. Applies only to catalog-enabled categories.
     * <br><br>
     * This feature is available to a small subset of eBay-selected sellers.
     * <br><br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setUseRecommendedProduct(Boolean useRecommendedProduct) {
	    this.useRecommendedProduct = useRecommendedProduct;
	}
	/**
     * public getter
     *
     * 
     * A descriptive free-text title for a US or CA eBay Motors vehicle
     * listing. This title appears below eBay's pre-filled listing title
     * on the View Item page (not at the top of the View Item page).
     * It's also appended to the listing title in search results
     * (like a subtitle) on the US eBay Motors site.
     * Keywords in this title help buyers find or distinguish
     * your listing.<br>
     * <br>
     * Applicable to listings in US eBay Motors Cars and Trucks,
     * Motorcycle, and some of the Powersport, Boats and RV campers
     * categories; or to Cars and Trucks listings on CA eBay Motors.<br>
     * <br>
     * This replaces the older US and Canada eBay Motors Subtitle attribute
     * (attribute ID 10246).<br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.String
	 */
	public String getSellerProvidedTitle() {
	    return this.sellerProvidedTitle;
	}
	
	/**
	 * public setter
	 *
     * 
     * A descriptive free-text title for a US or CA eBay Motors vehicle
     * listing. This title appears below eBay's pre-filled listing title
     * on the View Item page (not at the top of the View Item page).
     * It's also appended to the listing title in search results
     * (like a subtitle) on the US eBay Motors site.
     * Keywords in this title help buyers find or distinguish
     * your listing.<br>
     * <br>
     * Applicable to listings in US eBay Motors Cars and Trucks,
     * Motorcycle, and some of the Powersport, Boats and RV campers
     * categories; or to Cars and Trucks listings on CA eBay Motors.<br>
     * <br>
     * This replaces the older US and Canada eBay Motors Subtitle attribute
     * (attribute ID 10246).<br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.String
	 */
	public void setSellerProvidedTitle(String sellerProvidedTitle) {
	    this.sellerProvidedTitle = sellerProvidedTitle;
	}
	/**
     * public getter
     *
     * 
     * Vehicle Identification Number, which is a unique serial number
     * for a motor vehicle.<br>
     * <br>
     * Applicable to listings in US eBay Motors Cars and Trucks (6001),
     * Motorcycles (6024), Commercial Trucks (63732),
     * RVs and Campers (50054), ATVs (6723), Snowmobiles (42595),
     * and UTVs (173665);
     * and to Cars and Trucks listings in CA, CAFR and AU eBay Motors.
     * For vehicle categories that do not use VIN,
     * call GetCategorySpecifics to determine applicable
     * custom item specifics (such as "Hull ID Number" for Boats).
     * <br>
     * <br>
     * For the US, CA, and CAFR eBay Motors sites, required for cars and
     * trucks from model year 1981 and later. (The US developed national standards for VIN values as of 1981.)<br>
     * <br>
     * For the eBay Australia site, required for vehicles from model year
     * 1989 or later. For the eBay Australia site, only appears on the View Item page if you also specify the date of first registration in the listing's item specifics.
     *  <br>
     * <br>
     * Appears in the VIN field in the Item Specifics section of eBay's
     * View Item page.<br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.String
	 */
	public String getVin() {
	    return this.vin;
	}
	
	/**
	 * public setter
	 *
     * 
     * Vehicle Identification Number, which is a unique serial number
     * for a motor vehicle.<br>
     * <br>
     * Applicable to listings in US eBay Motors Cars and Trucks (6001),
     * Motorcycles (6024), Commercial Trucks (63732),
     * RVs and Campers (50054), ATVs (6723), Snowmobiles (42595),
     * and UTVs (173665);
     * and to Cars and Trucks listings in CA, CAFR and AU eBay Motors.
     * For vehicle categories that do not use VIN,
     * call GetCategorySpecifics to determine applicable
     * custom item specifics (such as "Hull ID Number" for Boats).
     * <br>
     * <br>
     * For the US, CA, and CAFR eBay Motors sites, required for cars and
     * trucks from model year 1981 and later. (The US developed national standards for VIN values as of 1981.)<br>
     * <br>
     * For the eBay Australia site, required for vehicles from model year
     * 1989 or later. For the eBay Australia site, only appears on the View Item page if you also specify the date of first registration in the listing's item specifics.
     *  <br>
     * <br>
     * Appears in the VIN field in the Item Specifics section of eBay's
     * View Item page.<br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.String
	 */
	public void setVin(String vin) {
	    this.vin = vin;
	}
	/**
     * public getter
     *
     * 
     * Link to the Vehicle History Report for the vehicle whose VIN was
     * specified in Item.VIN. If no vehicle history report is available, eBay may instead show a plain-text copy of the VIN.<br>
     * <br>
     * Applicable to listings in US eBay Motors Cars and Trucks, Motorcycle, and some Powersport, Boats and RV campers categories;
     * and to Cars and Trucks listings in CA, CAFR and AU eBay Motors.<br>
     * <br>
     * For the eBay Australia site, only appears on the View Item page if
     * you specify Item.VIN and you also specify the date of
     * first registration in the listing's item specifics.<br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.String
	 */
	public String getVinLink() {
	    return this.vinLink;
	}
	
	/**
	 * public setter
	 *
     * 
     * Link to the Vehicle History Report for the vehicle whose VIN was
     * specified in Item.VIN. If no vehicle history report is available, eBay may instead show a plain-text copy of the VIN.<br>
     * <br>
     * Applicable to listings in US eBay Motors Cars and Trucks, Motorcycle, and some Powersport, Boats and RV campers categories;
     * and to Cars and Trucks listings in CA, CAFR and AU eBay Motors.<br>
     * <br>
     * For the eBay Australia site, only appears on the View Item page if
     * you specify Item.VIN and you also specify the date of
     * first registration in the listing's item specifics.<br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.String
	 */
	public void setVinLink(String vinLink) {
	    this.vinLink = vinLink;
	}
	/**
     * public getter
     *
     * 
     * Vehicle Registration Mark, which is a unique identifier for
     * a motor vehicle.<br>
     * <br>
     * Applicable to listings in UK eBay Motors Cars and Trucks,
     * Motorcycle, and some Powersport categories.<br>
     * <br>
     * Appears as a VRM field in the Item Specifics section of eBay's
     * View Item page. On the View Item page, the VRM value is masked
     * (i.e., only a portion of the value is shown to users).
     * In the GetItem response, the VRM is only returned if the
     * call is made by the seller (i.e., the AuthToken is associated
     * with the vehicle's seller).<br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.String
	 */
	public String getVrm() {
	    return this.vrm;
	}
	
	/**
	 * public setter
	 *
     * 
     * Vehicle Registration Mark, which is a unique identifier for
     * a motor vehicle.<br>
     * <br>
     * Applicable to listings in UK eBay Motors Cars and Trucks,
     * Motorcycle, and some Powersport categories.<br>
     * <br>
     * Appears as a VRM field in the Item Specifics section of eBay's
     * View Item page. On the View Item page, the VRM value is masked
     * (i.e., only a portion of the value is shown to users).
     * In the GetItem response, the VRM is only returned if the
     * call is made by the seller (i.e., the AuthToken is associated
     * with the vehicle's seller).<br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.String
	 */
	public void setVrm(String vrm) {
	    this.vrm = vrm;
	}
	/**
     * public getter
     *
     * 
     * Link to the Vehicle History Report for the vehicle whose VRM was
     * specified in Item.VRM. The report is visible to all users.
     * If no vehicle history report is available, eBay may instead show a
     * plain-text copy of the masked VRM.<br>
     * <br>
     * Applicable to listings in UK eBay Motors Cars and Trucks, Motorcycle, and some Powersport categories.<br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns java.lang.String
	 */
	public String getVrmLink() {
	    return this.vrmLink;
	}
	
	/**
	 * public setter
	 *
     * 
     * Link to the Vehicle History Report for the vehicle whose VRM was
     * specified in Item.VRM. The report is visible to all users.
     * If no vehicle history report is available, eBay may instead show a
     * plain-text copy of the masked VRM.<br>
     * <br>
     * Applicable to listings in UK eBay Motors Cars and Trucks, Motorcycle, and some Powersport categories.<br>
     * <br>
     * Not applicable to Half.com.
     * 
     *
     * @param java.lang.String
	 */
	public void setVrmLink(String vrmLink) {
	    this.vrmLink = vrmLink;
	}
	/**
     * public getter
     *
     * 
     * This container is used to set the minimum number of event tickets that should
     * remain available after a buyer makes a purchase. This functionality allows the
     * seller to avoid the possibility of being left with just one event ticket after
     * a sale.
     * <br><br>
     * This container can be used when adding, revising, or relisting event tickets, and
     * it will only be returned in <b>GetItem</b> if set for the listing.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.QuantityInfoType
	 */
	public QuantityInfoType getQuantityInfo() {
	    return this.quantityInfo;
	}
	
	/**
	 * public setter
	 *
     * 
     * This container is used to set the minimum number of event tickets that should
     * remain available after a buyer makes a purchase. This functionality allows the
     * seller to avoid the possibility of being left with just one event ticket after
     * a sale.
     * <br><br>
     * This container can be used when adding, revising, or relisting event tickets, and
     * it will only be returned in <b>GetItem</b> if set for the listing.
     * 
     *
     * @param ebay.apis.eblbasecomponents.QuantityInfoType
	 */
	public void setQuantityInfo(QuantityInfoType quantityInfo) {
	    this.quantityInfo = quantityInfo;
	}
	/**
     * public getter
     *
     * 
     * Root container consisting of references to one or more Business Policies profiles.
     * Exactly one Payment Profile, one Shipping Profile, and one Return Policy Profile
     * may be applied to the listing.
     * <br/><br/>
     * <span class="tablenote"><b>Note:</b>
     * Business Policies are not yet available for use on the eBay platform.
     * <span/>
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SellerProfilesType
	 */
	public SellerProfilesType getSellerProfiles() {
	    return this.sellerProfiles;
	}
	
	/**
	 * public setter
	 *
     * 
     * Root container consisting of references to one or more Business Policies profiles.
     * Exactly one Payment Profile, one Shipping Profile, and one Return Policy Profile
     * may be applied to the listing.
     * <br/><br/>
     * <span class="tablenote"><b>Note:</b>
     * Business Policies are not yet available for use on the eBay platform.
     * <span/>
     * 
     *
     * @param ebay.apis.eblbasecomponents.SellerProfilesType
	 */
	public void setSellerProfiles(SellerProfilesType sellerProfiles) {
	    this.sellerProfiles = sellerProfiles;
	}
	/**
     * public getter
     *
     * 
     * Container consisting of dimension and size details related to a shipping package in
     * which an item will be sent. The information in this container is applicable if the
     * seller is using calculated shipping or flat rate shipping using shipping rate tables
     * with weight surcharges. This container is only returned in the "Get" calls if specified
     * for the item.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ShipPackageDetailsType
	 */
	public ShipPackageDetailsType getShippingPackageDetails() {
	    return this.shippingPackageDetails;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of dimension and size details related to a shipping package in
     * which an item will be sent. The information in this container is applicable if the
     * seller is using calculated shipping or flat rate shipping using shipping rate tables
     * with weight surcharges. This container is only returned in the "Get" calls if specified
     * for the item.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ShipPackageDetailsType
	 */
	public void setShippingPackageDetails(ShipPackageDetailsType shippingPackageDetails) {
	    this.shippingPackageDetails = shippingPackageDetails;
	}
	/**
     * public getter
     *
     * 
     * This field applies only to the US site, and will be returned only if the US seller qualifies as a <b>Top-Rated Seller</b>.
     * <br/><br/>
     * If this flag is returned for a listing, it indicates that the listing meets the new requirements for a <b>Top-Rated Plus</b> listing. A <b>Top-Rated Plus</b> listing must meet the following requirements:
     * <ul>
     * <li>14-day (or longer) return policy with Money Back option</li>
     * <li>1-day Handling Time or better</li>
     * </ul>
     * <br/>
     * A <b>Top-Rated Plus</b> seal appears on the View Item page for qualifying listings. </b>Top-Rated Sellers</b> get a 20 percent discount on their Final Value Fee for all listings that qualify as <b>Top-Rated Plus</b>.
     *                   <br/><br/>
     *                   See eBay's <a href="http://pages.ebay.com/sellerinformation/sellingresources/toprated.html">Top Rated Seller Resource Center</a> for more information about how to qualify as a Top-Rated Seller.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getTopRatedListing() {
	    return this.topRatedListing;
	}
	
	/**
	 * public setter
	 *
     * 
     * This field applies only to the US site, and will be returned only if the US seller qualifies as a <b>Top-Rated Seller</b>.
     * <br/><br/>
     * If this flag is returned for a listing, it indicates that the listing meets the new requirements for a <b>Top-Rated Plus</b> listing. A <b>Top-Rated Plus</b> listing must meet the following requirements:
     * <ul>
     * <li>14-day (or longer) return policy with Money Back option</li>
     * <li>1-day Handling Time or better</li>
     * </ul>
     * <br/>
     * A <b>Top-Rated Plus</b> seal appears on the View Item page for qualifying listings. </b>Top-Rated Sellers</b> get a 20 percent discount on their Final Value Fee for all listings that qualify as <b>Top-Rated Plus</b>.
     *                   <br/><br/>
     *                   See eBay's <a href="http://pages.ebay.com/sellerinformation/sellingresources/toprated.html">Top Rated Seller Resource Center</a> for more information about how to qualify as a Top-Rated Seller.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setTopRatedListing(Boolean topRatedListing) {
	    this.topRatedListing = topRatedListing;
	}
	/**
     * public getter
     *
     * 
     * This value sets the minimum price threshold for a seller's product price in a fixed-price
     * listing. Regardless of the product price on eBay Value Box or Amazon listings, the seller's
     * product price will not be reduced lower than this dollar value.
     * <br/><br/>
     * This value is only applicable to sellers using the Dynamic Pricing API, and if a dynamic
     * pricing rule is assigned to the listing's product.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getFloorPrice() {
	    return this.floorPrice;
	}
	
	/**
	 * public setter
	 *
     * 
     * This value sets the minimum price threshold for a seller's product price in a fixed-price
     * listing. Regardless of the product price on eBay Value Box or Amazon listings, the seller's
     * product price will not be reduced lower than this dollar value.
     * <br/><br/>
     * This value is only applicable to sellers using the Dynamic Pricing API, and if a dynamic
     * pricing rule is assigned to the listing's product.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setFloorPrice(AmountType floorPrice) {
	    this.floorPrice = floorPrice;
	}
	/**
     * public getter
     *
     * 
     * This value sets the maximum price threshold for a seller's product price in a fixed-price
     * listing. Regardless of the product price on Amazon or eBay Value Box, the seller's product
     * price will not be raised higher than this dollar value.
     * <br/><br/>
     * This value is only applicable to sellers using the Dynamic Pricing API, and if a dynamic
     * pricing rule is assigned to the listing's product. If this field is not specified through
     * the Dynamic Pricing API, an eBay system-level threshold is used to avoid any undesirable
     * results.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getCeilingPrice() {
	    return this.ceilingPrice;
	}
	
	/**
	 * public setter
	 *
     * 
     * This value sets the maximum price threshold for a seller's product price in a fixed-price
     * listing. Regardless of the product price on Amazon or eBay Value Box, the seller's product
     * price will not be raised higher than this dollar value.
     * <br/><br/>
     * This value is only applicable to sellers using the Dynamic Pricing API, and if a dynamic
     * pricing rule is assigned to the listing's product. If this field is not specified through
     * the Dynamic Pricing API, an eBay system-level threshold is used to avoid any undesirable
     * results.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setCeilingPrice(AmountType ceilingPrice) {
	    this.ceilingPrice = ceilingPrice;
	}
	/**
     * public getter
     *
     * 
     * This container is used by the seller to restrict the quantity of items that may be
     * purchased by one buyer during the duration of a fixed-price listing (single or
     * multi-variation). This is an optional container that can be used with an Add,
     * Revise, or Relist call.
     * <br/><br/>
     * This container is not applicable to auction listings.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.QuantityRestrictionPerBuyerInfoType
	 */
	public QuantityRestrictionPerBuyerInfoType getQuantityRestrictionPerBuyer() {
	    return this.quantityRestrictionPerBuyer;
	}
	
	/**
	 * public setter
	 *
     * 
     * This container is used by the seller to restrict the quantity of items that may be
     * purchased by one buyer during the duration of a fixed-price listing (single or
     * multi-variation). This is an optional container that can be used with an Add,
     * Revise, or Relist call.
     * <br/><br/>
     * This container is not applicable to auction listings.
     * 
     *
     * @param ebay.apis.eblbasecomponents.QuantityRestrictionPerBuyerInfoType
	 */
	public void setQuantityRestrictionPerBuyer(QuantityRestrictionPerBuyerInfoType quantityRestrictionPerBuyer) {
	    this.quantityRestrictionPerBuyer = quantityRestrictionPerBuyer;
	}
	/**
     * public getter
     *
     * 
     *                   If true, sellers can offer eBay's Global Shipping Program when listing the specified item.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getIsIntermediatedShippingEligible() {
	    return this.isIntermediatedShippingEligible;
	}
	
	/**
	 * public setter
	 *
     * 
     *                   If true, sellers can offer eBay's Global Shipping Program when listing the specified item.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setIsIntermediatedShippingEligible(Boolean isIntermediatedShippingEligible) {
	    this.isIntermediatedShippingEligible = isIntermediatedShippingEligible;
	}
	/**
     * public getter
     *
     * 
     * Contains information about the weight, volume or other quantity measurement of a listed item. The European Union requires listings for certain types of products to include the price per unit so buyers can accurately compare prices. eBay uses the <strong>UnitInfo</strong> data and the item's listed price to calculate and display the per-unit price on eBay EU sites. 
     *         
     *                   <br/><br/>
     *                   <span class="tablenote">
     *                   <strong>Note:</strong> This information is currently required only for EU business sellers, and only for listings with a Buy It Now option.
     *                   </span>
     * 
     *
     * @returns ebay.apis.eblbasecomponents.UnitInfoType
	 */
	public UnitInfoType getUnitInfo() {
	    return this.unitInfo;
	}
	
	/**
	 * public setter
	 *
     * 
     * Contains information about the weight, volume or other quantity measurement of a listed item. The European Union requires listings for certain types of products to include the price per unit so buyers can accurately compare prices. eBay uses the <strong>UnitInfo</strong> data and the item's listed price to calculate and display the per-unit price on eBay EU sites. 
     *         
     *                   <br/><br/>
     *                   <span class="tablenote">
     *                   <strong>Note:</strong> This information is currently required only for EU business sellers, and only for listings with a Buy It Now option.
     *                   </span>
     * 
     *
     * @param ebay.apis.eblbasecomponents.UnitInfoType
	 */
	public void setUnitInfo(UnitInfoType unitInfo) {
	    this.unitInfo = unitInfo;
	}
	/**
     * public getter
     *
     * 
     * The eBay Item ID of the current item's parent (original) listing. Only a relisted
     * item will have a parent item, so this field will only be returned if the current
     * item is a relisted item.
     * 
     *
     * @returns java.lang.Long
	 */
	public Long getRelistParentID() {
	    return this.relistParentID;
	}
	
	/**
	 * public setter
	 *
     * 
     * The eBay Item ID of the current item's parent (original) listing. Only a relisted
     * item will have a parent item, so this field will only be returned if the current
     * item is a relisted item.
     * 
     *
     * @param java.lang.Long
	 */
	public void setRelistParentID(Long relistParentID) {
	    this.relistParentID = relistParentID;
	}
	/**
     * public getter
     *
     * 
     * This field is not returned by any Trading API calls, and will be deprecated soon.
     * 
     *
     * @returns java.lang.String
	 */
	public String getConditionDefinition() {
	    return this.conditionDefinition;
	}
	
	/**
	 * public setter
	 *
     * 
     * This field is not returned by any Trading API calls, and will be deprecated soon.
     * 
     *
     * @param java.lang.String
	 */
	public void setConditionDefinition(String conditionDefinition) {
	    this.conditionDefinition = conditionDefinition;
	}
	/**
     * public getter
     *
     * 
     * If this field is returned in <b>GetItem</b> as 'true', the auction
     * listing is being hidden from search on the eBay site. This field is not returned
     * if 'false'.
     * <br/><br/>
     * To see the reason why the auction listing is being hidden from search, take a look
     * at the value returned in the <b>ReasonHideFromSearch</b> field.
     * Currently, only auction listings that have been determined to be duplicate listings
     * with zero bids are hidden from search, but there may be other reasons to hide
     * auction listings from search in the future.
     * <br/><br/>
     * Is it possible that a previously hidden listing will be resurfaced in search if the
     * original auction listing or other duplicate listings get bids or are purchased
     * through Buy It Now.
     * <br/><br/>
     * It is also possible that eBay will administratively end duplicate auction listings
     * with zero bids. If this occurs, the listing fee will be credited back to the
     * seller's account, and the value returned in the
     * <b>AccountDetailsEntryType</b> field of the <b>GetAccount</b>
     * API call will be <b>CreditAuctionEndEarly</b>.
     * <br/><br/>
     * This field is associated with eBay Duplicate Listings Policy, which has taken
     * effect on the US, CA, CA-FR, and eBay Motors (Parts and Accessories only) sites.
     * Event Tickets, Real Estate, and Motor Vehicle categories are excluded from this
     * policy. For more information, read
     * <a href="http://pages.ebay.com/help/policies/listing-multi.html">eBay's Duplicate Listings Policy</a> help page.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getHideFromSearch() {
	    return this.hideFromSearch;
	}
	
	/**
	 * public setter
	 *
     * 
     * If this field is returned in <b>GetItem</b> as 'true', the auction
     * listing is being hidden from search on the eBay site. This field is not returned
     * if 'false'.
     * <br/><br/>
     * To see the reason why the auction listing is being hidden from search, take a look
     * at the value returned in the <b>ReasonHideFromSearch</b> field.
     * Currently, only auction listings that have been determined to be duplicate listings
     * with zero bids are hidden from search, but there may be other reasons to hide
     * auction listings from search in the future.
     * <br/><br/>
     * Is it possible that a previously hidden listing will be resurfaced in search if the
     * original auction listing or other duplicate listings get bids or are purchased
     * through Buy It Now.
     * <br/><br/>
     * It is also possible that eBay will administratively end duplicate auction listings
     * with zero bids. If this occurs, the listing fee will be credited back to the
     * seller's account, and the value returned in the
     * <b>AccountDetailsEntryType</b> field of the <b>GetAccount</b>
     * API call will be <b>CreditAuctionEndEarly</b>.
     * <br/><br/>
     * This field is associated with eBay Duplicate Listings Policy, which has taken
     * effect on the US, CA, CA-FR, and eBay Motors (Parts and Accessories only) sites.
     * Event Tickets, Real Estate, and Motor Vehicle categories are excluded from this
     * policy. For more information, read
     * <a href="http://pages.ebay.com/help/policies/listing-multi.html">eBay's Duplicate Listings Policy</a> help page.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setHideFromSearch(Boolean hideFromSearch) {
	    this.hideFromSearch = hideFromSearch;
	}
	/**
     * public getter
     *
     * 
     * The enumeration value in this field indicates why the auction listing is being
     * hidden from search on the eBay site. This field is only returned if the
     * <b>HideFromSearch</b> field is returned as 'true' in the
     * <b>GetItem</b> response.
     * <br/><br/>
     * Currently, only auction listings that have been determined to be duplicate listings
     * with zero bids are hidden from search, but there may be other reasons to hide
     * auction listings from search in the future.
     * <br/><br/>
     * This field is associated with eBay Duplicate Listings Policy, which has taken
     * effect on the US, CA, CA-FR, and eBay Motors (Parts and Accessories only) sites.
     * Event Tickets, Real Estate, and Motor Vehicle categories are excluded from this
     * policy. For more information, read
     * <a href="http://pages.ebay.com/help/policies/listing-multi.html">eBay's Duplicate Listings Policy</a> help page.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ReasonHideFromSearchCodeType
	 */
	public ReasonHideFromSearchCodeType getReasonHideFromSearch() {
	    return this.reasonHideFromSearch;
	}
	
	/**
	 * public setter
	 *
     * 
     * The enumeration value in this field indicates why the auction listing is being
     * hidden from search on the eBay site. This field is only returned if the
     * <b>HideFromSearch</b> field is returned as 'true' in the
     * <b>GetItem</b> response.
     * <br/><br/>
     * Currently, only auction listings that have been determined to be duplicate listings
     * with zero bids are hidden from search, but there may be other reasons to hide
     * auction listings from search in the future.
     * <br/><br/>
     * This field is associated with eBay Duplicate Listings Policy, which has taken
     * effect on the US, CA, CA-FR, and eBay Motors (Parts and Accessories only) sites.
     * Event Tickets, Real Estate, and Motor Vehicle categories are excluded from this
     * policy. For more information, read
     * <a href="http://pages.ebay.com/help/policies/listing-multi.html">eBay's Duplicate Listings Policy</a> help page.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ReasonHideFromSearchCodeType
	 */
	public void setReasonHideFromSearch(ReasonHideFromSearchCodeType reasonHideFromSearch) {
	    this.reasonHideFromSearch = reasonHideFromSearch;
	}

}