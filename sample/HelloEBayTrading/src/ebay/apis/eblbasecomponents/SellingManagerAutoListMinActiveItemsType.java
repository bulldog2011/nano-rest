// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.Date;

/**
 * 
 * Defines the options available for an automated listing rule that
 * keeps a minimum number of items on the site.
 * 
 */
public class SellingManagerAutoListMinActiveItemsType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "MinActiveItemCount")
	private Integer minActiveItemCount;
	
	@Element(name = "ListTimeFrom")
	private Date listTimeFrom;
	
	@Element(name = "ListTimeTo")
	private Date listTimeTo;
	
	@Element(name = "SpacingIntervalInMinutes")
	private Integer spacingIntervalInMinutes;
	
	@Element(name = "ListingHoldInventoryLevel")
	private Integer listingHoldInventoryLevel;
	
    
	/**
     * public getter
     *
     * 
     * The minimum number of listings that should be active on the site.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getMinActiveItemCount() {
	    return this.minActiveItemCount;
	}
	
	/**
	 * public setter
	 *
     * 
     * The minimum number of listings that should be active on the site.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setMinActiveItemCount(Integer minActiveItemCount) {
	    this.minActiveItemCount = minActiveItemCount;
	}
	/**
     * public getter
     *
     * 
     * The start time of the time interval during which new listings should start. 
     * 
     *
     * @returns java.util.Date
	 */
	public Date getListTimeFrom() {
	    return this.listTimeFrom;
	}
	
	/**
	 * public setter
	 *
     * 
     * The start time of the time interval during which new listings should start. 
     * 
     *
     * @param java.util.Date
	 */
	public void setListTimeFrom(Date listTimeFrom) {
	    this.listTimeFrom = listTimeFrom;
	}
	/**
     * public getter
     *
     * 
     * The end time of the time interval during which new listings should start. 
     * 
     *
     * @returns java.util.Date
	 */
	public Date getListTimeTo() {
	    return this.listTimeTo;
	}
	
	/**
	 * public setter
	 *
     * 
     * The end time of the time interval during which new listings should start. 
     * 
     *
     * @param java.util.Date
	 */
	public void setListTimeTo(Date listTimeTo) {
	    this.listTimeTo = listTimeTo;
	}
	/**
     * public getter
     *
     * 
     * Provides a number of minutes for spacing start times of listings. 
     * Used when you list multiple items at the same time. Delays subsequent 
     * listings by the specified number of minutes.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getSpacingIntervalInMinutes() {
	    return this.spacingIntervalInMinutes;
	}
	
	/**
	 * public setter
	 *
     * 
     * Provides a number of minutes for spacing start times of listings. 
     * Used when you list multiple items at the same time. Delays subsequent 
     * listings by the specified number of minutes.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setSpacingIntervalInMinutes(Integer spacingIntervalInMinutes) {
	    this.spacingIntervalInMinutes = spacingIntervalInMinutes;
	}
	/**
     * public getter
     *
     * 
     * Sets a minimum inventory level for listings of associated products
     * to occur.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getListingHoldInventoryLevel() {
	    return this.listingHoldInventoryLevel;
	}
	
	/**
	 * public setter
	 *
     * 
     * Sets a minimum inventory level for listings of associated products
     * to occur.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setListingHoldInventoryLevel(Integer listingHoldInventoryLevel) {
	    this.listingHoldInventoryLevel = listingHoldInventoryLevel;
	}

}