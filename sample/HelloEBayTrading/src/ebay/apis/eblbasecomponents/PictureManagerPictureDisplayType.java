// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * This type is deprecated as Pictures Manager was retired.
 * 
 *       
 *      
 */
public class PictureManagerPictureDisplayType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "DisplayType")
	private PictureManagerPictureDisplayTypeCodeType displayType;
	
	@Element(name = "URL")
	private String url;
	
	@Element(name = "Size")
	private Integer size;
	
	@Element(name = "Height")
	private Integer height;
	
	@Element(name = "Width")
	private Integer width;
	
    
	/**
     * public getter
     *
     * 
     *         
     *  The style of picture display, with a maximum size.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.PictureManagerPictureDisplayTypeCodeType
	 */
	public PictureManagerPictureDisplayTypeCodeType getDisplayType() {
	    return this.displayType;
	}
	
	/**
	 * public setter
	 *
     * 
     *         
     *  The style of picture display, with a maximum size.
     * 
     *
     * @param ebay.apis.eblbasecomponents.PictureManagerPictureDisplayTypeCodeType
	 */
	public void setDisplayType(PictureManagerPictureDisplayTypeCodeType displayType) {
	    this.displayType = displayType;
	}
	/**
     * public getter
     *
     * 
     *         
     * The URL to the image in the Picture Manager album.
     * 
     *
     * @returns java.lang.String
	 */
	public String getUrl() {
	    return this.url;
	}
	
	/**
	 * public setter
	 *
     * 
     *         
     * The URL to the image in the Picture Manager album.
     * 
     *
     * @param java.lang.String
	 */
	public void setUrl(String url) {
	    this.url = url;
	}
	/**
     * public getter
     *
     * 
     *         
     * The total file size of the picture, in bytes.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getSize() {
	    return this.size;
	}
	
	/**
	 * public setter
	 *
     * 
     *         
     * The total file size of the picture, in bytes.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setSize(Integer size) {
	    this.size = size;
	}
	/**
     * public getter
     *
     * 
     *         
     * The height of a specific image, or the maximum allowed height, in pixels.
     * Varies for different calls.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getHeight() {
	    return this.height;
	}
	
	/**
	 * public setter
	 *
     * 
     *         
     * The height of a specific image, or the maximum allowed height, in pixels.
     * Varies for different calls.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setHeight(Integer height) {
	    this.height = height;
	}
	/**
     * public getter
     *
     * 
     *         
     * The width of a specific image, or the maximum allowed width, in pixels.
     * Varies for different calls.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getWidth() {
	    return this.width;
	}
	
	/**
	 * public setter
	 *
     * 
     *         
     * The width of a specific image, or the maximum allowed width, in pixels.
     * Varies for different calls.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setWidth(Integer width) {
	    this.width = width;
	}

}