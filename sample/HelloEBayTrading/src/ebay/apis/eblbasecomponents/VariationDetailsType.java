// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.Date;

/**
 * 
 * Type defining the <b>VariationDetails</b> container that is returned in 
 * <b>GeteBayDetails</b> if <b>VariationDetails</b> is included 
 * in the request as a <b>DetailName</b> filter, or if <b>GeteBayDetails</b> 
 * is called with no <b>DetailName</b> filters.
 * 
 */
public class VariationDetailsType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "MaxVariationsPerItem")
	private Integer maxVariationsPerItem;
	
	@Element(name = "MaxNamesPerVariationSpecificsSet")
	private Integer maxNamesPerVariationSpecificsSet;
	
	@Element(name = "MaxValuesPerVariationSpecificsSetName")
	private Integer maxValuesPerVariationSpecificsSetName;
	
	@Element(name = "DetailVersion")
	private String detailVersion;
	
	@Element(name = "UpdateTime")
	private Date updateTime;
	
    
	/**
     * public getter
     *
     * 
     * This value indicates the maximum number of item variations that the site will allow 
     * within one multi-variation listing.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getMaxVariationsPerItem() {
	    return this.maxVariationsPerItem;
	}
	
	/**
	 * public setter
	 *
     * 
     * This value indicates the maximum number of item variations that the site will allow 
     * within one multi-variation listing.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setMaxVariationsPerItem(Integer maxVariationsPerItem) {
	    this.maxVariationsPerItem = maxVariationsPerItem;
	}
	/**
     * public getter
     *
     * 
     * This value indicates the maximum number of variation specific sets that the site will allow 
     * per listing. Typical variation specific sets for clothing may be 'Color', 'Size', 'Long Sleeve', etc.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getMaxNamesPerVariationSpecificsSet() {
	    return this.maxNamesPerVariationSpecificsSet;
	}
	
	/**
	 * public setter
	 *
     * 
     * This value indicates the maximum number of variation specific sets that the site will allow 
     * per listing. Typical variation specific sets for clothing may be 'Color', 'Size', 'Long Sleeve', etc.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setMaxNamesPerVariationSpecificsSet(Integer maxNamesPerVariationSpecificsSet) {
	    this.maxNamesPerVariationSpecificsSet = maxNamesPerVariationSpecificsSet;
	}
	/**
     * public getter
     *
     * 
     * This value indicates the maximum number of values that the site will allow 
     * within one variation specific set. For example, if the variation specific set was 
     * 'Color', the seller could specify as many colors that are available up to this 
     * maximum value.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getMaxValuesPerVariationSpecificsSetName() {
	    return this.maxValuesPerVariationSpecificsSetName;
	}
	
	/**
	 * public setter
	 *
     * 
     * This value indicates the maximum number of values that the site will allow 
     * within one variation specific set. For example, if the variation specific set was 
     * 'Color', the seller could specify as many colors that are available up to this 
     * maximum value.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setMaxValuesPerVariationSpecificsSetName(Integer maxValuesPerVariationSpecificsSetName) {
	    this.maxValuesPerVariationSpecificsSetName = maxValuesPerVariationSpecificsSetName;
	}
	/**
     * public getter
     *
     * 
     * Returns the latest version number for this field. The version can be
     * used to determine if and when to refresh cached client data.
     * 
     *
     * @returns java.lang.String
	 */
	public String getDetailVersion() {
	    return this.detailVersion;
	}
	
	/**
	 * public setter
	 *
     * 
     * Returns the latest version number for this field. The version can be
     * used to determine if and when to refresh cached client data.
     * 
     *
     * @param java.lang.String
	 */
	public void setDetailVersion(String detailVersion) {
	    this.detailVersion = detailVersion;
	}
	/**
     * public getter
     *
     * 
     * Gives the time in GMT that the feature flags for the details were last
     * updated. This timestamp can be used to determine if and when to refresh
     * cached client data.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getUpdateTime() {
	    return this.updateTime;
	}
	
	/**
	 * public setter
	 *
     * 
     * Gives the time in GMT that the feature flags for the details were last
     * updated. This timestamp can be used to determine if and when to refresh
     * cached client data.
     * 
     *
     * @param java.util.Date
	 */
	public void setUpdateTime(Date updateTime) {
	    this.updateTime = updateTime;
	}

}