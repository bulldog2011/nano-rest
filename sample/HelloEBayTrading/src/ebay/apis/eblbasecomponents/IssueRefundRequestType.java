// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * <b>Half.com only.</b>&nbsp;Issues a refund for a specific
 * Half.com order line item. This can only be called by a seller. Sellers do not
 * have the ability to issue a general refund (a refund not tied to an order line
 * item) to a buyer.
 * 
 */
@RootElement(name = "IssueRefundRequest", namespace = "urn:ebay:apis:eBLBaseComponents")
public class IssueRefundRequestType extends AbstractRequestType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "ItemID")
	private String itemID;
	
	@Element(name = "TransactionID")
	private String transactionID;
	
	@Element(name = "RefundReason")
	private RefundReasonCodeType refundReason;
	
	@Element(name = "RefundType")
	private RefundTypeCodeType refundType;
	
	@Element(name = "RefundAmount")
	private AmountType refundAmount;
	
	@Element(name = "RefundMessage")
	private String refundMessage;
	
	@Element(name = "OrderLineItemID")
	private String orderLineItemID;
	
    
	/**
     * public getter
     *
     * 
     * Unique identifier for the Half.com item listing. Unless an
     * <b>OrderLineItemID</b> is specified in the <b>IssueRefund</b> request, the <b>ItemID</b> is
     * required along with the corresponding <b>TransactionID</b> to identify the
     * order line item that will be refunded. You can use <b>GetSellerPayments</b> to
     * retrieve the <b>ItemID</b> and/or <b>TransactionID</b> associated with the order line
     * item.
     * 
     *
     * @returns java.lang.String
	 */
	public String getItemID() {
	    return this.itemID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Unique identifier for the Half.com item listing. Unless an
     * <b>OrderLineItemID</b> is specified in the <b>IssueRefund</b> request, the <b>ItemID</b> is
     * required along with the corresponding <b>TransactionID</b> to identify the
     * order line item that will be refunded. You can use <b>GetSellerPayments</b> to
     * retrieve the <b>ItemID</b> and/or <b>TransactionID</b> associated with the order line
     * item.
     * 
     *
     * @param java.lang.String
	 */
	public void setItemID(String itemID) {
	    this.itemID = itemID;
	}
	/**
     * public getter
     *
     * 
     * Unique identifier for a Half.com order line item (transaction). An order
     * line item is created once there is a commitment from a buyer to purchase
     * an item. Along with its corresponding <b>ItemID</b>, a <b>TransactionID</b> is used to
     * identify the order line item that will be refunded. Unless an
     * <b>OrderLineItemID</b> is specified in the <b>IssueRefund</b> request, the
     * <b>TransactionID</b> is required along with the corresponding <b>ItemID</b>. You can
     * use <b>GetSellerPayments</b> to retrieve the <b>ItemID</b> and/or <b>TransactionID</b>
     * associated with the order line item.
     * 
     *
     * @returns java.lang.String
	 */
	public String getTransactionID() {
	    return this.transactionID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Unique identifier for a Half.com order line item (transaction). An order
     * line item is created once there is a commitment from a buyer to purchase
     * an item. Along with its corresponding <b>ItemID</b>, a <b>TransactionID</b> is used to
     * identify the order line item that will be refunded. Unless an
     * <b>OrderLineItemID</b> is specified in the <b>IssueRefund</b> request, the
     * <b>TransactionID</b> is required along with the corresponding <b>ItemID</b>. You can
     * use <b>GetSellerPayments</b> to retrieve the <b>ItemID</b> and/or <b>TransactionID</b>
     * associated with the order line item.
     * 
     *
     * @param java.lang.String
	 */
	public void setTransactionID(String transactionID) {
	    this.transactionID = transactionID;
	}
	/**
     * public getter
     *
     * 
     * Explanation of the reason that the refund is being issued.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.RefundReasonCodeType
	 */
	public RefundReasonCodeType getRefundReason() {
	    return this.refundReason;
	}
	
	/**
	 * public setter
	 *
     * 
     * Explanation of the reason that the refund is being issued.
     * 
     *
     * @param ebay.apis.eblbasecomponents.RefundReasonCodeType
	 */
	public void setRefundReason(RefundReasonCodeType refundReason) {
	    this.refundReason = refundReason;
	}
	/**
     * public getter
     *
     * 
     * Explanation of the costs that the refund amount covers.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.RefundTypeCodeType
	 */
	public RefundTypeCodeType getRefundType() {
	    return this.refundType;
	}
	
	/**
	 * public setter
	 *
     * 
     * Explanation of the costs that the refund amount covers.
     * 
     *
     * @param ebay.apis.eblbasecomponents.RefundTypeCodeType
	 */
	public void setRefundType(RefundTypeCodeType refundType) {
	    this.refundType = refundType;
	}
	/**
     * public getter
     *
     * 
     * The amount the seller wants to refund to the buyer, in US Dollars (USD).
     * Must be greater than 0.00. Half.com allows a maximum of the original item
     * sale price (order line item price plus original shipping reimbursement) plus
     * return shipping costs (the amount the buyer paid to return the item).
     * Typically, the return shipping cost is based on the current cost of
     * shipping the individual item (not the discounted cost calculated during
     * the original checkout for a Combined Payment order). You can also issue a
     * partial refund for the amount you want the buyer to receive. If
     * RefundType=Full or RefundType=FullPlusShipping and you do not pass
     * <b>RefundAmount</b> in the request, Half.com will calculate the refund amount for
     * you. If you pass <b>RefundAmount</b> in the request, the amount you specify will
     * override Half.com's calculated value. Required if RefundType=
     * CustomOrPartial.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getRefundAmount() {
	    return this.refundAmount;
	}
	
	/**
	 * public setter
	 *
     * 
     * The amount the seller wants to refund to the buyer, in US Dollars (USD).
     * Must be greater than 0.00. Half.com allows a maximum of the original item
     * sale price (order line item price plus original shipping reimbursement) plus
     * return shipping costs (the amount the buyer paid to return the item).
     * Typically, the return shipping cost is based on the current cost of
     * shipping the individual item (not the discounted cost calculated during
     * the original checkout for a Combined Payment order). You can also issue a
     * partial refund for the amount you want the buyer to receive. If
     * RefundType=Full or RefundType=FullPlusShipping and you do not pass
     * <b>RefundAmount</b> in the request, Half.com will calculate the refund amount for
     * you. If you pass <b>RefundAmount</b> in the request, the amount you specify will
     * override Half.com's calculated value. Required if RefundType=
     * CustomOrPartial.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setRefundAmount(AmountType refundAmount) {
	    this.refundAmount = refundAmount;
	}
	/**
     * public getter
     *
     * 
     * Note to the buyer. Cannot include HTML.
     * 
     *
     * @returns java.lang.String
	 */
	public String getRefundMessage() {
	    return this.refundMessage;
	}
	
	/**
	 * public setter
	 *
     * 
     * Note to the buyer. Cannot include HTML.
     * 
     *
     * @param java.lang.String
	 */
	public void setRefundMessage(String refundMessage) {
	    this.refundMessage = refundMessage;
	}
	/**
     * public getter
     *
     * 
     * A unique identifier for an eBay order line item. This field is created
     * as soon as there is a commitment to buy from the seller, and its value
     * is based upon the concatenation of <b>ItemID</b> and <b>TransactionID</b>, with a
     * hyphen in between these two IDs. The <b>OrderLineItemID</b> value is used to
     * identify the order line item that will be refunded. Unless an
     * <b>ItemID</b>/<b>TransactionID</b> pair is specified in the <b>IssueRefund</b> request, the
     * <b>OrderLineItemID</b> is required. You can use <b>GetSellerPayments</b> to retrieve
     * the <b>OrderLineItemID</b> associated with the order line item.
     * <br>
     * 
     *
     * @returns java.lang.String
	 */
	public String getOrderLineItemID() {
	    return this.orderLineItemID;
	}
	
	/**
	 * public setter
	 *
     * 
     * A unique identifier for an eBay order line item. This field is created
     * as soon as there is a commitment to buy from the seller, and its value
     * is based upon the concatenation of <b>ItemID</b> and <b>TransactionID</b>, with a
     * hyphen in between these two IDs. The <b>OrderLineItemID</b> value is used to
     * identify the order line item that will be refunded. Unless an
     * <b>ItemID</b>/<b>TransactionID</b> pair is specified in the <b>IssueRefund</b> request, the
     * <b>OrderLineItemID</b> is required. You can use <b>GetSellerPayments</b> to retrieve
     * the <b>OrderLineItemID</b> associated with the order line item.
     * <br>
     * 
     *
     * @param java.lang.String
	 */
	public void setOrderLineItemID(String orderLineItemID) {
	    this.orderLineItemID = orderLineItemID;
	}

}