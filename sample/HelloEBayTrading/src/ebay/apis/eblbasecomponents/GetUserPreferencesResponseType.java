// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * Contains some or all of the authenticated user's preferences. The preferences are
 * grouped in sets and are returned according to the flag settings in the request.
 * 
 */
@RootElement(name = "GetUserPreferencesResponse", namespace = "urn:ebay:apis:eBLBaseComponents")
public class GetUserPreferencesResponseType extends AbstractResponseType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "BidderNoticePreferences")
	private BidderNoticePreferencesType bidderNoticePreferences;
	
	@Element(name = "CombinedPaymentPreferences")
	private CombinedPaymentPreferencesType combinedPaymentPreferences;
	
	@Element(name = "CrossPromotionPreferences")
	private CrossPromotionPreferencesType crossPromotionPreferences;
	
	@Element(name = "SellerPaymentPreferences")
	private SellerPaymentPreferencesType sellerPaymentPreferences;
	
	@Element(name = "SellerFavoriteItemPreferences")
	private SellerFavoriteItemPreferencesType sellerFavoriteItemPreferences;
	
	@Element(name = "EndOfAuctionEmailPreferences")
	private EndOfAuctionEmailPreferencesType endOfAuctionEmailPreferences;
	
	@Element(name = "EmailShipmentTrackingNumberPreference")
	private Boolean emailShipmentTrackingNumberPreference;
	
	@Element(name = "RequiredShipPhoneNumberPreference")
	private Boolean requiredShipPhoneNumberPreference;
	
	@Element(name = "ProStoresPreference")
	private ProStoresCheckoutPreferenceType proStoresPreference;
	
	@Element(name = "UnpaidItemAssistancePreferences")
	private UnpaidItemAssistancePreferencesType unpaidItemAssistancePreferences;
	
	@Element(name = "SellerExcludeShipToLocationPreferences")
	private SellerExcludeShipToLocationPreferencesType sellerExcludeShipToLocationPreferences;
	
	@Element(name = "PurchaseReminderEmailPreferences")
	private PurchaseReminderEmailPreferencesType purchaseReminderEmailPreferences;
	
	@Element(name = "SellerThirdPartyCheckoutDisabled")
	private Boolean sellerThirdPartyCheckoutDisabled;
	
	@Element(name = "SellerProfilePreferences")
	private SellerProfilePreferencesType sellerProfilePreferences;
	
	@Element(name = "SellerReturnPreferences")
	private SellerReturnPreferencesType sellerReturnPreferences;
	
	@Element(name = "OfferGlobalShippingProgramPreference")
	private Boolean offerGlobalShippingProgramPreference;
	
    
	/**
     * public getter
     *
     * 
     * Container consisting of the seller's preference for receiving contact
     * information for unsuccessful bidders. This container is returned when
     * <b>ShowBidderNoticePreferences</b> is included and set to 'true' in
     * the request. This preference is only applicable for auction listings.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.BidderNoticePreferencesType
	 */
	public BidderNoticePreferencesType getBidderNoticePreferences() {
	    return this.bidderNoticePreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of the seller's preference for receiving contact
     * information for unsuccessful bidders. This container is returned when
     * <b>ShowBidderNoticePreferences</b> is included and set to 'true' in
     * the request. This preference is only applicable for auction listings.
     * 
     *
     * @param ebay.apis.eblbasecomponents.BidderNoticePreferencesType
	 */
	public void setBidderNoticePreferences(BidderNoticePreferencesType bidderNoticePreferences) {
	    this.bidderNoticePreferences = bidderNoticePreferences;
	}
	/**
     * public getter
     *
     * 
     * Container consisting of the seller's combined payment preferences. This
     * container is returned when <b>ShowCombinedPaymentPreferences</b>
     * is included and set to 'true' in the request.
     * <br>
     * <span class="tablenote"><strong>Note:</strong>
     * Calculated and flat-rate shipping preferences are no longer managed using the 
     * <b>SetUserPreferences</b> and <b>GetUserPreferences</b> calls. 
     * Instead,use the
     * <b>SetDiscountProfiles</b> and <b>GetDiscountProfiles</b>
     * calls to manage shipping discounts for combined payment orders.
     * </span>
     * 
     *
     * @returns ebay.apis.eblbasecomponents.CombinedPaymentPreferencesType
	 */
	public CombinedPaymentPreferencesType getCombinedPaymentPreferences() {
	    return this.combinedPaymentPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of the seller's combined payment preferences. This
     * container is returned when <b>ShowCombinedPaymentPreferences</b>
     * is included and set to 'true' in the request.
     * <br>
     * <span class="tablenote"><strong>Note:</strong>
     * Calculated and flat-rate shipping preferences are no longer managed using the 
     * <b>SetUserPreferences</b> and <b>GetUserPreferences</b> calls. 
     * Instead,use the
     * <b>SetDiscountProfiles</b> and <b>GetDiscountProfiles</b>
     * calls to manage shipping discounts for combined payment orders.
     * </span>
     * 
     *
     * @param ebay.apis.eblbasecomponents.CombinedPaymentPreferencesType
	 */
	public void setCombinedPaymentPreferences(CombinedPaymentPreferencesType combinedPaymentPreferences) {
	    this.combinedPaymentPreferences = combinedPaymentPreferences;
	}
	/**
     * public getter
     *
     * 
     * This container is no longer supported as eBay Store Cross Promotions are no
     * longer supported in the Trading API. This container will be removed from the
     * Trading WSDL and API Call Reference docs in a future release.
     * <br><br>
     * Container consisting of the seller's cross-promotion preferences. This
     * container is returned when <b>ShowCrossPromotionPreferences</b> is
     * included and set to 'true' in the request. These preferences are only applicable
     * for eBay Store owners.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.CrossPromotionPreferencesType
	 */
	public CrossPromotionPreferencesType getCrossPromotionPreferences() {
	    return this.crossPromotionPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * This container is no longer supported as eBay Store Cross Promotions are no
     * longer supported in the Trading API. This container will be removed from the
     * Trading WSDL and API Call Reference docs in a future release.
     * <br><br>
     * Container consisting of the seller's cross-promotion preferences. This
     * container is returned when <b>ShowCrossPromotionPreferences</b> is
     * included and set to 'true' in the request. These preferences are only applicable
     * for eBay Store owners.
     * 
     *
     * @param ebay.apis.eblbasecomponents.CrossPromotionPreferencesType
	 */
	public void setCrossPromotionPreferences(CrossPromotionPreferencesType crossPromotionPreferences) {
	    this.crossPromotionPreferences = crossPromotionPreferences;
	}
	/**
     * public getter
     *
     * 
     * Container consisting of the seller's payment preferences. This container is
     * returned when <b>ShowSellerPaymentPreferences</b> is included and
     * set to 'true' in the request.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SellerPaymentPreferencesType
	 */
	public SellerPaymentPreferencesType getSellerPaymentPreferences() {
	    return this.sellerPaymentPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of the seller's payment preferences. This container is
     * returned when <b>ShowSellerPaymentPreferences</b> is included and
     * set to 'true' in the request.
     * 
     *
     * @param ebay.apis.eblbasecomponents.SellerPaymentPreferencesType
	 */
	public void setSellerPaymentPreferences(SellerPaymentPreferencesType sellerPaymentPreferences) {
	    this.sellerPaymentPreferences = sellerPaymentPreferences;
	}
	/**
     * public getter
     *
     * 
     * Container consisting of the seller's preferences for displaying items on a
     * buyer's Favorite Sellers' Items page or Favorite Sellers' Items digest. This
     * container is returned when <b>ShowSellerFavoriteItemPreferences</b>
     * is included and set to 'true' in the request.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SellerFavoriteItemPreferencesType
	 */
	public SellerFavoriteItemPreferencesType getSellerFavoriteItemPreferences() {
	    return this.sellerFavoriteItemPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of the seller's preferences for displaying items on a
     * buyer's Favorite Sellers' Items page or Favorite Sellers' Items digest. This
     * container is returned when <b>ShowSellerFavoriteItemPreferences</b>
     * is included and set to 'true' in the request.
     * 
     *
     * @param ebay.apis.eblbasecomponents.SellerFavoriteItemPreferencesType
	 */
	public void setSellerFavoriteItemPreferences(SellerFavoriteItemPreferencesType sellerFavoriteItemPreferences) {
	    this.sellerFavoriteItemPreferences = sellerFavoriteItemPreferences;
	}
	/**
     * public getter
     *
     * 
     * Container consisting of the seller's preferences for the end-of-auction email
     * sent to the winning bidder. This container is returned when
     * <b>ShowEndOfAuctionEmailPreferences</b> is included and set to
     * 'true' in the request. These preferences are only applicable for auction
     * listings.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.EndOfAuctionEmailPreferencesType
	 */
	public EndOfAuctionEmailPreferencesType getEndOfAuctionEmailPreferences() {
	    return this.endOfAuctionEmailPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of the seller's preferences for the end-of-auction email
     * sent to the winning bidder. This container is returned when
     * <b>ShowEndOfAuctionEmailPreferences</b> is included and set to
     * 'true' in the request. These preferences are only applicable for auction
     * listings.
     * 
     *
     * @param ebay.apis.eblbasecomponents.EndOfAuctionEmailPreferencesType
	 */
	public void setEndOfAuctionEmailPreferences(EndOfAuctionEmailPreferencesType endOfAuctionEmailPreferences) {
	    this.endOfAuctionEmailPreferences = endOfAuctionEmailPreferences;
	}
	/**
     * public getter
     *
     * 
     * Container consisting of the seller's preference for sending an email to the
     * buyer with the shipping tracking number. This container is returned when
     * <b>ShowEmailShipmentTrackingNumberPreference</b> is included and set
     * to 'true' in the request.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getEmailShipmentTrackingNumberPreference() {
	    return this.emailShipmentTrackingNumberPreference;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of the seller's preference for sending an email to the
     * buyer with the shipping tracking number. This container is returned when
     * <b>ShowEmailShipmentTrackingNumberPreference</b> is included and set
     * to 'true' in the request.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setEmailShipmentTrackingNumberPreference(Boolean emailShipmentTrackingNumberPreference) {
	    this.emailShipmentTrackingNumberPreference = emailShipmentTrackingNumberPreference;
	}
	/**
     * public getter
     *
     * 
     * Container consisting of the seller's preference for requiring that the
     * buyer supply a shipping phone number upon checkout. Some shipping carriers
     * require the receiver's phone number. This container is returned when
     * <b>ShowRequiredShipPhoneNumberPreference</b> is included and set
     * to 'true' in the request.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getRequiredShipPhoneNumberPreference() {
	    return this.requiredShipPhoneNumberPreference;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of the seller's preference for requiring that the
     * buyer supply a shipping phone number upon checkout. Some shipping carriers
     * require the receiver's phone number. This container is returned when
     * <b>ShowRequiredShipPhoneNumberPreference</b> is included and set
     * to 'true' in the request.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setRequiredShipPhoneNumberPreference(Boolean requiredShipPhoneNumberPreference) {
	    this.requiredShipPhoneNumberPreference = requiredShipPhoneNumberPreference;
	}
	/**
     * public getter
     *
     * 
     * Container consisting of the seller's ProStores preferences. This container
     * is returned when <b>ShowProStoresPreference</b> is included and
     * set to 'true' in the request.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ProStoresCheckoutPreferenceType
	 */
	public ProStoresCheckoutPreferenceType getProStoresPreference() {
	    return this.proStoresPreference;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of the seller's ProStores preferences. This container
     * is returned when <b>ShowProStoresPreference</b> is included and
     * set to 'true' in the request.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ProStoresCheckoutPreferenceType
	 */
	public void setProStoresPreference(ProStoresCheckoutPreferenceType proStoresPreference) {
	    this.proStoresPreference = proStoresPreference;
	}
	/**
     * public getter
     *
     * 
     * Container consisting of a seller's Unpaid Item Assistant preferences. The
     * Unpaid Item Assistant automatically opens an Unpaid Item dispute on the
     * behalf of the seller. This container is returned if
     * <b>ShowUnpaidItemAssistancePreference</b> is included and set to
     * 'true' in the request.
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * To return the list of buyers excluded from the Unpaid Item Assistant
     * mechanism, the <b>ShowUnpaidItemAssistanceExclusionList</b> field
     * must also be included and set to 'true' in the request. Excluded buyers can be
     * viewed in the <b>UnpaidItemAssistancePreferences.ExcludedUser</b>
     * field.
     * </span>
     * 
     *
     * @returns ebay.apis.eblbasecomponents.UnpaidItemAssistancePreferencesType
	 */
	public UnpaidItemAssistancePreferencesType getUnpaidItemAssistancePreferences() {
	    return this.unpaidItemAssistancePreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of a seller's Unpaid Item Assistant preferences. The
     * Unpaid Item Assistant automatically opens an Unpaid Item dispute on the
     * behalf of the seller. This container is returned if
     * <b>ShowUnpaidItemAssistancePreference</b> is included and set to
     * 'true' in the request.
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * To return the list of buyers excluded from the Unpaid Item Assistant
     * mechanism, the <b>ShowUnpaidItemAssistanceExclusionList</b> field
     * must also be included and set to 'true' in the request. Excluded buyers can be
     * viewed in the <b>UnpaidItemAssistancePreferences.ExcludedUser</b>
     * field.
     * </span>
     * 
     *
     * @param ebay.apis.eblbasecomponents.UnpaidItemAssistancePreferencesType
	 */
	public void setUnpaidItemAssistancePreferences(UnpaidItemAssistancePreferencesType unpaidItemAssistancePreferences) {
	    this.unpaidItemAssistancePreferences = unpaidItemAssistancePreferences;
	}
	/**
     * public getter
     *
     * 
     * Container consisting of a list of the seller's excluded shipping locations.
     * The returned list mirrors the seller's current Exclude shipping locations
     * list in My eBay's shipping preferences. An excluded shipping location in My
     * eBay can be an entire geographical region (such as Middle East) or only an
     * individual country (such as Iraq). Sellers can override these default
     * settings for an individual listing by using the
     * <b>Item.ShippingDetails.ExcludeShipToLocation</b> field in the
     * Add/Revise/Relist calls. This container is returned if the
     * <b>ShowSellerExcludeShipToLocationPreference</b> field is included
     * and set to 'true' in the request.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SellerExcludeShipToLocationPreferencesType
	 */
	public SellerExcludeShipToLocationPreferencesType getSellerExcludeShipToLocationPreferences() {
	    return this.sellerExcludeShipToLocationPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of a list of the seller's excluded shipping locations.
     * The returned list mirrors the seller's current Exclude shipping locations
     * list in My eBay's shipping preferences. An excluded shipping location in My
     * eBay can be an entire geographical region (such as Middle East) or only an
     * individual country (such as Iraq). Sellers can override these default
     * settings for an individual listing by using the
     * <b>Item.ShippingDetails.ExcludeShipToLocation</b> field in the
     * Add/Revise/Relist calls. This container is returned if the
     * <b>ShowSellerExcludeShipToLocationPreference</b> field is included
     * and set to 'true' in the request.
     * 
     *
     * @param ebay.apis.eblbasecomponents.SellerExcludeShipToLocationPreferencesType
	 */
	public void setSellerExcludeShipToLocationPreferences(SellerExcludeShipToLocationPreferencesType sellerExcludeShipToLocationPreferences) {
	    this.sellerExcludeShipToLocationPreferences = sellerExcludeShipToLocationPreferences;
	}
	/**
     * public getter
     *
     * 
     * Container consisting of a seller's preference for sending a purchase reminder
     * email to buyers. This container is returned if the
     * <b>ShowPurchaseReminderEmailPreferences</b> field is included and
     * set to 'true' in the request.
     *  
     *
     * @returns ebay.apis.eblbasecomponents.PurchaseReminderEmailPreferencesType
	 */
	public PurchaseReminderEmailPreferencesType getPurchaseReminderEmailPreferences() {
	    return this.purchaseReminderEmailPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of a seller's preference for sending a purchase reminder
     * email to buyers. This container is returned if the
     * <b>ShowPurchaseReminderEmailPreferences</b> field is included and
     * set to 'true' in the request.
     *  
     *
     * @param ebay.apis.eblbasecomponents.PurchaseReminderEmailPreferencesType
	 */
	public void setPurchaseReminderEmailPreferences(PurchaseReminderEmailPreferencesType purchaseReminderEmailPreferences) {
	    this.purchaseReminderEmailPreferences = purchaseReminderEmailPreferences;
	}
	/**
     * public getter
     *
     * 
     * This flag is set with the
     * <b>SellerThirdPartyCheckoutDisabled</b> field of the
     * <b>SetUserPreferences</b> call, and is used to disable the
     * use of a third-party application to handle the checkout flow for a seller.
     * If true, Third-Party Checkout is disabled and any checkout flow initiated on
     * the seller's application is redirected to the eBay checkout flow. This field
     * is only returned if the <b>SellerThirdPartyCheckoutDisabled</b>
     * field has been set with the <b>SetUserPreferences</b> call.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getSellerThirdPartyCheckoutDisabled() {
	    return this.sellerThirdPartyCheckoutDisabled;
	}
	
	/**
	 * public setter
	 *
     * 
     * This flag is set with the
     * <b>SellerThirdPartyCheckoutDisabled</b> field of the
     * <b>SetUserPreferences</b> call, and is used to disable the
     * use of a third-party application to handle the checkout flow for a seller.
     * If true, Third-Party Checkout is disabled and any checkout flow initiated on
     * the seller's application is redirected to the eBay checkout flow. This field
     * is only returned if the <b>SellerThirdPartyCheckoutDisabled</b>
     * field has been set with the <b>SetUserPreferences</b> call.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setSellerThirdPartyCheckoutDisabled(Boolean sellerThirdPartyCheckoutDisabled) {
	    this.sellerThirdPartyCheckoutDisabled = sellerThirdPartyCheckoutDisabled;
	}
	/**
     * public getter
     *
     * 
     * Parent response container consisting of high-level information for all
     * Business Policies profiles defined for the user's account. This container is
     * returned if <b>ShowSellerProfilePreferences</b> is included and
     * set to 'true' in the <b>GetUserPreferences</b> request (and one or
     * more Business Policies profiles are defined for the user's account).
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * Business Policies are not yet available for use on the eBay platform.
     * </span>
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SellerProfilePreferencesType
	 */
	public SellerProfilePreferencesType getSellerProfilePreferences() {
	    return this.sellerProfilePreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * Parent response container consisting of high-level information for all
     * Business Policies profiles defined for the user's account. This container is
     * returned if <b>ShowSellerProfilePreferences</b> is included and
     * set to 'true' in the <b>GetUserPreferences</b> request (and one or
     * more Business Policies profiles are defined for the user's account).
     * <br><br>
     * <span class="tablenote"><strong>Note:</strong>
     * Business Policies are not yet available for use on the eBay platform.
     * </span>
     * 
     *
     * @param ebay.apis.eblbasecomponents.SellerProfilePreferencesType
	 */
	public void setSellerProfilePreferences(SellerProfilePreferencesType sellerProfilePreferences) {
	    this.sellerProfilePreferences = sellerProfilePreferences;
	}
	/**
     * public getter
     *
     * 
     * Container consisting of a seller's eBay Return Center preferences. This
     * container is returned if <b>ShowSellerReturnPreferences</b> is
     * included and set to true in the request.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SellerReturnPreferencesType
	 */
	public SellerReturnPreferencesType getSellerReturnPreferences() {
	    return this.sellerReturnPreferences;
	}
	
	/**
	 * public setter
	 *
     * 
     * Container consisting of a seller's eBay Return Center preferences. This
     * container is returned if <b>ShowSellerReturnPreferences</b> is
     * included and set to true in the request.
     * 
     *
     * @param ebay.apis.eblbasecomponents.SellerReturnPreferencesType
	 */
	public void setSellerReturnPreferences(SellerReturnPreferencesType sellerReturnPreferences) {
	    this.sellerReturnPreferences = sellerReturnPreferences;
	}
	/**
     * public getter
     *
     * 
     * This flag indicates whether the seller has opted in to the Global Shipping Program and is able to offer global shipping to international buyers. Returned when <strong>ShowGlobalShippingProgramPreference</strong> is included and set to true.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getOfferGlobalShippingProgramPreference() {
	    return this.offerGlobalShippingProgramPreference;
	}
	
	/**
	 * public setter
	 *
     * 
     * This flag indicates whether the seller has opted in to the Global Shipping Program and is able to offer global shipping to international buyers. Returned when <strong>ShowGlobalShippingProgramPreference</strong> is included and set to true.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setOfferGlobalShippingProgramPreference(Boolean offerGlobalShippingProgramPreference) {
	    this.offerGlobalShippingProgramPreference = offerGlobalShippingProgramPreference;
	}

}