// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.Date;

/**
 * 
 * Requests a list of disputes the requester is involved in as buyer or seller.
 * eBay Buyer Protection Item Not Received and Significantly Not As Described cases
 * are not returned with this call. To retrieve eBay Buyer Protection cases, the
 * getUserCases call of the Resolution Case Management API must be used instead.
 * 
 */
@RootElement(name = "GetUserDisputesRequest", namespace = "urn:ebay:apis:eBLBaseComponents")
public class GetUserDisputesRequestType extends AbstractRequestType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "DisputeFilterType")
	private DisputeFilterTypeCodeType disputeFilterType;
	
	@Element(name = "DisputeSortType")
	private DisputeSortTypeCodeType disputeSortType;
	
	@Element(name = "ModTimeFrom")
	private Date modTimeFrom;
	
	@Element(name = "ModTimeTo")
	private Date modTimeTo;
	
	@Element(name = "Pagination")
	private PaginationType pagination;
	
    
	/**
     * public getter
     *
     * 
     * An inclusive filter that isolates the returned disputes to a certain
     * type such as Item Not Received or Unpaid Item disputes. eBay Buyer
     * Protection cases are not retrieved with this call, even if the
     * ItemNotReceivedDisputes filter is included in the request.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.DisputeFilterTypeCodeType
	 */
	public DisputeFilterTypeCodeType getDisputeFilterType() {
	    return this.disputeFilterType;
	}
	
	/**
	 * public setter
	 *
     * 
     * An inclusive filter that isolates the returned disputes to a certain
     * type such as Item Not Received or Unpaid Item disputes. eBay Buyer
     * Protection cases are not retrieved with this call, even if the
     * ItemNotReceivedDisputes filter is included in the request.
     * 
     *
     * @param ebay.apis.eblbasecomponents.DisputeFilterTypeCodeType
	 */
	public void setDisputeFilterType(DisputeFilterTypeCodeType disputeFilterType) {
	    this.disputeFilterType = disputeFilterType;
	}
	/**
     * public getter
     *
     * 
     * The value and sequence to use to sort the returned disputes.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.DisputeSortTypeCodeType
	 */
	public DisputeSortTypeCodeType getDisputeSortType() {
	    return this.disputeSortType;
	}
	
	/**
	 * public setter
	 *
     * 
     * The value and sequence to use to sort the returned disputes.
     * 
     *
     * @param ebay.apis.eblbasecomponents.DisputeSortTypeCodeType
	 */
	public void setDisputeSortType(DisputeSortTypeCodeType disputeSortType) {
	    this.disputeSortType = disputeSortType;
	}
	/**
     * public getter
     *
     * 
     * A filter that retrieves disputes whose DisputeModifiedTime is later
     * than or equal to this value. Specify the time value in GMT.
     * See the eBay Web Services documentation for information about specifying time values.
     * For more precise control of the date range filter, it is a good practice to also
     * specify ModTimeTo. Otherwise, the end of the date range is the present time.
     * Filtering by date range is optional. You can use date range filters in combination
     * with other filters like DisputeFilterType to control the amount of data returned.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getModTimeFrom() {
	    return this.modTimeFrom;
	}
	
	/**
	 * public setter
	 *
     * 
     * A filter that retrieves disputes whose DisputeModifiedTime is later
     * than or equal to this value. Specify the time value in GMT.
     * See the eBay Web Services documentation for information about specifying time values.
     * For more precise control of the date range filter, it is a good practice to also
     * specify ModTimeTo. Otherwise, the end of the date range is the present time.
     * Filtering by date range is optional. You can use date range filters in combination
     * with other filters like DisputeFilterType to control the amount of data returned.
     * 
     *
     * @param java.util.Date
	 */
	public void setModTimeFrom(Date modTimeFrom) {
	    this.modTimeFrom = modTimeFrom;
	}
	/**
     * public getter
     *
     * 
     * A filter that retrieves disputes whose DisputeModifiedTime is earlier
     * than or equal to this value. Specify the time value in GMT.
     * See the eBay Web Services documentation for information about specifying time values.
     * For more precise control of the date range filter, it is a good practice to also
     * specify ModTimeFrom. Otherwise, all available disputes modified prior to the ModTimeTo value are returned.
     * Filtering by date range is optional. You can use date range filters in combination
     * with other filters like DisputeFilterType to control the amount of data returned.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getModTimeTo() {
	    return this.modTimeTo;
	}
	
	/**
	 * public setter
	 *
     * 
     * A filter that retrieves disputes whose DisputeModifiedTime is earlier
     * than or equal to this value. Specify the time value in GMT.
     * See the eBay Web Services documentation for information about specifying time values.
     * For more precise control of the date range filter, it is a good practice to also
     * specify ModTimeFrom. Otherwise, all available disputes modified prior to the ModTimeTo value are returned.
     * Filtering by date range is optional. You can use date range filters in combination
     * with other filters like DisputeFilterType to control the amount of data returned.
     * 
     *
     * @param java.util.Date
	 */
	public void setModTimeTo(Date modTimeTo) {
	    this.modTimeTo = modTimeTo;
	}
	/**
     * public getter
     *
     * 
     * The virtual page number of the result set to display. A result set has a number of disputes
     * divided into virtual pages, with 200 disputes per page. The response can only display one page.
     * The first page in the result set is number 1. Required. If not specified, a warning is returned
     * and Pagination.PageNumber is set to 1 by default.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.PaginationType
	 */
	public PaginationType getPagination() {
	    return this.pagination;
	}
	
	/**
	 * public setter
	 *
     * 
     * The virtual page number of the result set to display. A result set has a number of disputes
     * divided into virtual pages, with 200 disputes per page. The response can only display one page.
     * The first page in the result set is number 1. Required. If not specified, a warning is returned
     * and Pagination.PageNumber is set to 1 by default.
     * 
     *
     * @param ebay.apis.eblbasecomponents.PaginationType
	 */
	public void setPagination(PaginationType pagination) {
	    this.pagination = pagination;
	}

}