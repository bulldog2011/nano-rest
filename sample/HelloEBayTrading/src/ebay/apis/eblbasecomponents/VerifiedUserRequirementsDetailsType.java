// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * 
 *  Type defining the <b>BuyerRequirementDetails.VerifiedUserRequirements</b> 
 *  container that is returned in <b>GeteBayDetails</b>. The
 *  <b>VerifiedUserRequirements</b> container provides the <b>VerifiedUser</b> 
 *  and <b>FeedbackScore</b> values that may be used in listing calls to restrict
 *  unverified users who have Feedback scores below the minimum threshold.
 * 
 */
public class VerifiedUserRequirementsDetailsType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "VerifiedUser")
	private Boolean verifiedUser;
	
	@Element(name = "FeedbackScore")
	private List<Integer> feedbackScore;
	
    
	/**
     * public getter
     *
     * 
     * For eBay sites that support Verified User Requirements, this boolean is always 
     * returned as 'true'. If a seller uses the 
     * <b>BuyerRequirementDetails.VerifiedUserRequirements</b> in listing calls, 
     * the <b>VerifiedUser</b> field in that container should only be passed 
     * into the request if the seller is only willing to sell items to Verified Users. If 
     * the <b>VerifiedUser</b> field is omitted from the listing call, the 
     * specified <b>FeedbackScore</b> value will only apply to unverified users.
     * <br/><br/>
     * Currently, this feature is only supported by the following sites: UK, Australia, 
     * France, Spain, India, Ireland, Malaysia, Philippines, and Singapore. However, this 
     * is subject to change, so it is always a good idea for the seller to call 
     * <b>GeteBayDetails</b> with <b>DetailName</b> set to 
     * <b>BuyerRequirementDetails</b>.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getVerifiedUser() {
	    return this.verifiedUser;
	}
	
	/**
	 * public setter
	 *
     * 
     * For eBay sites that support Verified User Requirements, this boolean is always 
     * returned as 'true'. If a seller uses the 
     * <b>BuyerRequirementDetails.VerifiedUserRequirements</b> in listing calls, 
     * the <b>VerifiedUser</b> field in that container should only be passed 
     * into the request if the seller is only willing to sell items to Verified Users. If 
     * the <b>VerifiedUser</b> field is omitted from the listing call, the 
     * specified <b>FeedbackScore</b> value will only apply to unverified users.
     * <br/><br/>
     * Currently, this feature is only supported by the following sites: UK, Australia, 
     * France, Spain, India, Ireland, Malaysia, Philippines, and Singapore. However, this 
     * is subject to change, so it is always a good idea for the seller to call 
     * <b>GeteBayDetails</b> with <b>DetailName</b> set to 
     * <b>BuyerRequirementDetails</b>.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setVerifiedUser(Boolean verifiedUser) {
	    this.verifiedUser = verifiedUser;
	}
	/**
     * public getter
     *
     * 
     * The values returned in these fields are the values that may be used by the seller 
     * in the <b>BuyerRequirementDetails.VerifiedUserRequirements</b> 
     * container in listing calls. The <b>FeedbackScore</b> value passed into 
     * a listing call request will restrict unverified users with Feedback scores below
     * the minimum threshold value from buying the item.
     * 
     *
     * @returns java.util.List<java.lang.Integer>
	 */
	public List<Integer> getFeedbackScore() {
	    return this.feedbackScore;
	}
	
	/**
	 * public setter
	 *
     * 
     * The values returned in these fields are the values that may be used by the seller 
     * in the <b>BuyerRequirementDetails.VerifiedUserRequirements</b> 
     * container in listing calls. The <b>FeedbackScore</b> value passed into 
     * a listing call request will restrict unverified users with Feedback scores below
     * the minimum threshold value from buying the item.
     * 
     *
     * @param java.util.List<java.lang.Integer>
	 */
	public void setFeedbackScore(List<Integer> feedbackScore) {
	    this.feedbackScore = feedbackScore;
	}

}