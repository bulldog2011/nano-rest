// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.Date;

/**
 * 
 * This type defines the <b>ShippingCategoryDetails</b> container. When the <b>DetailName</b> field
 * is set to ShippingCategoryDetails in a GeteBayDetails request, one
 * <b>ShippingCategoryDetails</b> container is returned for each valid shipping category
 * used on the eBay site. Besides being useful to view the list of valid shipping
 * categories, this container is also useful to discover when the last update to
 * shipping categories was made by eBay.
 * 
 */
public class ShippingCategoryDetailsType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "ShippingCategory")
	private String shippingCategory;
	
	@Element(name = "Description")
	private String description;
	
	@Element(name = "DetailVersion")
	private String detailVersion;
	
	@Element(name = "UpdateTime")
	private Date updateTime;
	
    
	/**
     * public getter
     *
     * 
     * Indicates the shipping category. Shipping categories include the following:
     * ECONOMY, STANDARD, EXPEDITED, ONE_DAY, PICKUP, OTHER, and NONE. International
     * shipping services are generally grouped into the NONE category. For more
     * information on these shipping categories, and which services fall into which
     * category, see the
     * <a href="http://pages.ebay.com/sellerinformation/shipping/chooseservice.html">Shipping Basics</a> page on the eBay Shipping Center site.
     * 
     *
     * @returns java.lang.String
	 */
	public String getShippingCategory() {
	    return this.shippingCategory;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates the shipping category. Shipping categories include the following:
     * ECONOMY, STANDARD, EXPEDITED, ONE_DAY, PICKUP, OTHER, and NONE. International
     * shipping services are generally grouped into the NONE category. For more
     * information on these shipping categories, and which services fall into which
     * category, see the
     * <a href="http://pages.ebay.com/sellerinformation/shipping/chooseservice.html">Shipping Basics</a> page on the eBay Shipping Center site.
     * 
     *
     * @param java.lang.String
	 */
	public void setShippingCategory(String shippingCategory) {
	    this.shippingCategory = shippingCategory;
	}
	/**
     * public getter
     *
     * 
     * Display string that applications can use to present a list of shipping categories in
     * a more user-friendly format (such as in a drop-down list). This field is localized
     * per site.
     * 
     *
     * @returns java.lang.String
	 */
	public String getDescription() {
	    return this.description;
	}
	
	/**
	 * public setter
	 *
     * 
     * Display string that applications can use to present a list of shipping categories in
     * a more user-friendly format (such as in a drop-down list). This field is localized
     * per site.
     * 
     *
     * @param java.lang.String
	 */
	public void setDescription(String description) {
	    this.description = description;
	}
	/**
     * public getter
     *
     * 
     * The current version number for shipping categories. Sellers can compare this
     * version number to their version number to determine if and when to refresh
     * cached client data.
     * 
     *
     * @returns java.lang.String
	 */
	public String getDetailVersion() {
	    return this.detailVersion;
	}
	
	/**
	 * public setter
	 *
     * 
     * The current version number for shipping categories. Sellers can compare this
     * version number to their version number to determine if and when to refresh
     * cached client data.
     * 
     *
     * @param java.lang.String
	 */
	public void setDetailVersion(String detailVersion) {
	    this.detailVersion = detailVersion;
	}
	/**
     * public getter
     *
     * 
     * Indicates the time of the last version update.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getUpdateTime() {
	    return this.updateTime;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates the time of the last version update.
     * 
     *
     * @param java.util.Date
	 */
	public void setUpdateTime(Date updateTime) {
	    this.updateTime = updateTime;
	}

}