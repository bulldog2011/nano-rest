// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.Date;

/**
 * 
 * Retrieves usage information about platform notifications for a given application.
 * You can use this notification information to troubleshoot issues with platform
 * notifications. You can call this up to 50 times per hour for a given application.
 * 
 */
@RootElement(name = "GetNotificationsUsageRequest", namespace = "urn:ebay:apis:eBLBaseComponents")
public class GetNotificationsUsageRequestType extends AbstractRequestType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "StartTime")
	private Date startTime;
	
	@Element(name = "EndTime")
	private Date endTime;
	
	@Element(name = "ItemID")
	private String itemID;
	
    
	/**
     * public getter
     *
     * 
     * Specifies the start date and time for which notification information
     * will be retrieved. StartTime is optional. If no StartTime is specified,
     * the default value of 24 hours prior to the call time is used. If no
     * StartTime is specified or if an invalid StartTime is specified, date
     * range errors are returned in the response. For a StartTime to be valid,
     * it must be no more than 72 hours before the time of the call, it cannot
     * be more recent than the EndTime, and it cannot be later than the time of
     * the call. If an invalid StartTime is specified, the default value is
     * used.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getStartTime() {
	    return this.startTime;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the start date and time for which notification information
     * will be retrieved. StartTime is optional. If no StartTime is specified,
     * the default value of 24 hours prior to the call time is used. If no
     * StartTime is specified or if an invalid StartTime is specified, date
     * range errors are returned in the response. For a StartTime to be valid,
     * it must be no more than 72 hours before the time of the call, it cannot
     * be more recent than the EndTime, and it cannot be later than the time of
     * the call. If an invalid StartTime is specified, the default value is
     * used.
     * 
     *
     * @param java.util.Date
	 */
	public void setStartTime(Date startTime) {
	    this.startTime = startTime;
	}
	/**
     * public getter
     *
     * 
     * Specifies the end date and time for which notification information
     * will be retrieved. EndTime is optional. If no EndTime is specified,
     * the current time (the time the call is made) is used. If no EndTime
     * is specified or if an invalid EndTime is specified, date range errors
     * are returned in the response. For an EndTime to be valid, it must be no
     * more than 72 hours before the time the of the call, it cannot be before
     * the StartTime, and it cannot be later than the time of the call. If an
     * invalid EndTime is specified, the current time is used.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getEndTime() {
	    return this.endTime;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies the end date and time for which notification information
     * will be retrieved. EndTime is optional. If no EndTime is specified,
     * the current time (the time the call is made) is used. If no EndTime
     * is specified or if an invalid EndTime is specified, date range errors
     * are returned in the response. For an EndTime to be valid, it must be no
     * more than 72 hours before the time the of the call, it cannot be before
     * the StartTime, and it cannot be later than the time of the call. If an
     * invalid EndTime is specified, the current time is used.
     * 
     *
     * @param java.util.Date
	 */
	public void setEndTime(Date endTime) {
	    this.endTime = endTime;
	}
	/**
     * public getter
     *
     * 
     * Specifies an item ID for which detailed notification information will be
     * retrieved. ItemID is optional. If no ItemID is specified, the response
     * will not include any individual notification details.
     * 
     *
     * @returns java.lang.String
	 */
	public String getItemID() {
	    return this.itemID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies an item ID for which detailed notification information will be
     * retrieved. ItemID is optional. If no ItemID is specified, the response
     * will not include any individual notification details.
     * 
     *
     * @param java.lang.String
	 */
	public void setItemID(String itemID) {
	    this.itemID = itemID;
	}

}