// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * 
 * A list of one or more valid names and corresponding values.
 * 
 */
public class NameValueListArrayType   {

	@Element(name = "NameValueList")
	private List<NameValueListType> nameValueList;
    
    
	/**
     * public getter
     *
     * 
     * This list is an array of Item Specifics, which are category-specific 
     * fields that the seller added to describe the listing. The names of 
     * these fields are different for items in different categories, so 
     * they're returned in a generic name/value structure.
     * <br><br>
     * For example, Item Specifics for a car might include a field like
     * Make=Toyota (where Make is returned in Name, and Toyota is returned 
     * in Value) and Model=Prius (where Model is returned in Name, and 
     * Prius is returned in Value).<br>
     * <br>
     * In multi-variation listings, the same name cannot appear in both
     * the VariationSpecifics node and in the ItemSpecifics node.
     * <br><br>
     * For FindProducts, this can also be an Item Specific that is defined 
     * for a product. That is, Item Specifics can be returned both for
     * items and products in FindProducts.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.NameValueListType>
	 */
	public List<NameValueListType> getNameValueList() {
	    return this.nameValueList;
	}
	
	/**
	 * public setter
	 *
     * 
     * This list is an array of Item Specifics, which are category-specific 
     * fields that the seller added to describe the listing. The names of 
     * these fields are different for items in different categories, so 
     * they're returned in a generic name/value structure.
     * <br><br>
     * For example, Item Specifics for a car might include a field like
     * Make=Toyota (where Make is returned in Name, and Toyota is returned 
     * in Value) and Model=Prius (where Model is returned in Name, and 
     * Prius is returned in Value).<br>
     * <br>
     * In multi-variation listings, the same name cannot appear in both
     * the VariationSpecifics node and in the ItemSpecifics node.
     * <br><br>
     * For FindProducts, this can also be an Item Specific that is defined 
     * for a product. That is, Item Specifics can be returned both for
     * items and products in FindProducts.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.NameValueListType>
	 */
	public void setNameValueList(List<NameValueListType> nameValueList) {
	    this.nameValueList = nameValueList;
	}

}