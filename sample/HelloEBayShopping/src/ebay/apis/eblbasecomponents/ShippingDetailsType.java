// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * 
 * Type for the shipping-related details for an item or transaction.
 * 
 */
public class ShippingDetailsType   {

	@Element(name = "GetItFast")
	private Boolean getItFast;
    
	@Element(name = "InsuranceCost")
	private AmountType insuranceCost;
    
	@Element(name = "InsuranceOption")
	private InsuranceOptionCodeType insuranceOption;
    
	@Element(name = "InternationalShippingServiceOption")
	private List<InternationalShippingServiceOptionType> internationalShippingServiceOption;
    
	@Element(name = "SalesTax")
	private SalesTaxType salesTax;
    
	@Element(name = "ShippingRateErrorMessage")
	private String shippingRateErrorMessage;
    
	@Element(name = "ShippingServiceOption")
	private List<ShippingServiceOptionType> shippingServiceOption;
    
	@Element(name = "TaxTable")
	private TaxTableType taxTable;
    
	@Element(name = "InternationalInsuranceCost")
	private AmountType internationalInsuranceCost;
    
	@Element(name = "InternationalInsuranceOption")
	private InsuranceOptionCodeType internationalInsuranceOption;
    
	@Element(name = "CODCost")
	private AmountType codCost;
    
	@Element(name = "ExcludeShipToLocation")
	private List<String> excludeShipToLocation;
    
	private List<Object> any;
    
    
	/**
     * public getter
     *
     * 
     * Indicates whether the seller has opted the listing into the Get
     * It Fast feature. If GetItFast is true, and if at least one of
     * the domestic shipping services offered by the seller is an
     * expedited shipping service, every shipping service offered by
     * the seller is considered a Get It Fast service, and the seller
     * commits to delivering the item to the buyer-selected shipping
     * service within one day.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getGetItFast() {
	    return this.getItFast;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether the seller has opted the listing into the Get
     * It Fast feature. If GetItFast is true, and if at least one of
     * the domestic shipping services offered by the seller is an
     * expedited shipping service, every shipping service offered by
     * the seller is considered a Get It Fast service, and the seller
     * commits to delivering the item to the buyer-selected shipping
     * service within one day.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setGetItFast(Boolean getItFast) {
	    this.getItFast = getItFast;
	}
	/**
     * public getter
     *
     * 
     * The cost of insurance. For flat rate shipping, this is the value set by the
     * seller, if any. For calculated shipping, this is the value calculated by eBay
     * with the shipping carrier for the particular item and can only be determined
     * once the final item price is known when the listing ends. To determine whether
     * a listing has ended, use GetSingleItem.
     * <br> <br>
     * Not applicable to eBay Motors vehicle listings.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getInsuranceCost() {
	    return this.insuranceCost;
	}
	
	/**
	 * public setter
	 *
     * 
     * The cost of insurance. For flat rate shipping, this is the value set by the
     * seller, if any. For calculated shipping, this is the value calculated by eBay
     * with the shipping carrier for the particular item and can only be determined
     * once the final item price is known when the listing ends. To determine whether
     * a listing has ended, use GetSingleItem.
     * <br> <br>
     * Not applicable to eBay Motors vehicle listings.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setInsuranceCost(AmountType insuranceCost) {
	    this.insuranceCost = insuranceCost;
	}
	/**
     * public getter
     *
     * 
     * Whether the seller offers shipping insurance and, if so, whether the insurance
     * is optional or required. Flat and calculated shipping.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.InsuranceOptionCodeType
	 */
	public InsuranceOptionCodeType getInsuranceOption() {
	    return this.insuranceOption;
	}
	
	/**
	 * public setter
	 *
     * 
     * Whether the seller offers shipping insurance and, if so, whether the insurance
     * is optional or required. Flat and calculated shipping.
     * 
     *
     * @param ebay.apis.eblbasecomponents.InsuranceOptionCodeType
	 */
	public void setInsuranceOption(InsuranceOptionCodeType insuranceOption) {
	    this.insuranceOption = insuranceOption;
	}
	/**
     * public getter
     *
     * 
     * Shipping costs and options related to an international shipping service. For
     * calculated shipping, postal code must be known to determine final shipping
     * cost (and this can only be known if a transaction has been created). For
     * GetShippingCosts, if the postal code or bidder is in the same country as the
     * listing site for the item, it is "domestic shipping" and this container is not
     * returned (and ShippingServiceOption is returned instead). Otherwise, it is
     * "international shipping" and this container is returned.
     * <br> <br>
     * For GetShippingCosts, results are filtered:  if any service is not available
     * in the buyer's region, it is removed. If no services remain after this
     * filtering, a warning is returned.
     * <br><br>
     * Not applicable to Half.com or eBay Motors vehicle listings.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.InternationalShippingServiceOptionType>
	 */
	public List<InternationalShippingServiceOptionType> getInternationalShippingServiceOption() {
	    return this.internationalShippingServiceOption;
	}
	
	/**
	 * public setter
	 *
     * 
     * Shipping costs and options related to an international shipping service. For
     * calculated shipping, postal code must be known to determine final shipping
     * cost (and this can only be known if a transaction has been created). For
     * GetShippingCosts, if the postal code or bidder is in the same country as the
     * listing site for the item, it is "domestic shipping" and this container is not
     * returned (and ShippingServiceOption is returned instead). Otherwise, it is
     * "international shipping" and this container is returned.
     * <br> <br>
     * For GetShippingCosts, results are filtered:  if any service is not available
     * in the buyer's region, it is removed. If no services remain after this
     * filtering, a warning is returned.
     * <br><br>
     * Not applicable to Half.com or eBay Motors vehicle listings.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.InternationalShippingServiceOptionType>
	 */
	public void setInternationalShippingServiceOption(List<InternationalShippingServiceOptionType> internationalShippingServiceOption) {
	    this.internationalShippingServiceOption = internationalShippingServiceOption;
	}
	/**
     * public getter
     *
     * 
     * Sales tax details. US site only. Flat and calculated shipping.
     * <br> <br>
     * Not applicable to eBay Motors vehicle listings.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SalesTaxType
	 */
	public SalesTaxType getSalesTax() {
	    return this.salesTax;
	}
	
	/**
	 * public setter
	 *
     * 
     * Sales tax details. US site only. Flat and calculated shipping.
     * <br> <br>
     * Not applicable to eBay Motors vehicle listings.
     * 
     *
     * @param ebay.apis.eblbasecomponents.SalesTaxType
	 */
	public void setSalesTax(SalesTaxType salesTax) {
	    this.salesTax = salesTax;
	}
	/**
     * public getter
     *
     * 
     * For most applicable calls, returns the words No Error or returns an error
     * message related to an attempt to calculate shipping rates. For calculated
     * shipping only.
     * <br> <br>
     * Not applicable to Half.com or eBay Motors vehicle listings.
     * 
     *
     * @returns java.lang.String
	 */
	public String getShippingRateErrorMessage() {
	    return this.shippingRateErrorMessage;
	}
	
	/**
	 * public setter
	 *
     * 
     * For most applicable calls, returns the words No Error or returns an error
     * message related to an attempt to calculate shipping rates. For calculated
     * shipping only.
     * <br> <br>
     * Not applicable to Half.com or eBay Motors vehicle listings.
     * 
     *
     * @param java.lang.String
	 */
	public void setShippingRateErrorMessage(String shippingRateErrorMessage) {
	    this.shippingRateErrorMessage = shippingRateErrorMessage;
	}
	/**
     * public getter
     *
     * 
     * Shipping costs and options related to a domestic shipping service.
     * For GetShippingCosts, if the postal code or bidder is
     * in the same country as the listing site for the item, it is "domestic
     * shipping" and this container is returned. Otherwise, it is "international
     * shipping" and this container is not returned (and InternationalShippingServiceOption
     * is returned instead, if it exists).
     * For calculated shipping, postal code must be known to determine final shipping
     * cost (and this can only be known if a transaction has been created).
     * For flat shipping: if the listing has not yet ended, any domestic
     * shipping details are returned; if the listing has ended, domestic
     * shipping details are only returned if the buyer's location is
     * "domestic" (that is, it is the same country as the listing site).
     * <br>
     * Not applicable to Half.com or eBay Motors vehicle listings.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.ShippingServiceOptionType>
	 */
	public List<ShippingServiceOptionType> getShippingServiceOption() {
	    return this.shippingServiceOption;
	}
	
	/**
	 * public setter
	 *
     * 
     * Shipping costs and options related to a domestic shipping service.
     * For GetShippingCosts, if the postal code or bidder is
     * in the same country as the listing site for the item, it is "domestic
     * shipping" and this container is returned. Otherwise, it is "international
     * shipping" and this container is not returned (and InternationalShippingServiceOption
     * is returned instead, if it exists).
     * For calculated shipping, postal code must be known to determine final shipping
     * cost (and this can only be known if a transaction has been created).
     * For flat shipping: if the listing has not yet ended, any domestic
     * shipping details are returned; if the listing has ended, domestic
     * shipping details are only returned if the buyer's location is
     * "domestic" (that is, it is the same country as the listing site).
     * <br>
     * Not applicable to Half.com or eBay Motors vehicle listings.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.ShippingServiceOptionType>
	 */
	public void setShippingServiceOption(List<ShippingServiceOptionType> shippingServiceOption) {
	    this.shippingServiceOption = shippingServiceOption;
	}
	/**
     * public getter
     *
     * 
     * Tax details for a jurisdiction such as a state or province.
     * Returned empty in if no tax table was used.
     * <br> <br>
     * Not applicable to Half.com.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.TaxTableType
	 */
	public TaxTableType getTaxTable() {
	    return this.taxTable;
	}
	
	/**
	 * public setter
	 *
     * 
     * Tax details for a jurisdiction such as a state or province.
     * Returned empty in if no tax table was used.
     * <br> <br>
     * Not applicable to Half.com.
     * 
     *
     * @param ebay.apis.eblbasecomponents.TaxTableType
	 */
	public void setTaxTable(TaxTableType taxTable) {
	    this.taxTable = taxTable;
	}
	/**
     * public getter
     *
     * 
     * The cost of insurance for items shipped internationally. For flat rate
     * shipping, this is the value set by the seller, if any. For calculated
     * shipping, this is the value calculated by eBay with the shipping carrier for
     * the particular item and can only be determined once the final item price is
     * known when the listing ends. To determine whether a listing has ended, use
     * GetSingleItem.
     * <br> <br>
     * Not applicable to eBay Motors vehicle listings.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getInternationalInsuranceCost() {
	    return this.internationalInsuranceCost;
	}
	
	/**
	 * public setter
	 *
     * 
     * The cost of insurance for items shipped internationally. For flat rate
     * shipping, this is the value set by the seller, if any. For calculated
     * shipping, this is the value calculated by eBay with the shipping carrier for
     * the particular item and can only be determined once the final item price is
     * known when the listing ends. To determine whether a listing has ended, use
     * GetSingleItem.
     * <br> <br>
     * Not applicable to eBay Motors vehicle listings.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setInternationalInsuranceCost(AmountType internationalInsuranceCost) {
	    this.internationalInsuranceCost = internationalInsuranceCost;
	}
	/**
     * public getter
     *
     * 
     * Whether the seller offers shipping insurance for items shipped internationally
     * and, if so, whether the insurance is optional or required. Flat and calculated
     * shipping.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.InsuranceOptionCodeType
	 */
	public InsuranceOptionCodeType getInternationalInsuranceOption() {
	    return this.internationalInsuranceOption;
	}
	
	/**
	 * public setter
	 *
     * 
     * Whether the seller offers shipping insurance for items shipped internationally
     * and, if so, whether the insurance is optional or required. Flat and calculated
     * shipping.
     * 
     *
     * @param ebay.apis.eblbasecomponents.InsuranceOptionCodeType
	 */
	public void setInternationalInsuranceOption(InsuranceOptionCodeType internationalInsuranceOption) {
	    this.internationalInsuranceOption = internationalInsuranceOption;
	}
	/**
     * public getter
     *
     * 
     * Italy site (site ID 101) only. Contains the cost of cash-on-delivery shipping.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getCodCost() {
	    return this.codCost;
	}
	
	/**
	 * public setter
	 *
     * 
     * Italy site (site ID 101) only. Contains the cost of cash-on-delivery shipping.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setCodCost(AmountType codCost) {
	    this.codCost = codCost;
	}
	/**
     * public getter
     *
     * 
     * A location to which the seller will not ship.
     * Returned only if set via Trading API.
     * Returned only with a request version of 665 or greater.
     * 
     *
     * @returns java.util.List<java.lang.String>
	 */
	public List<String> getExcludeShipToLocation() {
	    return this.excludeShipToLocation;
	}
	
	/**
	 * public setter
	 *
     * 
     * A location to which the seller will not ship.
     * Returned only if set via Trading API.
     * Returned only with a request version of 665 or greater.
     * 
     *
     * @param java.util.List<java.lang.String>
	 */
	public void setExcludeShipToLocation(List<String> excludeShipToLocation) {
	    this.excludeShipToLocation = excludeShipToLocation;
	}
	/**
	 * public getter
	 *
     * @returns java.util.List<java.lang.Object>
	 */
	public List<Object> getAny() {
	    return this.any;
	}
	
	/**
	 * public setter
	 *
     * @param java.util.List<java.lang.Object>
	 */
	public void setAny(List<Object> any) {
	    this.any = any;
	}

}