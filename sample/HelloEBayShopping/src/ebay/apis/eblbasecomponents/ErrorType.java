// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * 
 * These are request errors (as opposed to system errors) that occur due to problems
 * with business-level data (e.g., an invalid combination of arguments) that
 * the application passed in.
 * 
 */
public class ErrorType   {

	@Element(name = "ShortMessage")
	private String shortMessage;
    
	@Element(name = "LongMessage")
	private String longMessage;
    
	@Element(name = "ErrorCode")
	private String errorCode;
    
	@Element(name = "UserDisplayHint")
	private Boolean userDisplayHint;
    
	@Element(name = "SeverityCode")
	private SeverityCodeType severityCode;
    
	@Element(name = "ErrorParameters")
	private List<ErrorParameterType> errorParameters;
    
	@Element(name = "ErrorClassification")
	private ErrorClassificationCodeType errorClassification;
    
	private List<Object> any;
    
    
	/**
     * public getter
     *
     * 
     * A brief description of the condition that raised the error.
     * 
     *
     * @returns java.lang.String
	 */
	public String getShortMessage() {
	    return this.shortMessage;
	}
	
	/**
	 * public setter
	 *
     * 
     * A brief description of the condition that raised the error.
     * 
     *
     * @param java.lang.String
	 */
	public void setShortMessage(String shortMessage) {
	    this.shortMessage = shortMessage;
	}
	/**
     * public getter
     *
     * 
     * A more detailed description of the condition that raised the error.
     * 
     *
     * @returns java.lang.String
	 */
	public String getLongMessage() {
	    return this.longMessage;
	}
	
	/**
	 * public setter
	 *
     * 
     * A more detailed description of the condition that raised the error.
     * 
     *
     * @param java.lang.String
	 */
	public void setLongMessage(String longMessage) {
	    this.longMessage = longMessage;
	}
	/**
     * public getter
     *
     * 
     * A unique code that identifies the particular error condition that occurred.
     * Your application can use error codes as identifiers
     * in your customized error-handling algorithms.
     * 
     *
     * @returns java.lang.String
	 */
	public String getErrorCode() {
	    return this.errorCode;
	}
	
	/**
	 * public setter
	 *
     * 
     * A unique code that identifies the particular error condition that occurred.
     * Your application can use error codes as identifiers
     * in your customized error-handling algorithms.
     * 
     *
     * @param java.lang.String
	 */
	public void setErrorCode(String errorCode) {
	    this.errorCode = errorCode;
	}
	/**
     * public getter
     *
     * 
     * This field is not currently in use for eBay Shopping Web Services.
     * Indicates whether the error message text is intended to be displayed to
     * an end user or intended only to be parsed by the application.
     * If true or not present (the default), the message text is intended for the end user. If false, the message text is intended for
     * the application, and the application should translate the error into a more appropriate message.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getUserDisplayHint() {
	    return this.userDisplayHint;
	}
	
	/**
	 * public setter
	 *
     * 
     * This field is not currently in use for eBay Shopping Web Services.
     * Indicates whether the error message text is intended to be displayed to
     * an end user or intended only to be parsed by the application.
     * If true or not present (the default), the message text is intended for the end user. If false, the message text is intended for
     * the application, and the application should translate the error into a more appropriate message.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setUserDisplayHint(Boolean userDisplayHint) {
	    this.userDisplayHint = userDisplayHint;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether the error caused the request to fail.<br>
     * <br>
     * If the request fails and the source of the problem is within the
     * application (such as a missing required element), please change the
     * application before you  retry the request. If the problem is due to
     * end-user input data, please alert the end-user to the problem and
     * provide the means for them to correct the data. Once the problem in the
     * application or data is resolved, you can attempt to re-send the request
     * to eBay.<br>
     * <br>
     * If the source of the problem is on eBay's side, you can retry the
     * request as-is a reasonable number of times (eBay recommends twice).
     * If the error persists, contact Developer Technical Support. Once the
     * problem has been resolved, the request may be resent in its original
     * form.<br>
     * <br>
     * When a warning occurs, the error is returned in addition to the business
     * data. In this case, you do not need to retry the request (as the
     * original request was successful). However, depending on the cause or
     * nature of the warning, you might need to contact either the end user or
     * eBay to effect a long term solution to the problem to prevent it from
     * reoccurring in the future.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SeverityCodeType
	 */
	public SeverityCodeType getSeverityCode() {
	    return this.severityCode;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether the error caused the request to fail.<br>
     * <br>
     * If the request fails and the source of the problem is within the
     * application (such as a missing required element), please change the
     * application before you  retry the request. If the problem is due to
     * end-user input data, please alert the end-user to the problem and
     * provide the means for them to correct the data. Once the problem in the
     * application or data is resolved, you can attempt to re-send the request
     * to eBay.<br>
     * <br>
     * If the source of the problem is on eBay's side, you can retry the
     * request as-is a reasonable number of times (eBay recommends twice).
     * If the error persists, contact Developer Technical Support. Once the
     * problem has been resolved, the request may be resent in its original
     * form.<br>
     * <br>
     * When a warning occurs, the error is returned in addition to the business
     * data. In this case, you do not need to retry the request (as the
     * original request was successful). However, depending on the cause or
     * nature of the warning, you might need to contact either the end user or
     * eBay to effect a long term solution to the problem to prevent it from
     * reoccurring in the future.
     * 
     *
     * @param ebay.apis.eblbasecomponents.SeverityCodeType
	 */
	public void setSeverityCode(SeverityCodeType severityCode) {
	    this.severityCode = severityCode;
	}
	/**
     * public getter
     *
     * 
     * Some warning and error messages return one or more variables that
     * contain contextual information about the error. This is often the
     * field or value that triggered the error.
     * You can usually predict where these will
     * occur by looking at the "replaceable_value" indicators in our
     * Errors by Number page.
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.ErrorParameterType>
	 */
	public List<ErrorParameterType> getErrorParameters() {
	    return this.errorParameters;
	}
	
	/**
	 * public setter
	 *
     * 
     * Some warning and error messages return one or more variables that
     * contain contextual information about the error. This is often the
     * field or value that triggered the error.
     * You can usually predict where these will
     * occur by looking at the "replaceable_value" indicators in our
     * Errors by Number page.
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.ErrorParameterType>
	 */
	public void setErrorParameters(List<ErrorParameterType> errorParameters) {
	    this.errorParameters = errorParameters;
	}
	/**
     * public getter
     *
     * 
     * API errors are divided between two classes: system errors and request errors.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ErrorClassificationCodeType
	 */
	public ErrorClassificationCodeType getErrorClassification() {
	    return this.errorClassification;
	}
	
	/**
	 * public setter
	 *
     * 
     * API errors are divided between two classes: system errors and request errors.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ErrorClassificationCodeType
	 */
	public void setErrorClassification(ErrorClassificationCodeType errorClassification) {
	    this.errorClassification = errorClassification;
	}
	/**
	 * public getter
	 *
     * @returns java.util.List<java.lang.Object>
	 */
	public List<Object> getAny() {
	    return this.any;
	}
	
	/**
	 * public setter
	 *
     * @param java.util.List<java.lang.Object>
	 */
	public void setAny(List<Object> any) {
	    this.any = any;
	}

}