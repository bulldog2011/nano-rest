// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * 
 * Type for the shipping-related details for an item or transaction.
 * 
 */
public class ShippingCostSummaryType   {

	@Element(name = "ShippingServiceName")
	private String shippingServiceName;
    
	@Element(name = "ShippingServiceCost")
	private AmountType shippingServiceCost;
    
	@Element(name = "InsuranceCost")
	private AmountType insuranceCost;
    
	@Element(name = "ShippingType")
	private ShippingTypeCodeType shippingType;
    
	@Element(name = "LocalPickup")
	private Boolean localPickup;
    
	@Element(name = "InsuranceOption")
	private InsuranceOptionCodeType insuranceOption;
    
	@Element(name = "ListedShippingServiceCost")
	private AmountType listedShippingServiceCost;
    
	@Element(name = "ImportCharge")
	private AmountType importCharge;
    
	private List<Object> any;
    
    
	/**
     * public getter
     *
     * 
     * The name of a shipping service.
     * 
     *
     * @returns java.lang.String
	 */
	public String getShippingServiceName() {
	    return this.shippingServiceName;
	}
	
	/**
	 * public setter
	 *
     * 
     * The name of a shipping service.
     * 
     *
     * @param java.lang.String
	 */
	public void setShippingServiceName(String shippingServiceName) {
	    this.shippingServiceName = shippingServiceName;
	}
	/**
     * public getter
     *
     * 
     * The basic shipping cost of the item.
     * This reflects the domestic shipping cost or the international shipping costs,
     * depending on which applies (that is, whether the bidder/buyer is in the same
     * country as the listing site of the item).
     * <br>
     * <br>
     * In GetSingleItem, this is always returned when ShippingCostSummary is
     * returned, except for when the ShippingType is Freight.
     * <br>
     * <br>
     * GetShippingCosts:
     * <i>Flat shipping:</i> single-item listing: this matches (in)ShippingServiceCost;
     * multi-quantity listing: with a request version of 665 or greater,
     * this is the total of (in)ShippingServiceCost plus
     * ((in)ShippingServiceAdditionalCost times the number of items beyond the first
     * item), and with a request version lower than 665, this is (in)ShippingServiceCost.
     * <br>
     * <i>Promotional shipping:</i> For a request version lower than 665, promotional
     * shipping has no effect on shipping costs. Otherwise: if the promotional
     * shipping option is lower than other shipping services being offered, the
     * savings is reflected in the returned shipping cost;
     * the shipping service named Promotional Shipping Service (or whatever is
     * the localized name for it) is included among the shipping services;
     * if the promotional shipping cost is lower than the cost of other shipping
     * services being offered, it is presented first in the list (the lowest shipping
     * service cost is always presented first, regardless of whether there is
     * promotional shipping).
     * <br>
     * <i>Shipping surcharge:</i> With a request version of
     * 665 or greater, shipping cost includes any surcharge, and surcharge is not
     * returned as an individual tag.  With a request version lower than 665,
     * surcharge is not part of the total cost and is returned as its own tag.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getShippingServiceCost() {
	    return this.shippingServiceCost;
	}
	
	/**
	 * public setter
	 *
     * 
     * The basic shipping cost of the item.
     * This reflects the domestic shipping cost or the international shipping costs,
     * depending on which applies (that is, whether the bidder/buyer is in the same
     * country as the listing site of the item).
     * <br>
     * <br>
     * In GetSingleItem, this is always returned when ShippingCostSummary is
     * returned, except for when the ShippingType is Freight.
     * <br>
     * <br>
     * GetShippingCosts:
     * <i>Flat shipping:</i> single-item listing: this matches (in)ShippingServiceCost;
     * multi-quantity listing: with a request version of 665 or greater,
     * this is the total of (in)ShippingServiceCost plus
     * ((in)ShippingServiceAdditionalCost times the number of items beyond the first
     * item), and with a request version lower than 665, this is (in)ShippingServiceCost.
     * <br>
     * <i>Promotional shipping:</i> For a request version lower than 665, promotional
     * shipping has no effect on shipping costs. Otherwise: if the promotional
     * shipping option is lower than other shipping services being offered, the
     * savings is reflected in the returned shipping cost;
     * the shipping service named Promotional Shipping Service (or whatever is
     * the localized name for it) is included among the shipping services;
     * if the promotional shipping cost is lower than the cost of other shipping
     * services being offered, it is presented first in the list (the lowest shipping
     * service cost is always presented first, regardless of whether there is
     * promotional shipping).
     * <br>
     * <i>Shipping surcharge:</i> With a request version of
     * 665 or greater, shipping cost includes any surcharge, and surcharge is not
     * returned as an individual tag.  With a request version lower than 665,
     * surcharge is not part of the total cost and is returned as its own tag.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setShippingServiceCost(AmountType shippingServiceCost) {
	    this.shippingServiceCost = shippingServiceCost;
	}
	/**
     * public getter
     *
     * 
     * The cost of insurance. For flat rate shipping, this is the value set by the
     * seller, if any. For calculated shipping, this is the value calculated by eBay
     * with the shipping carrier for the particular item and can only be determined
     * once the final item price is known when the listing ends. To determine whether
     * a listing has ended, see EndTime or ListingStatus in GetSingleItem.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getInsuranceCost() {
	    return this.insuranceCost;
	}
	
	/**
	 * public setter
	 *
     * 
     * The cost of insurance. For flat rate shipping, this is the value set by the
     * seller, if any. For calculated shipping, this is the value calculated by eBay
     * with the shipping carrier for the particular item and can only be determined
     * once the final item price is known when the listing ends. To determine whether
     * a listing has ended, see EndTime or ListingStatus in GetSingleItem.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setInsuranceCost(AmountType insuranceCost) {
	    this.insuranceCost = insuranceCost;
	}
	/**
     * public getter
     *
     * 
     * How the seller stated that cost of shipping is to be determined, such as flat rate or
     * calculated.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.ShippingTypeCodeType
	 */
	public ShippingTypeCodeType getShippingType() {
	    return this.shippingType;
	}
	
	/**
	 * public setter
	 *
     * 
     * How the seller stated that cost of shipping is to be determined, such as flat rate or
     * calculated.
     * 
     *
     * @param ebay.apis.eblbasecomponents.ShippingTypeCodeType
	 */
	public void setShippingType(ShippingTypeCodeType shippingType) {
	    this.shippingType = shippingType;
	}
	/**
     * public getter
     *
     * 
     * If ShippingCosts is specified for the IncludeSelector, and if the seller has specified local
     * pickup for this item; the LocalPickup boolean is returned as true. This indicates that the
     * seller does not ship this item. If local pickup
     * was not specified for this item by the seller, the LocalPickup boolean is not returned.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getLocalPickup() {
	    return this.localPickup;
	}
	
	/**
	 * public setter
	 *
     * 
     * If ShippingCosts is specified for the IncludeSelector, and if the seller has specified local
     * pickup for this item; the LocalPickup boolean is returned as true. This indicates that the
     * seller does not ship this item. If local pickup
     * was not specified for this item by the seller, the LocalPickup boolean is not returned.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setLocalPickup(Boolean localPickup) {
	    this.localPickup = localPickup;
	}
	/**
     * public getter
     *
     * 
     * Whether the seller offers shipping insurance and, if
     * so, whether the insurance is optional or required. Flat and
     * calculated shipping.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.InsuranceOptionCodeType
	 */
	public InsuranceOptionCodeType getInsuranceOption() {
	    return this.insuranceOption;
	}
	
	/**
	 * public setter
	 *
     * 
     * Whether the seller offers shipping insurance and, if
     * so, whether the insurance is optional or required. Flat and
     * calculated shipping.
     * 
     *
     * @param ebay.apis.eblbasecomponents.InsuranceOptionCodeType
	 */
	public void setInsuranceOption(InsuranceOptionCodeType insuranceOption) {
	    this.insuranceOption = insuranceOption;
	}
	/**
     * public getter
     *
     * 
     * The listed shipping cost of the item. If multiple items were purchased, this
     * includes the listed ShippingServiceAdditionalCost.
     * <br>
     * <br>
     * In GetSingleItem, this is always returned when ShippingCostSummary is
     * returned, except when the ShippingType is Freight.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getListedShippingServiceCost() {
	    return this.listedShippingServiceCost;
	}
	
	/**
	 * public setter
	 *
     * 
     * The listed shipping cost of the item. If multiple items were purchased, this
     * includes the listed ShippingServiceAdditionalCost.
     * <br>
     * <br>
     * In GetSingleItem, this is always returned when ShippingCostSummary is
     * returned, except when the ShippingType is Freight.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setListedShippingServiceCost(AmountType listedShippingServiceCost) {
	    this.listedShippingServiceCost = listedShippingServiceCost;
	}
	/**
     * public getter
     *
     * 
     * The total cost of customs and taxes for the international leg of an order shipped using the Global Shipping Program. This amount is calculated and supplied for each item by the international shipping provider when a buyer views the item properties.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getImportCharge() {
	    return this.importCharge;
	}
	
	/**
	 * public setter
	 *
     * 
     * The total cost of customs and taxes for the international leg of an order shipped using the Global Shipping Program. This amount is calculated and supplied for each item by the international shipping provider when a buyer views the item properties.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setImportCharge(AmountType importCharge) {
	    this.importCharge = importCharge;
	}
	/**
	 * public getter
	 *
     * @returns java.util.List<java.lang.Object>
	 */
	public List<Object> getAny() {
	    return this.any;
	}
	
	/**
	 * public setter
	 *
     * @param java.util.List<java.lang.Object>
	 */
	public void setAny(List<Object> any) {
	    this.any = any;
	}

}