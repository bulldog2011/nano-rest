// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * A generic histogram entry type.
 * 
 */
public class HistogramEntryType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "Name")
	private String name;
	
	@Element(name = "Count")
	private Integer count;
	
    
	/**
     * public getter
     *
     * 
     * This is the domain name.<br>
     * <br>
     * A product can be mapped to more than one domain.
     * This means that even if a name appears in this histogram and the
     * Count is greater than 1, you won't necessarily see the
     * same name returned for each returned product (in the Product node
     * of the response). That is, Product.DomainName only
     * returns the most applicable domain name (as determined by eBay).
     * 
     *
     * @returns java.lang.String
	 */
	public String getName() {
	    return this.name;
	}
	
	/**
	 * public setter
	 *
     * 
     * This is the domain name.<br>
     * <br>
     * A product can be mapped to more than one domain.
     * This means that even if a name appears in this histogram and the
     * Count is greater than 1, you won't necessarily see the
     * same name returned for each returned product (in the Product node
     * of the response). That is, Product.DomainName only
     * returns the most applicable domain name (as determined by eBay).
     * 
     *
     * @param java.lang.String
	 */
	public void setName(String name) {
	    this.name = name;
	}
	/**
     * public getter
     *
     * 
     * This is the number of products found in the domain.
     * If a product is mapped to more than one domain, it is counted separately
     * for each domain. (For example, if the same product name appears in both
     * Children's Books and Fiction Books, the count for both of these
     * domains will include that product.) This means you cannot sum the
     * product counts to determine the total number of matching products
     * across all domains. The histogram is only intended to show the number
     * of matching products in each individual domain.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getCount() {
	    return this.count;
	}
	
	/**
	 * public setter
	 *
     * 
     * This is the number of products found in the domain.
     * If a product is mapped to more than one domain, it is counted separately
     * for each domain. (For example, if the same product name appears in both
     * Children's Books and Fiction Books, the count for both of these
     * domains will include that product.) This means you cannot sum the
     * product counts to determine the total number of matching products
     * across all domains. The histogram is only intended to show the number
     * of matching products in each individual domain.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setCount(Integer count) {
	    this.count = count;
	}

}