// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * Type for expressing sales tax data.
 * 
 */
public class SalesTaxType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "SalesTaxPercent")
	private Float salesTaxPercent;
	
	@Element(name = "SalesTaxState")
	private String salesTaxState;
	
	@Element(name = "ShippingIncludedInTax")
	private Boolean shippingIncludedInTax;
	
	@Element(name = "SalesTaxAmount")
	private AmountType salesTaxAmount;
	
    
	/**
     * public getter
     *
     * 
     * Percent of an item's price to be charged as the sales
     * tax for the transaction. The value passed in is stored with a
     * precision of 3 digits after the decimal point (##.###).
     * 
     *
     * @returns java.lang.Float
	 */
	public Float getSalesTaxPercent() {
	    return this.salesTaxPercent;
	}
	
	/**
	 * public setter
	 *
     * 
     * Percent of an item's price to be charged as the sales
     * tax for the transaction. The value passed in is stored with a
     * precision of 3 digits after the decimal point (##.###).
     * 
     *
     * @param java.lang.Float
	 */
	public void setSalesTaxPercent(Float salesTaxPercent) {
	    this.salesTaxPercent = salesTaxPercent;
	}
	/**
     * public getter
     *
     * 
     * State or jurisdiction for which the sales tax is being collected.
     * Only returned if the seller specified a value.
     * 
     *
     * @returns java.lang.String
	 */
	public String getSalesTaxState() {
	    return this.salesTaxState;
	}
	
	/**
	 * public setter
	 *
     * 
     * State or jurisdiction for which the sales tax is being collected.
     * Only returned if the seller specified a value.
     * 
     *
     * @param java.lang.String
	 */
	public void setSalesTaxState(String salesTaxState) {
	    this.salesTaxState = salesTaxState;
	}
	/**
     * public getter
     *
     * 
     * (US only) Whether shipping costs were part of the base amount
     * that was taxed. Flat or calculated shipping.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getShippingIncludedInTax() {
	    return this.shippingIncludedInTax;
	}
	
	/**
	 * public setter
	 *
     * 
     * (US only) Whether shipping costs were part of the base amount
     * that was taxed. Flat or calculated shipping.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setShippingIncludedInTax(Boolean shippingIncludedInTax) {
	    this.shippingIncludedInTax = shippingIncludedInTax;
	}
	/**
     * public getter
     *
     * 
     * (US only) The amount of sales tax, calculated for a
     * transaction based on the SalesTaxPercent and pricing information.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getSalesTaxAmount() {
	    return this.salesTaxAmount;
	}
	
	/**
	 * public setter
	 *
     * 
     * (US only) The amount of sales tax, calculated for a
     * transaction based on the SalesTaxPercent and pricing information.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setSalesTaxAmount(AmountType salesTaxAmount) {
	    this.salesTaxAmount = salesTaxAmount;
	}

}