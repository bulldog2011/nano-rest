// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * 
 * This element hold the values that define the SKU, StartPrice, Quantity, VariationDetails, and VariationSpecifics.
 * 
 */
public class VariationType implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element(name = "SKU")
	private String sku;
	
	@Element(name = "StartPrice")
	private AmountType startPrice;
	
	@Element(name = "Quantity")
	private Integer quantity;
	
	@Element(name = "VariationSpecifics")
	private NameValueListArrayType variationSpecifics;
	
	@Element(name = "QuantitySold")
	private Integer quantitySold;
	
	@Element(name = "SellingStatus")
	private SellingStatusType sellingStatus;
	
	@Element(name = "DiscountPriceInfo")
	private DiscountPriceInfoType discountPriceInfo;
	
    
	/**
     * public getter
     *
     * 
     * An SKU (stock keeping unit) is an identifier defined by a seller.
     * If you need to contact the seller to ask a question about a
     * particular variation, you can mention the SKU (if present) to help
     * the seller identify the variation you're interested in.
     * Only returned if the seller chose to specify a SKU for the
     * variation.
     * 
     *
     * @returns java.lang.String
	 */
	public String getSku() {
	    return this.sku;
	}
	
	/**
	 * public setter
	 *
     * 
     * An SKU (stock keeping unit) is an identifier defined by a seller.
     * If you need to contact the seller to ask a question about a
     * particular variation, you can mention the SKU (if present) to help
     * the seller identify the variation you're interested in.
     * Only returned if the seller chose to specify a SKU for the
     * variation.
     * 
     *
     * @param java.lang.String
	 */
	public void setSku(String sku) {
	    this.sku = sku;
	}
	/**
     * public getter
     *
     * 
     * The fixed price of all items identified by this variation.
     * For example, a "Blue, Large" variation price could be USD 10.00,
     * and a "Black, Medium" variation price could be USD 5.00.
     * <br>
     * <br>
     * Each variation has its own price, and the prices can
     * be different for each variation. This enables sellers to
     * provide discounts on certain variations without affecting the price
     * of others. Always returned) for multi-variation listings.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getStartPrice() {
	    return this.startPrice;
	}
	
	/**
	 * public setter
	 *
     * 
     * The fixed price of all items identified by this variation.
     * For example, a "Blue, Large" variation price could be USD 10.00,
     * and a "Black, Medium" variation price could be USD 5.00.
     * <br>
     * <br>
     * Each variation has its own price, and the prices can
     * be different for each variation. This enables sellers to
     * provide discounts on certain variations without affecting the price
     * of others. Always returned) for multi-variation listings.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setStartPrice(AmountType startPrice) {
	    this.startPrice = startPrice;
	}
	/**
     * public getter
     *
     * 
     * The number of items available for sale that are associated
     * with this variation.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getQuantity() {
	    return this.quantity;
	}
	
	/**
	 * public setter
	 *
     * 
     * The number of items available for sale that are associated
     * with this variation.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setQuantity(Integer quantity) {
	    this.quantity = quantity;
	}
	/**
     * public getter
     *
     * 
     * A list of name/value pairs that uniquely identify the variation
     * within the listing. All variations specify the same set of
     * names, and each variation provides a unique combination of
     * values for those names. For example, if the items vary by color and
     * size, then every variation specifies Color and Size as names,
     * and no two variations can specify the same combination of
     * color and size values. Use this information to identify a
     * variation of interest when you communicate with
     * the seller.
     * <br>
     * <br>
     * If your application supports PlaceOffer (in the Trading API),
     * you use this information to uniquely identify the variation
     * that you want to purchase.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.NameValueListArrayType
	 */
	public NameValueListArrayType getVariationSpecifics() {
	    return this.variationSpecifics;
	}
	
	/**
	 * public setter
	 *
     * 
     * A list of name/value pairs that uniquely identify the variation
     * within the listing. All variations specify the same set of
     * names, and each variation provides a unique combination of
     * values for those names. For example, if the items vary by color and
     * size, then every variation specifies Color and Size as names,
     * and no two variations can specify the same combination of
     * color and size values. Use this information to identify a
     * variation of interest when you communicate with
     * the seller.
     * <br>
     * <br>
     * If your application supports PlaceOffer (in the Trading API),
     * you use this information to uniquely identify the variation
     * that you want to purchase.
     * 
     *
     * @param ebay.apis.eblbasecomponents.NameValueListArrayType
	 */
	public void setVariationSpecifics(NameValueListArrayType variationSpecifics) {
	    this.variationSpecifics = variationSpecifics;
	}
	/**
     * public getter
     *
     * 
     * Not used. See SellingStatus.QuantitySold instead.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getQuantitySold() {
	    return this.quantitySold;
	}
	
	/**
	 * public setter
	 *
     * 
     * Not used. See SellingStatus.QuantitySold instead.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setQuantitySold(Integer quantitySold) {
	    this.quantitySold = quantitySold;
	}
	/**
     * public getter
     *
     * 
     * Contains the variation's current price and quantity sold.
     * Always returned when variations are present.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SellingStatusType
	 */
	public SellingStatusType getSellingStatus() {
	    return this.sellingStatus;
	}
	
	/**
	 * public setter
	 *
     * 
     * Contains the variation's current price and quantity sold.
     * Always returned when variations are present.
     * 
     *
     * @param ebay.apis.eblbasecomponents.SellingStatusType
	 */
	public void setSellingStatus(SellingStatusType sellingStatus) {
	    this.sellingStatus = sellingStatus;
	}
	/**
     * public getter
     *
     * 
     * This container provides information for an item that has a Strikethrough Price
     * (STP) or a Minimum Advertised Price (MAP) discount pricing treatment. STP and MAP
     * applies to only fixed price, BIN items. STP is available on the US, UK, and German
     * (DE) sites, while MAP is available only on the US site.
     * <br><br>
     * Discount pricing is available to qualified sellers (and their associated developers) who
     * participate in the Discount Pricing Program. Once qualified, sellers receive a
     * "sepcial account flag" (SAF) that allows them to apply Discount Pricing to both MSKU
     * and Non-MSKU items.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.DiscountPriceInfoType
	 */
	public DiscountPriceInfoType getDiscountPriceInfo() {
	    return this.discountPriceInfo;
	}
	
	/**
	 * public setter
	 *
     * 
     * This container provides information for an item that has a Strikethrough Price
     * (STP) or a Minimum Advertised Price (MAP) discount pricing treatment. STP and MAP
     * applies to only fixed price, BIN items. STP is available on the US, UK, and German
     * (DE) sites, while MAP is available only on the US site.
     * <br><br>
     * Discount pricing is available to qualified sellers (and their associated developers) who
     * participate in the Discount Pricing Program. Once qualified, sellers receive a
     * "sepcial account flag" (SAF) that allows them to apply Discount Pricing to both MSKU
     * and Non-MSKU items.
     * 
     *
     * @param ebay.apis.eblbasecomponents.DiscountPriceInfoType
	 */
	public void setDiscountPriceInfo(DiscountPriceInfoType discountPriceInfo) {
	    this.discountPriceInfo = discountPriceInfo;
	}

}