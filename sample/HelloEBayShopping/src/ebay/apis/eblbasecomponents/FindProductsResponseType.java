// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * 
 * Returns stock product information in eBay catalogs, such as
 * information about a particular DVD or camera. Optionally,
 * also returns items that match the product.
 * 
 */
@RootElement(name = "FindProductsResponse", namespace = "urn:ebay:apis:eBLBaseComponents")
public class FindProductsResponseType extends AbstractResponseType  {

	@Element(name = "ApproximatePages")
	private Integer approximatePages;
    
	@Element(name = "MoreResults")
	private Boolean moreResults;
    
	@Element(name = "DomainHistogram")
	private DomainHistogramType domainHistogram;
    
	@Element(name = "ItemArray")
	private SimpleItemArrayType itemArray;
    
	@Element(name = "PageNumber")
	private Integer pageNumber;
    
	@Element(name = "Product")
	private List<CatalogProductType> product;
    
	@Element(name = "TotalProducts")
	private Integer totalProducts;
    
	@Element(name = "DuplicateItems")
	private Boolean duplicateItems;
    
    
	/**
     * public getter
     *
     * 
     * The total number of pages that can be returned, given the same
     * query and filters in the request. As FindProducts only returns
     * up to 2000 products, the maximum possible value is theoretically
     * 2000 (if you were to set MaxEntries to 1 in the request).
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getApproximatePages() {
	    return this.approximatePages;
	}
	
	/**
	 * public setter
	 *
     * 
     * The total number of pages that can be returned, given the same
     * query and filters in the request. As FindProducts only returns
     * up to 2000 products, the maximum possible value is theoretically
     * 2000 (if you were to set MaxEntries to 1 in the request).
     * 
     *
     * @param java.lang.Integer
	 */
	public void setApproximatePages(Integer approximatePages) {
	    this.approximatePages = approximatePages;
	}
	/**
     * public getter
     *
     * 
     * If true, more pages of results are available.
     * That is, PageNumber is less than ApproximatePages.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getMoreResults() {
	    return this.moreResults;
	}
	
	/**
	 * public setter
	 *
     * 
     * If true, more pages of results are available.
     * That is, PageNumber is less than ApproximatePages.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setMoreResults(Boolean moreResults) {
	    this.moreResults = moreResults;
	}
	/**
     * public getter
     *
     * 
     * A histogram that lists the number of matching products found and the domains
     * in which they were found. A <i>domain</i> describes a set of
     * categories that share certain common characteristics (as determined by eBay).
     * Each domain has its own name and ID. Only returned when you specify
     * DomainHistogram in IncludeSelector.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.DomainHistogramType
	 */
	public DomainHistogramType getDomainHistogram() {
	    return this.domainHistogram;
	}
	
	/**
	 * public setter
	 *
     * 
     * A histogram that lists the number of matching products found and the domains
     * in which they were found. A <i>domain</i> describes a set of
     * categories that share certain common characteristics (as determined by eBay).
     * Each domain has its own name and ID. Only returned when you specify
     * DomainHistogram in IncludeSelector.
     * 
     *
     * @param ebay.apis.eblbasecomponents.DomainHistogramType
	 */
	public void setDomainHistogram(DomainHistogramType domainHistogram) {
	    this.domainHistogram = domainHistogram;
	}
	/**
     * public getter
     *
     * 
     * A list of active items that were listed with the requested
     * product.
     * <br />
     * <br />
     * <span class="tablenote"><strong>Note:</strong>
     * ItemArray is returned only when you use ProductID in the search request
     * (not QueryKeywords) and you set IncludeSelector to Details or Items.
     * Returned only if eBay has currently matching items.
     * </span>
     * <br />
     * 
     *
     * @returns ebay.apis.eblbasecomponents.SimpleItemArrayType
	 */
	public SimpleItemArrayType getItemArray() {
	    return this.itemArray;
	}
	
	/**
	 * public setter
	 *
     * 
     * A list of active items that were listed with the requested
     * product.
     * <br />
     * <br />
     * <span class="tablenote"><strong>Note:</strong>
     * ItemArray is returned only when you use ProductID in the search request
     * (not QueryKeywords) and you set IncludeSelector to Details or Items.
     * Returned only if eBay has currently matching items.
     * </span>
     * <br />
     * 
     *
     * @param ebay.apis.eblbasecomponents.SimpleItemArrayType
	 */
	public void setItemArray(SimpleItemArrayType itemArray) {
	    this.itemArray = itemArray;
	}
	/**
     * public getter
     *
     * 
     * The number of the page of data returned. If many products
     * are found and multiple pages of results are available, use
     * this in combination with ApproximatePages and MoreResults
     * to decide which page to retrieve next. As FindProducts only
     * returns up to 2000 products, the maximum possible value is
     * theoretically 2000 (if you were to set MaxEntries to 1 in the
     * request).
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getPageNumber() {
	    return this.pageNumber;
	}
	
	/**
	 * public setter
	 *
     * 
     * The number of the page of data returned. If many products
     * are found and multiple pages of results are available, use
     * this in combination with ApproximatePages and MoreResults
     * to decide which page to retrieve next. As FindProducts only
     * returns up to 2000 products, the maximum possible value is
     * theoretically 2000 (if you were to set MaxEntries to 1 in the
     * request).
     * 
     *
     * @param java.lang.Integer
	 */
	public void setPageNumber(Integer pageNumber) {
	    this.pageNumber = pageNumber;
	}
	/**
     * public getter
     *
     * 
     * An eBay catalog product. This contains stock information about a particular
     * DVD, camera, set of golf clubs, or other product. When you use QueryKeywords
     * in the request, FindProducts returns a maximum of 20 products per page. When
     * you use ProductID in the request, FindProducts usually only returns 1 product
     * by default. (If more than one product matches the same ProductID, FindProducts
     * will return all of those products. As of the time of this writing, we expect
     * this to be a rare case.)
     * 
     *
     * @returns java.util.List<ebay.apis.eblbasecomponents.CatalogProductType>
	 */
	public List<CatalogProductType> getProduct() {
	    return this.product;
	}
	
	/**
	 * public setter
	 *
     * 
     * An eBay catalog product. This contains stock information about a particular
     * DVD, camera, set of golf clubs, or other product. When you use QueryKeywords
     * in the request, FindProducts returns a maximum of 20 products per page. When
     * you use ProductID in the request, FindProducts usually only returns 1 product
     * by default. (If more than one product matches the same ProductID, FindProducts
     * will return all of those products. As of the time of this writing, we expect
     * this to be a rare case.)
     * 
     *
     * @param java.util.List<ebay.apis.eblbasecomponents.CatalogProductType>
	 */
	public void setProduct(List<CatalogProductType> product) {
	    this.product = product;
	}
	/**
     * public getter
     *
     * 
     * The total number of matching products found. (If more than 2000 products are
     * found, the call fails with an error.)
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getTotalProducts() {
	    return this.totalProducts;
	}
	
	/**
	 * public setter
	 *
     * 
     * The total number of matching products found. (If more than 2000 products are
     * found, the call fails with an error.)
     * 
     *
     * @param java.lang.Integer
	 */
	public void setTotalProducts(Integer totalProducts) {
	    this.totalProducts = totalProducts;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether there are duplicated items not returned by this
     * response when HideDuplicateItems is true in the request.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getDuplicateItems() {
	    return this.duplicateItems;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether there are duplicated items not returned by this
     * response when HideDuplicateItems is true in the request.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setDuplicateItems(Boolean duplicateItems) {
	    this.duplicateItems = duplicateItems;
	}

}