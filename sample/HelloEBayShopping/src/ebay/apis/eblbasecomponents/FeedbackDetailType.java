// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package ebay.apis.eblbasecomponents;

import com.leansoft.nano.annotation.*;
import java.util.List;
import java.util.Date;

/**
 * 
 * Detailed feedback information for a user. Conveys the score for the
 * feedback, the textual comment, and other information.
 *   
 */
public class FeedbackDetailType   {

	@Element(name = "CommentingUser")
	private String commentingUser;
    
	@Element(name = "CommentingUserScore")
	private Integer commentingUserScore;
    
	@Element(name = "CommentText")
	private String commentText;
    
	@Element(name = "CommentTime")
	private Date commentTime;
    
	@Element(name = "CommentType")
	private CommentTypeCodeType commentType;
    
	@Element(name = "FeedbackResponse")
	private String feedbackResponse;
    
	@Element(name = "FollowUp")
	private String followUp;
    
	@Element(name = "ItemID")
	private String itemID;
    
	@Element(name = "Role")
	private TradingRoleCodeType role;
    
	@Element(name = "ItemTitle")
	private String itemTitle;
    
	@Element(name = "ItemPrice")
	private AmountType itemPrice;
    
	@Element(name = "FeedbackID")
	private String feedbackID;
    
	@Element(name = "TransactionID")
	private String transactionID;
    
	@Element(name = "CommentReplaced")
	private Boolean commentReplaced;
    
	@Element(name = "ResponseReplaced")
	private Boolean responseReplaced;
    
	@Element(name = "FollowUpReplaced")
	private Boolean followUpReplaced;
    
	@Element(name = "Countable")
	private Boolean countable;
    
	private List<Object> any;
    
    
	/**
     * public getter
     *
     * 
     * eBay user ID for the user who left the feedback.
     * 
     *
     * @returns java.lang.String
	 */
	public String getCommentingUser() {
	    return this.commentingUser;
	}
	
	/**
	 * public setter
	 *
     * 
     * eBay user ID for the user who left the feedback.
     * 
     *
     * @param java.lang.String
	 */
	public void setCommentingUser(String commentingUser) {
	    this.commentingUser = commentingUser;
	}
	/**
     * public getter
     *
     * 
     * Feedback score of the user in CommentingUser.
     * 
     *
     * @returns java.lang.Integer
	 */
	public Integer getCommentingUserScore() {
	    return this.commentingUserScore;
	}
	
	/**
	 * public setter
	 *
     * 
     * Feedback score of the user in CommentingUser.
     * 
     *
     * @param java.lang.Integer
	 */
	public void setCommentingUserScore(Integer commentingUserScore) {
	    this.commentingUserScore = commentingUserScore;
	}
	/**
     * public getter
     *
     * 
     * Text message left by the user in CommentingUser. Used to provide a more
     * in-depth description of the user's opinion of the transaction.
     * Returned as text in the language that the
     * comment was originally left in.
     * 
     *
     * @returns java.lang.String
	 */
	public String getCommentText() {
	    return this.commentText;
	}
	
	/**
	 * public setter
	 *
     * 
     * Text message left by the user in CommentingUser. Used to provide a more
     * in-depth description of the user's opinion of the transaction.
     * Returned as text in the language that the
     * comment was originally left in.
     * 
     *
     * @param java.lang.String
	 */
	public void setCommentText(String commentText) {
	    this.commentText = commentText;
	}
	/**
     * public getter
     *
     * 
     * Date and time (in GMT) that the feedback was submitted to eBay.
     * 
     *
     * @returns java.util.Date
	 */
	public Date getCommentTime() {
	    return this.commentTime;
	}
	
	/**
	 * public setter
	 *
     * 
     * Date and time (in GMT) that the feedback was submitted to eBay.
     * 
     *
     * @param java.util.Date
	 */
	public void setCommentTime(Date commentTime) {
	    this.commentTime = commentTime;
	}
	/**
     * public getter
     *
     * 
     * Type of feedback. Can be Positive, Neutral, Negative, or Withdrawn (see the
     * CommentTypeCodeType code list). Positive feedbacks add to the user's total
     * feedback score, negative feedbacks lower the score, and neutral feedbacks do
     * not affect the score (but do affect the overall picture of the user's online
     * reputation).
     * 
     *
     * @returns ebay.apis.eblbasecomponents.CommentTypeCodeType
	 */
	public CommentTypeCodeType getCommentType() {
	    return this.commentType;
	}
	
	/**
	 * public setter
	 *
     * 
     * Type of feedback. Can be Positive, Neutral, Negative, or Withdrawn (see the
     * CommentTypeCodeType code list). Positive feedbacks add to the user's total
     * feedback score, negative feedbacks lower the score, and neutral feedbacks do
     * not affect the score (but do affect the overall picture of the user's online
     * reputation).
     * 
     *
     * @param ebay.apis.eblbasecomponents.CommentTypeCodeType
	 */
	public void setCommentType(CommentTypeCodeType commentType) {
	    this.commentType = commentType;
	}
	/**
     * public getter
     *
     * 
     * Textual comment that the user targeted by feedback may leave
     * in response or rebuttal to the feedback.
     * 
     *
     * @returns java.lang.String
	 */
	public String getFeedbackResponse() {
	    return this.feedbackResponse;
	}
	
	/**
	 * public setter
	 *
     * 
     * Textual comment that the user targeted by feedback may leave
     * in response or rebuttal to the feedback.
     * 
     *
     * @param java.lang.String
	 */
	public void setFeedbackResponse(String feedbackResponse) {
	    this.feedbackResponse = feedbackResponse;
	}
	/**
     * public getter
     *
     * 
     * Explanation a user can give to a response.
     * 
     *
     * @returns java.lang.String
	 */
	public String getFollowUp() {
	    return this.followUp;
	}
	
	/**
	 * public setter
	 *
     * 
     * Explanation a user can give to a response.
     * 
     *
     * @param java.lang.String
	 */
	public void setFollowUp(String followUp) {
	    this.followUp = followUp;
	}
	/**
     * public getter
     *
     * 
     * The ID that uniquely identifies the item listing.
     * 
     *
     * @returns java.lang.String
	 */
	public String getItemID() {
	    return this.itemID;
	}
	
	/**
	 * public setter
	 *
     * 
     * The ID that uniquely identifies the item listing.
     * 
     *
     * @param java.lang.String
	 */
	public void setItemID(String itemID) {
	    this.itemID = itemID;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether the user who was the feedback recipient was a Buyer or the
     * Seller for that transaction.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.TradingRoleCodeType
	 */
	public TradingRoleCodeType getRole() {
	    return this.role;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether the user who was the feedback recipient was a Buyer or the
     * Seller for that transaction.
     * 
     *
     * @param ebay.apis.eblbasecomponents.TradingRoleCodeType
	 */
	public void setRole(TradingRoleCodeType role) {
	    this.role = role;
	}
	/**
     * public getter
     *
     * 
     * Name of the listing for which feedback was provided.
     * Returned as CDATA.
     * Not returned if a listing ended more than 90 days ago.
     * 
     *
     * @returns java.lang.String
	 */
	public String getItemTitle() {
	    return this.itemTitle;
	}
	
	/**
	 * public setter
	 *
     * 
     * Name of the listing for which feedback was provided.
     * Returned as CDATA.
     * Not returned if a listing ended more than 90 days ago.
     * 
     *
     * @param java.lang.String
	 */
	public void setItemTitle(String itemTitle) {
	    this.itemTitle = itemTitle;
	}
	/**
     * public getter
     *
     * 
     * The final price for the item, associated with
     * the currency identified by the currencyId attribute of the AmountType.
     * Not returned if a listing ended more than 90 days ago.
     * 
     *
     * @returns ebay.apis.eblbasecomponents.AmountType
	 */
	public AmountType getItemPrice() {
	    return this.itemPrice;
	}
	
	/**
	 * public setter
	 *
     * 
     * The final price for the item, associated with
     * the currency identified by the currencyId attribute of the AmountType.
     * Not returned if a listing ended more than 90 days ago.
     * 
     *
     * @param ebay.apis.eblbasecomponents.AmountType
	 */
	public void setItemPrice(AmountType itemPrice) {
	    this.itemPrice = itemPrice;
	}
	/**
     * public getter
     *
     * 
     * Unique identifier for the feedback entry.
     * 
     *
     * @returns java.lang.String
	 */
	public String getFeedbackID() {
	    return this.feedbackID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Unique identifier for the feedback entry.
     * 
     *
     * @param java.lang.String
	 */
	public void setFeedbackID(String feedbackID) {
	    this.feedbackID = feedbackID;
	}
	/**
     * public getter
     *
     * 
     * Unique identifier for the transaction about which
     * this feedback entry was left.
     * This field is not returned in the case of TransactionIDs from Chinese auction listings,
     * because a value of zero is used for TransactionIDs in such cases.
     * 
     *
     * @returns java.lang.String
	 */
	public String getTransactionID() {
	    return this.transactionID;
	}
	
	/**
	 * public setter
	 *
     * 
     * Unique identifier for the transaction about which
     * this feedback entry was left.
     * This field is not returned in the case of TransactionIDs from Chinese auction listings,
     * because a value of zero is used for TransactionIDs in such cases.
     * 
     *
     * @param java.lang.String
	 */
	public void setTransactionID(String transactionID) {
	    this.transactionID = transactionID;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether eBay replaced the comment with a message
     * that the comment was removed.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getCommentReplaced() {
	    return this.commentReplaced;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether eBay replaced the comment with a message
     * that the comment was removed.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setCommentReplaced(Boolean commentReplaced) {
	    this.commentReplaced = commentReplaced;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether eBay replaced the response with a message
     * that the response was removed.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getResponseReplaced() {
	    return this.responseReplaced;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether eBay replaced the response with a message
     * that the response was removed.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setResponseReplaced(Boolean responseReplaced) {
	    this.responseReplaced = responseReplaced;
	}
	/**
     * public getter
     *
     * 
     * Indicates whether eBay replaced the follow-up with a message
     * that the follow-up was removed.
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getFollowUpReplaced() {
	    return this.followUpReplaced;
	}
	
	/**
	 * public setter
	 *
     * 
     * Indicates whether eBay replaced the follow-up with a message
     * that the follow-up was removed.
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setFollowUpReplaced(Boolean followUpReplaced) {
	    this.followUpReplaced = followUpReplaced;
	}
	/**
     * public getter
     *
     * 
     * Specifies if a user's feedback score is or is not countable. This field is
     * returned only when a user's feedback score is not countable (value is false).
     * 
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getCountable() {
	    return this.countable;
	}
	
	/**
	 * public setter
	 *
     * 
     * Specifies if a user's feedback score is or is not countable. This field is
     * returned only when a user's feedback score is not countable (value is false).
     * 
     *
     * @param java.lang.Boolean
	 */
	public void setCountable(Boolean countable) {
	    this.countable = countable;
	}
	/**
	 * public getter
	 *
     * @returns java.util.List<java.lang.Object>
	 */
	public List<Object> getAny() {
	    return this.any;
	}
	
	/**
	 * public setter
	 *
     * @param java.util.List<java.lang.Object>
	 */
	public void setAny(List<Object> any) {
	    this.any = any;
	}

}